(defrule
(true)
=>
(set-goal g-current-rule PENDING)
)

;Function: Get Attack Delay (requires fn-unit1-id to be set, outputs to fn-output)
	(defrule
	(game-time > 2)
	=>
	(up-get-rule-id fn-get-attack-delay-rule-id)
	(disable-self)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	=>
	(set-goal fn-output PENDING)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == archer)
		(up-object-data object-data-base-type == hand-cannoneer))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 350)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == skirmisher)
		(or
			(up-object-data object-data-base-type == genitour)
			(or
				(up-object-data object-data-base-type == composite-bowman)
				(or
					(up-object-data object-data-base-type == longbowman)
					(or
						(up-object-data object-data-upgrade-type == elite-kipchak)
						(or
							(up-object-data object-data-base-type == kamayuk)
							(or
								(up-object-data object-data-base-type == genoese-crossbowman)
								(or
									(up-object-data object-data-base-type == plumed-archer)
									(up-object-data object-data-base-type == mangudai)))))))))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 500)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == steppe-lancer)
		(up-object-data object-data-base-type == rattan-archer))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 680)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(up-object-data object-data-base-type == cavalry-archer)
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 910)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == mangonel)
		(up-object-data object-data-upgrade-type == elite-janissary))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 0)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == scorpion)
		(or
			(up-object-data object-data-base-type == bombard-cannon)
			(or
				(up-object-data object-data-base-type == chu-ko-nu)
				(up-object-data object-data-upgrade-type == elite-mameluke))))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 210)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == elephant-archer)
		(up-object-data object-data-base-type == ballista-elephant))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 390)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == conquistador)
		(or
			(up-object-data object-data-upgrade-type == janissary)
			(up-object-data object-data-upgrade-type == mameluke)))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 400)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(up-object-data object-data-base-type == camel-archer)
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 530)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == arambai)
		(up-object-data object-data-base-type == organ-gun))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 600)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == ratha-ranged)
		(up-object-data object-data-base-type == hussite-wagon))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 620)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == steppe-lancer)
		(up-object-data object-data-base-type == rattan-archer))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 680)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-base-type == slinger)
		(or
			(up-object-data object-data-upgrade-type == elite-throwing-axeman)
			(up-object-data object-data-base-type == chakram-thrower)))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 800)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(up-set-target-by-id g: fn-unit-id)
	(or
		(up-object-data object-data-upgrade-type == throwing-axeman)
		(or
			(up-object-data object-data-base-type == war-wagon)
			(up-object-data object-data-base-type == gbeto)))
	(up-compare-goal g-end-get-attack-delay-rule-id > 0)
	=>
	(set-goal fn-output 1000)
	(up-jump-direct g: g-end-get-attack-delay-rule-id)
	)

	(defrule
	(up-compare-goal g-current-rule >= 0)
	(goal fn-output PENDING)
	(up-set-target-by-id g: fn-unit-id)
    =>
	(up-chat-data-to-self "Unknown unit type, set attack delay to 1000 %d" g: fn-output)
	(set-goal fn-output 1000)
    )
	
	(defrule
	(true)
	=>
	(up-get-rule-id g-end-get-attack-delay-rule-id)
	(disable-self)
	)
		
	(defrule
	(up-compare-goal g-current-rule >= 0)
	=>
	(up-modify-goal g-current-rule c:+ 1)
	(up-jump-direct g: g-current-rule)
	)

