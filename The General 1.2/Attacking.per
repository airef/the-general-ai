;Attacking.per

(load "The General 1.2/Functions/Reset")

;=========================<>=========================
;		   		  SET TARGET PLAYER
;=========================<>=========================

	(load "The General 1.2/Functions/Reset Mini")

	;If helping ally, set target player to -1 to encourage helping allies (does this work?)
	; (defrule
	; (goal g-attack-objective HELP-ALLY-DEFEND)
	; (up-compare-sn sn-target-player-number != -1)
	; =>
	; (up-modify-sn sn-target-player-number c:= -1)
	; )

	;If no enemy building found, set target player randomly
	(defrule
	(goal g-attack-objective ATTACK-TARGET-ENEMY)
	(or
		(players-building-count every-enemy <= 0)
		(up-compare-goal g-closest-enemy <= 0))
	(or
		(up-compare-goal g-game-focus != DEFENSIVE)
		(goal g-enemy-units-in-town 0))
	(up-compare-sn sn-target-player-number <= 0)
	=>
	(up-find-player enemy find-random g-temp)
	(up-modify-sn sn-target-player-number g:= g-temp)
	)

	;If enemy building found, set target to be closest enemy
	(defrule
	(goal g-attack-objective ATTACK-TARGET-ENEMY)
	(players-building-count any-enemy > 0)
	(up-compare-goal g-closest-enemy > 0)
	(or
		(up-compare-goal g-game-focus != DEFENSIVE)
		(goal g-enemy-units-in-town 0))
	(up-compare-sn sn-target-player-number g:!= g-closest-enemy)
	=>
	(up-modify-sn sn-target-player-number g:= g-closest-enemy)
	)

	(load "The General 1.2/Functions/Reset Mini")

	;If under attack, set target player as the player attacking us instead
	(defrule
	(goal g-attack-objective ATTACK-TARGET-ENEMY)
	(up-compare-goal g-game-focus == DEFENSIVE)
	(up-compare-goal g-enemy-units-in-town > 0)
	=>
	(set-strategic-number sn-focus-player-number 1)
	(set-goal g-temp2 PENDING)	;Player with most soldiers
	(set-goal g-temp3 0)		;Highest player soldier count in our town
	)

		(defrule
		(goal g-attack-objective ATTACK-TARGET-ENEMY)
		(up-compare-goal g-game-focus == DEFENSIVE)
		(up-compare-goal g-enemy-units-in-town > 0)
		(nand
			(player-in-game focus-player)
			(stance-toward focus-player enemy))
		(up-compare-sn sn-focus-player-number <= MAX-PLAYERS)
		=>
		(up-modify-sn sn-focus-player-number c:+ 1)
		(up-jump-rule -1)
		)

		(defrule
		(goal g-attack-objective ATTACK-TARGET-ENEMY)
		(up-compare-goal g-game-focus == DEFENSIVE)
		(up-compare-goal g-enemy-units-in-town > 0)
		(up-compare-sn sn-focus-player-number <= MAX-PLAYERS)
		=>
		(up-modify-goal g-temp s:= csn-peaceful-town-size)
		(up-modify-goal g-temp c:* 2)	;increase distance to search for enemy buildings by 200% because csn-peaceful-town-size...
		(up-modify-goal g-temp c:min 30)	;...is measured as a square around the TC, not a circle
		(up-full-reset-search)				
		(up-set-target-point g-position-self-x)	
		(up-filter-distance c: -1 g: g-temp)	;search for buildings within csn-peaceful-town-size
		(up-filter-include cmdid-military -1 -1 -1)
		(up-find-remote c: any-objects c: 40)
		(up-get-search-state g-local-total)
		)

		(defrule
		(goal g-attack-objective ATTACK-TARGET-ENEMY)
		(up-compare-goal g-game-focus == DEFENSIVE)
		(up-compare-goal g-enemy-units-in-town > 0)
		(up-compare-sn sn-focus-player-number <= MAX-PLAYERS)
		(up-compare-goal g-remote-total g:> g-temp3)
		=>
		(up-modify-goal g-temp2 s:= sn-focus-player-number)
		(up-modify-goal g-temp3 g:= g-remote-total)
		)

		(defrule
		(goal g-attack-objective ATTACK-TARGET-ENEMY)
		(up-compare-goal g-game-focus == DEFENSIVE)
		(up-compare-goal g-enemy-units-in-town > 0)
		(up-compare-sn sn-focus-player-number < MAX-PLAYERS)
		=>
		(up-modify-sn sn-focus-player-number c:+ 1)
		(up-jump-rule -4)
		)

	(defrule
	(goal g-attack-objective ATTACK-TARGET-ENEMY)
	(up-compare-goal g-game-focus == DEFENSIVE)
	(up-compare-goal g-enemy-units-in-town > 0)
	(up-compare-goal g-temp2 > 0)
	(up-compare-sn sn-target-player-number g:!= g-temp2)
	=>
	(up-modify-sn sn-target-player-number g:= g-temp2)
	; (up-chat-data-to-player my-player-number "p%d is attacking us, switch target" s: sn-target-player-number)
	)

	;If defensive, but didn't find any enemy units in the town, fall back to other options above
	(defrule
	(goal g-attack-objective ATTACK-TARGET-ENEMY)
	(up-compare-goal g-game-focus == DEFENSIVE)
	(up-compare-goal g-enemy-units-in-town > 0)
	(up-compare-goal g-temp2 <= 0)
	(or
		(players-building-count every-enemy <= 0)
		(up-compare-goal g-closest-enemy <= 0))
	=>
	(up-find-player enemy find-random g-temp)
	(up-modify-sn sn-target-player-number g:= g-temp)
	)

	(defrule
	(goal g-attack-objective ATTACK-TARGET-ENEMY)
	(up-compare-goal g-game-focus == DEFENSIVE)
	(up-compare-goal g-enemy-units-in-town > 0)
	(up-compare-goal g-temp2 <= 0)
	(players-building-count any-enemy > 0)
	(up-compare-goal g-closest-enemy > 0)
	=>
	(up-modify-sn sn-target-player-number g:= g-closest-enemy)
	)

	(load "The General 1.2/Functions/Reset Mini")
	
	;If helping ally defend, set target player to attacking enemy
	(defrule
	(goal g-attack-objective HELP-ALLY-DEFEND)
	=>
	(up-modify-sn sn-focus-player-number s:= csn-ally-to-defend)
	(up-full-reset-search)
	(up-find-remote c: town-center c: 10)
	(up-find-remote c: house c: 10)
	(up-find-remote c: lumber-camp c: 5)
	(up-clean-search search-remote object-data-id search-order-asc)
	)
	
	(defrule
	(goal g-attack-objective HELP-ALLY-DEFEND)
	(up-set-target-object search-remote c: 0)
	=>
	(up-get-point position-object g-point-x)
	(up-set-target-point g-point-x)
	(up-full-reset-search)
	(up-filter-distance c: -1 c: 40)
	(up-filter-include cmdid-military -1 -1 -1)
	(set-strategic-number sn-focus-player-number 1)
	)
	
		(defrule
		(goal g-attack-objective HELP-ALLY-DEFEND)
		(up-compare-goal g-point-x >= 0)
		(nand
			(player-in-game focus-player)
			(stance-toward focus-player enemy))
		(up-compare-sn sn-focus-player-number <= MAX-PLAYERS)
		=>
		(up-modify-sn sn-focus-player-number c:+ 1)
		(up-jump-rule -1)
		)
	
		(defrule
		(goal g-attack-objective HELP-ALLY-DEFEND)
		(up-compare-goal g-point-x >= 0)
		(up-compare-sn sn-focus-player-number <= MAX-PLAYERS)
		=>
		(up-find-remote c: any-objects c: 40)
		(up-get-search-state g-local-total)
		)
	
		(defrule
		(goal g-attack-objective HELP-ALLY-DEFEND)
		(up-compare-goal g-point-x >= 0)
		(up-compare-goal g-remote-total < 40)
		(up-compare-sn sn-focus-player-number < MAX-PLAYERS)
		=>
		(up-modify-sn sn-focus-player-number c:+ 1)
		(up-jump-rule -3)
		)
	
	(defrule
	(goal g-attack-objective HELP-ALLY-DEFEND)
	(up-compare-goal g-point-x >= 0)
	(up-compare-goal g-remote-total >= 3)
	=>
	(up-clean-search search-remote object-data-distance search-order-asc)
	)
	
	(defrule
	(goal g-attack-objective HELP-ALLY-DEFEND)
	(up-compare-goal g-point-x >= 0)
	(up-compare-goal g-remote-total >= 3)
	(up-set-target-object search-remote c: 0)
	=>
	(up-modify-goal g-temp2 s:= sn-target-player-number)
	(up-get-object-data object-data-player g-temp)
	(up-modify-sn sn-target-player-number g:= g-temp)
	)

	; (defrule
	; (goal g-attack-objective HELP-ALLY-DEFEND)
	; (up-compare-goal g-point-x >= 0)
	; (up-compare-goal g-remote-total >= 3)
	; (up-set-target-object search-remote c: 0)
	; (up-compare-goal g-temp g:!= g-temp2)
	; =>
	; (up-chat-data-to-all "prepare to assist ally against p%d" g: g-temp)
	; )

	;Set Target Player Position
	(defrule
	(or
		(up-compare-goal g-closest-enemy <= 0)
		(players-building-count target-player == 0))
	=>
	(up-get-point position-flank g-target-enemy-x)
	)

	(load "The General 1.2/Functions/Reset Mini")

	(defrule
	(up-compare-goal g-closest-enemy > 0)
	(players-building-count target-player > 0)
	=>
	(up-full-reset-search)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-find-remote c: town-center c: 5)
	(up-clean-search search-remote object-data-id search-order-asc)
	)

	(defrule
	(up-compare-goal g-closest-enemy > 0)
	(players-building-count target-player > 0)
	(up-set-target-object search-remote c: 0)
	=>
	(up-get-point position-object g-target-enemy-x)
	)

	(defrule
	(up-compare-goal g-closest-enemy > 0)
	(players-building-count target-player > 0)
	(not
		(up-set-target-object search-remote c: 0))
	=>
	(up-get-point position-target g-target-enemy-x)
	)

;=========================<>=========================
;		   		 ADJUST ATTACK STATUS
;=========================<>=========================

	(defrule
	(up-compare-goal g-attack-status < BEFORE-CASTLE-ATTACKS)
	(goal g-attacking NO)
	(current-age == castle-age)
	=>
	(set-goal g-attack-status BEFORE-CASTLE-ATTACKS)
	)

	(defrule
	(goal g-attack-status BEFORE-CASTLE-ATTACKS)
	(current-age == castle-age)
	(current-age-time >= 480)
	=>
	(set-goal g-attack-status BEFORE-LATER-CASTLE-ATTACKS)
	(up-modify-flag g-flag c:+ FIRST-ATTACK-LAUNCHED)
	)

	; (defrule
	; (goal g-game-focus BOOM)
	; (up-compare-goal g-current-strategy >= BOOMC-STRATS-START)	;Boom Strategies
	; (up-compare-goal g-current-strategy <= BOOMI-STRATS-END)
	; (goal g-attack-status BEFORE-CASTLE-ATTACKS)
	; =>
	; (set-goal g-attack-status BEFORE-LATER-CASTLE-ATTACKS)
	; (up-modify-flag g-flag c:+ FIRST-ATTACK-LAUNCHED)
	; )

	(defrule
	(up-compare-goal g-attack-status < BEFORE-IMPERIAL-ATTACKS)
	(goal g-attacking NO)
	(current-age == imperial-age)
	=>
	(set-goal g-attack-status BEFORE-IMPERIAL-ATTACKS)
	)

;=========================<>=========================
;		  CALCULATE MILITARY AND POP PARITY
;=========================<>=========================

	;---------------------------------------
	;	GOAL: g-top-enemy-military-parity
	;---------------------------------------

		(load "The General 1.2/Functions/Reset Mini")

		;The difference between our military pop and the highest military pop of any enemy, > 0 means we have superiority

		(defrule
		(player-in-game any-enemy)
		=>
		(up-get-fact military-population 0 g-top-enemy-military-parity)
		(up-get-fact-max any-enemy military-population 0 g-temp)
		(up-modify-goal g-top-enemy-military-parity g:- g-temp)	;subtract the military population of top enemy from our military population
		)

	;----------------------------------
	;	GOAL: g-top-enemy-pop-parity
	;----------------------------------

		(load "The General 1.2/Functions/Reset Mini")

		;The difference between our total pop and the highest total pop of any enemy, > 0 means we have superiority

		(defrule
		(player-in-game any-enemy)
		=>
		(up-get-fact population 0 g-top-enemy-pop-parity)
		(up-get-fact-max any-enemy population 0 g-temp)
		(up-modify-goal g-top-enemy-pop-parity g:- g-temp)	;subtract the total population of top enemy from our total population
		)

;=========================<>=========================
;		   REQUIRED AND STOP ATTACK NUMBERS
;=========================<>=========================

	;--------------
	;	Dark Age
	;--------------

		(defrule
		(goal g-attack-status BEFORE-CASTLE-ATTACKS)
		(goal g-strategy-type DRUSH)
		=>
		(set-goal g-required-attack-num 4)
		(set-goal g-stop-attack-num 2)
		)

	;----------------
	;	Feudal Age
	;----------------

		(defrule
		(goal g-attack-status BEFORE-CASTLE-ATTACKS)
		(goal g-strategy-type FLUSH)
		=>
		(set-goal g-required-attack-num 6)
		(set-goal g-stop-attack-num 4)
		)

	;-----------------------------
	;	Castle/Imperial Attacks
	;-----------------------------

		(load "The General 1.2/Functions/Reset Mini")

		;------------------
		;	First Attack
		;------------------

			;Hardcoded numbers for first attack
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			=>
			(set-goal g-required-attack-num 14)
			)

			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(or
				(goal g-primary-unit-class cavalry-class)
				(or
					(goal g-primary-unit-class siege-weapon-class)
					(goal g-primary-unit-class scorpion-class)))
			(up-compare-goal g-current-strategy != FC-MORLEY)
			=>
			(set-goal g-required-attack-num 6)
			)

			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(goal g-target-age-parity WE-ARE-AHEAD)
			(or
				(goal g-primary-unit-class infantry-class)
				(or
					(goal g-primary-unit-class cavalry-archer-class)
					(goal g-primary-unit-class cavalry-cannon-class)))
			=>
			(set-goal g-required-attack-num 8)
			)

			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(up-compare-goal g-target-age-parity != WE-ARE-AHEAD)
			(or
				(goal g-primary-unit-class infantry-class)
				(or
					(goal g-primary-unit-class cavalry-archer-class)
					(goal g-primary-unit-class cavalry-cannon-class)))
			=>
			(set-goal g-required-attack-num 10)
			)
			
			;Adjust required attacking number if partner is under attack
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			=>
			(up-modify-sn sn-focus-player-number g:= g-team-partner)
			)

			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			(or
				(up-allied-goal focus-player g-town-under-attack == YES)
				(up-allied-goal focus-player g-enemy-units-in-town > 5))
			=>
			(up-modify-goal g-required-attack-num c:- 2)
			)

			#load-if-defined UP-3-PLAYER-TEAM
			;Adjust required attacking number if partner is attacking
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			(up-allied-goal focus-player g-attacking == YES)
			=>
			(up-modify-goal g-required-attack-num c:- 2)
			)
			#end-if
			#load-if-defined UP-4-PLAYER-TEAM
			;Adjust required attacking number if partner is attacking
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			(up-allied-goal focus-player g-attacking == YES)
			(up-allied-goal focus-player g-team-partner == my-player-number)
			=>
			(up-modify-goal g-required-attack-num c:- 2)
			)
			#end-if

			;Adjust min and max required attack numbers
			;Adjust stop attack numbers
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(goal g-position FLANK)
			(up-compare-goal g-target-age-parity == WE-ARE-AHEAD)
			(nor
				(goal g-primary-unit battle-elephant)
				(goal g-primary-unit elephant-archer))
			=>
			(up-modify-goal g-temp g:= g-target-military-parity)
			(up-modify-goal g-temp c:min 0)
			(up-modify-goal g-temp c:* -1)
			(up-modify-goal g-temp c:%* 25)
			(up-modify-goal g-temp c:max 3)
			(up-modify-goal g-required-attack-num g:+ g-temp)
			(up-modify-goal g-required-attack-num c:max 5)
			(up-modify-goal g-required-attack-num c:min 14)
			(up-modify-goal g-required-attack-num g:min g-desired-num-military)
			)
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(goal g-position FLANK)
			(up-compare-goal g-target-age-parity != WE-ARE-AHEAD)
			(nor
				(goal g-primary-unit battle-elephant)
				(goal g-primary-unit elephant-archer))
			=>
			(up-modify-goal g-temp g:= g-target-military-parity)
			(up-modify-goal g-temp c:min 0)
			(up-modify-goal g-temp c:* -1)
			(up-modify-goal g-temp c:%* 40)
			(up-modify-goal g-temp c:min 5)
			(up-modify-goal g-required-attack-num g:+ g-temp)
			(up-modify-goal g-required-attack-num c:max 7)
			(up-modify-goal g-required-attack-num c:min 18)
			(up-modify-goal g-required-attack-num g:min g-desired-num-military)
			)

			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(up-compare-goal g-current-strategy == FC-MORLEY)
			(goal g-difficulty EXTREME)
			=>
			(set-goal g-required-attack-num 5)
			)

			;Adjust required military numbers for defenses
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(players-building-type-count target-player castle > 0)
			(up-compare-goal g-siege-class < 2)
			=>
			(up-modify-goal g-required-attack-num c:+ 5)
			)

			;Adjust numbers for town under attack
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(goal g-town-under-attack YES)
			=>
			(up-modify-goal g-required-attack-num c:+ 5)
			)

			;Adjust numbers for difficulty
			(defrule
			(goal g-difficulty MODERATE)
			=>
			(up-modify-goal g-required-attack-num c:+ 5)
			)
			(defrule
			(goal g-difficulty STANDARD)
			=>
			(up-modify-goal g-required-attack-num c:+ 12)
			)
			(defrule
			(goal g-difficulty EASIEST)
			=>
			(up-modify-goal g-required-attack-num c:+ 25)
			)

			;Adjust stop attack numbers based on required attack numbers
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(goal g-target-age-parity WE-ARE-AHEAD)
			=>
			(up-modify-goal g-stop-attack-num g:= g-required-attack-num)
			(up-modify-goal g-stop-attack-num c:%* 60)
			(up-modify-goal g-stop-attack-num c:max 5)
			)

			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status <= FIRST-CASTLE-ATTACK)
			(up-compare-goal g-target-age-parity != WE-ARE-AHEAD)
			=>
			(up-modify-goal g-stop-attack-num g:= g-required-attack-num)
			(up-modify-goal g-stop-attack-num c:%* 70)
			(up-modify-goal g-stop-attack-num c:max 5)
			)
		
		;------------------------
		;	After First Attack
		;------------------------

			;Required attacking number is affected by the enemy military pop, civilian pop, and age
			(defrule
			(current-age >= castle-age)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			(players-population every-enemy < EIGHTY-PERCENT-POP)
			=>
			(up-get-fact military-population 0 g-required-attack-num)
			(up-modify-goal g-required-attack-num c:+ 5)
			(up-modify-goal g-temp g:= g-target-pop-parity)
			(up-modify-goal g-temp c:/ 3)
			(up-modify-goal g-temp2 g:= g-target-military-parity)
			(up-modify-goal g-temp2 c:/ 2)							;divide pop/military parity by 2
			(up-modify-goal g-temp g:+ g-temp2)
			(up-modify-goal g-temp c:max -5)						;restrict parity effect between -5 and 5
			(up-modify-goal g-temp c:min 5)
			(up-modify-goal g-required-attack-num g:- g-temp)
			; (up-chat-data-to-all "Required1 %d" g: g-required-attack-num)
			)

			(defrule
			(current-age >= castle-age)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			(players-population any-enemy >= EIGHTY-PERCENT-POP)
			=>
			(up-get-fact military-population 0 g-required-attack-num)
			(up-modify-goal g-required-attack-num c:+ 5)
			(up-modify-goal g-temp g:= g-target-pop-parity)
			(up-modify-goal g-temp g:+ g-top-enemy-pop-parity)
			(up-modify-goal g-temp c:/ 6)							;find average between target and top enemy parity and divide by 3
			(up-modify-goal g-temp2 g:= g-target-military-parity)
			(up-modify-goal g-temp2 g:+ g-top-enemy-military-parity)
			(up-modify-goal g-temp2 c:/ 4)							;find average between target and top enemy military parity and divide by 2
			(up-modify-goal g-temp g:+ g-temp2)
			(up-modify-goal g-temp c:/ 2)							;divide pop/military parity by 2
			(up-modify-goal g-temp c:max -5)						;restrict villager parity effect between -5 and 5
			(up-modify-goal g-temp c:min 5)
			(up-modify-goal g-required-attack-num g:- g-temp)
			; (up-chat-data-to-all "Required1 %d" g: g-required-attack-num)
			)

			;Adjust required attacking number depending on age parity
			(defrule
			(current-age >= castle-age)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			(goal g-target-age-parity WE-ARE-AHEAD)
			=>
			(up-get-fact military-population 0 g-temp)
			(up-modify-goal g-temp c:/ 4)
			(up-modify-goal g-temp c:min 5)
			(up-modify-goal g-required-attack-num g:- g-temp)
			; (up-chat-data-to-all "Required2 %d" g: g-required-attack-num)
			)

			(defrule
			(current-age >= castle-age)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			(up-get-fact current-age 0 g-temp)						;store our current age
			(up-get-fact-max any-enemy current-age 0 g-temp2)		;store current age of most advanced enemy
			(up-compare-goal g-temp g:< g-temp2)
			=>
			(up-modify-goal g-required-attack-num c:+ 5)
			; (up-chat-data-to-all "Required3 %d" g: g-required-attack-num)
			)

			;Adjust required attacking number if we are saving for imperial
			(defrule
			(up-compare-goal g-age-status >= SAVE-FOR-IMPERIAL)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			(up-compare-goal g-primary-unit-tech-progress < REQUIRED-IMPERIAL-COMPLETE)
			(up-compare-goal g-target-pop-parity < 35)
			=>
			(up-modify-goal g-required-attack-num c:+ 15)
			; (up-chat-data-to-all "Required4 %d" g: g-required-attack-num)
			)

			;Adjust required attacking number for our military units and enemy military units
			(defrule
			(current-age >= castle-age)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			=>
			(up-get-fact unit-type-count cavalry-class g-temp)
			(up-get-fact unit-type-count skirmisher-line g-temp2)
			(up-modify-goal g-temp g:- g-temp2)
			(up-modify-goal g-temp c:/ 3)
			(up-modify-goal g-required-attack-num g:+ g-temp)
			(up-modify-goal g-temp g:= g-enemy-heavy-cavalry-count)
			(up-modify-goal g-temp2 g:= g-enemy-elephants-count)
			(up-modify-goal g-temp g:+ g-temp2)
			(up-modify-goal g-temp2 g:= g-enemy-skirmishers-count)
			(up-modify-goal g-temp g:- g-temp2)
			(up-modify-goal g-temp c:/ 3)
			(up-modify-goal g-required-attack-num g:- g-temp)
			; (up-chat-data-to-all "Required6 %d" g: g-required-attack-num)
			)

			;Adjust required attacking number if partner is under attack
			(defrule
			(current-age >= castle-age)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			=>
			(up-modify-sn sn-focus-player-number g:= g-team-partner)
			)

			(defrule
			(current-age == castle-age)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			(or
				(up-allied-goal focus-player g-town-under-attack == YES)
				(up-allied-goal focus-player g-enemy-units-in-town > 5))
			=>
			(up-modify-goal g-required-attack-num c:- 2)
			)
			(defrule
			(current-age == imperial-age)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			(or
				(up-allied-goal focus-player g-town-under-attack == YES)
				(up-allied-goal focus-player g-enemy-units-in-town > 10))
			=>
			(up-modify-goal g-required-attack-num c:- 8)
			)

			#load-if-defined UP-3-PLAYER-TEAM
			;Adjust required attacking number if partner is attacking
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			(up-allied-goal focus-player g-attacking == YES)
			(up-allied-goal focus-player g-team-partner == my-player-number)
			=>
			(up-modify-goal g-required-attack-num c:- 5)
			)
			(defrule
			(current-age == imperial-age)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			(up-allied-goal focus-player g-attacking == YES)
			(up-allied-goal focus-player g-team-partner == my-player-number)
			=>
			(up-modify-goal g-required-attack-num c:- 10)
			)
			#end-if

			#load-if-defined UP-4-PLAYER-TEAM
			;Adjust required attacking number if partner is attacking
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			(up-allied-goal focus-player g-attacking == YES)
			(up-allied-goal focus-player g-team-partner == my-player-number)
			=>
			(up-modify-goal g-required-attack-num c:- 5)
			)
			(defrule
			(current-age == imperial-age)
			(up-compare-goal g-team-partner-identity == THE-GENERAL)
			(up-allied-goal focus-player g-attacking == YES)
			(up-allied-goal focus-player g-team-partner == my-player-number)
			=>
			(up-modify-goal g-required-attack-num c:- 10)
			)
			#end-if

			;Adjust required military numbers for defenses
			(defrule
			(players-building-type-count target-player castle > 0)
			(up-compare-goal g-siege-class < 2)
			=>
			(up-modify-goal g-required-attack-num c:+ 15)
			)

			;Adjust for imperial age
			(defrule
			(current-age == imperial-age)
			(players-current-age any-enemy == imperial-age)
			(population < NINETY-PERCENT-POP)
			(up-compare-goal g-difficulty < HARDEST)
			=>
			(up-modify-goal g-required-attack-num c:+ 10)
			)

			;Adjust numbers for town under attack
			(defrule
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			(goal g-town-under-attack YES)
			=>
			(up-modify-goal g-required-attack-num c:+ 10)
			)

			;Adjust numbers for max villager pop
			(defrule
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			=>
			(up-modify-goal g-temp g:= g-desired-num-villager)
			(up-modify-goal g-temp g:+ g-desired-num-trade-cart)
			(up-modify-goal g-temp g:+ g-desired-num-trade-cog)
			(up-modify-goal g-temp c:%* 75)
			(up-modify-goal g-required-attack-num g:min g-temp)
			)

			;Set required/stop attack numbers
			(defrule
			(current-age == castle-age)
			(up-compare-goal g-attack-status > FIRST-CASTLE-ATTACK)
			=>
			(up-modify-goal g-required-attack-num c:max 12)
			(up-modify-goal g-temp g:= g-desired-num-military)
			(up-modify-goal g-temp c:- 5)
			(up-modify-goal g-required-attack-num g:min g-temp)
			(up-modify-goal g-stop-attack-num g:= g-required-attack-num)
			(up-modify-goal g-stop-attack-num c:%* 70)
			; (up-chat-data-to-all "Required9 %d" g: g-required-attack-num)
			)

			(defrule
			(current-age == imperial-age)
			=>
			(up-modify-goal g-required-attack-num c:max 28)
			(up-modify-goal g-temp g:= g-desired-num-military)
			(up-modify-goal g-temp c:- 5)
			(up-modify-goal g-required-attack-num g:min g-temp)
			(up-modify-goal g-stop-attack-num g:= g-required-attack-num)
			(up-modify-goal g-stop-attack-num c:%* 60)
			)

		;---------------------
		;	Ally Assistance
		;---------------------

			(defrule
			(current-age >= castle-age)
			(goal g-attack-objective HELP-ALLY-DEFEND)
			=>
			(up-modify-goal g-required-attack-num g:min g-min-military-pop)
			(up-modify-goal g-stop-attack-num c:%* 60)
			)

;=========================<>=========================
;			   		 START ATTACK
;=========================<>=========================

	(defrule
	(current-age == castle-age)
	(goal g-attacking NO)
	(goal g-town-under-attack NO)
	(or
		(population >= NINETY-PERCENT-POP)
		(and
			(military-population g:>= g-required-attack-num)
			(military-population g:>= g-stop-attack-num)))
	; (military-population >= 5)
	(players-building-count target-player > 0)
	(up-compare-goal g-primary-unit-tech-progress >= PRIORITY-CASTLE-COMPLETE)
	(up-compare-goal g-age-status != TO-IMPERIAL)
	=>
	(set-goal g-attacking YES)
	(up-modify-goal g-attack-status c:+ 1)
	; (set-strategic-number sn-number-civilian-militia 0)
	(up-jump-rule 1)
	)
		(defrule
		(current-age == castle-age)
		(goal g-attacking NO)
		(goal g-town-under-attack NO)
		(or
			(population >= NINETY-PERCENT-POP)
			(and
				(military-population g:>= g-required-attack-num)
				(military-population g:>= g-stop-attack-num)))
		(players-building-count target-player > 0)
		(up-get-fact military-population 0 g-temp)
		(up-modify-goal g-temp g:- g-required-attack-num)
		(up-compare-goal g-temp >= 10)
		=>
		(set-goal g-attacking YES)
		(up-modify-goal g-attack-status c:+ 1)
		; (set-strategic-number sn-number-civilian-militia 0)
		)

	(defrule
	(current-age == imperial-age)
	(goal g-attacking NO)
	(goal g-town-under-attack NO)
	(or
		(population >= NINETY-PERCENT-POP)
		(and
			(military-population g:>= g-required-attack-num)
			(military-population g:>= g-stop-attack-num)))
	(players-building-count target-player > 0)
	(up-compare-goal g-primary-unit-tech-progress >= PRIORITY-IMPERIAL-COMPLETE)
	(up-compare-goal g-support-unit-tech-progress >= REQUIRED-IMPERIAL-COMPLETE)
	=>
	(set-goal g-attacking YES)
	(up-modify-goal g-attack-status c:+ 1)
	; (set-strategic-number sn-number-civilian-militia 0)
	(up-jump-rule 1)
	)
		(defrule
		(current-age == imperial-age)
		(goal g-attacking NO)
		(goal g-town-under-attack NO)
		(or
			(population >= NINETY-PERCENT-POP)
			(and
				(military-population g:>= g-required-attack-num)
				(military-population g:>= g-stop-attack-num)))
		(players-building-count target-player > 0)
		(up-get-fact military-population 0 g-temp)
		(up-modify-goal g-temp g:- g-required-attack-num)
		=>
		(set-goal g-attacking YES)
		(up-modify-goal g-attack-status c:+ 1)
		; (set-strategic-number sn-number-civilian-militia 0)
		)

	(defrule
	(or
		(goal g-attack-status FIRST-FEUDAL-ATTACK)
		(or
			(goal g-attack-status FIRST-CASTLE-ATTACK)
			(goal g-attack-status FIRST-IMPERIAL-ATTACK)))
	(up-timer-status t-first-attack == timer-disabled)
	=>
	(enable-timer t-first-attack 60)
	)

	(defrule
	(goal g-attacking YES)
	(up-compare-goal g-attack-coordination < ATTACK-STARTED)
	(goal g-attack-objective HELP-ALLY-DEFEND)
	=>
	(set-goal g-attack-coordination ATTACK-STARTED)
	(up-modify-sn sn-focus-player-number s:= csn-ally-to-defend)
	(chat-to-player focus-player TAUNT-48-ASSIST)
	(chat-to-player my-player-number TAUNT-48-ASSIST)
	(disable-timer t-ally-assistance-chat-delay)
	)

	(defrule
	(goal g-attacking YES)
	(up-compare-goal g-attack-coordination < ATTACK-STARTED)
	(up-compare-goal g-attack-objective != HELP-ALLY-DEFEND)
	=>
	(set-goal g-attack-coordination ATTACK-STARTED)
	)

;=========================<>=========================
;			   		 STOP ATTACK
;=========================<>=========================

	(load "The General 1.2/Functions/Reset Mini")

	(defrule
	(goal g-attacking YES)
	(current-age-time >= 600)
	(or
		(goal g-attack-status FIRST-FEUDAL-ATTACK)
		(goal g-attack-status FIRST-CASTLE-ATTACK))
	=>
	(set-goal g-attacking NO)
	(set-goal g-attack-coordination STOP-ATTACKING)
	(disable-timer t-first-attack)
	)
	(defrule
	(goal g-attacking YES)
	(military-population g:< g-stop-attack-num)
	(population < EIGHTY-FIVE-PERCENT-POP)
	(up-timer-status t-first-attack != timer-running)
	=>
	(set-goal g-attacking NO)
	(set-goal g-attack-coordination STOP-ATTACKING)
	(disable-timer t-first-attack)
	)
	(defrule
	(goal g-attacking YES)
	(goal g-town-under-attack YES)
	(up-compare-goal g-enemy-units-in-town >= 12)
	=>
	(set-goal g-attacking NO)
	(set-goal g-attack-coordination STOP-ATTACKING)
	(disable-timer t-first-attack)
	)
	
	;Stop attack
	(defrule
	(goal g-attack-coordination STOP-ATTACKING)
	(goal g-attack-objective HELP-ALLY-DEFEND)
	=>
	(set-goal g-attack-objective PENDING)
	; (chat-to-all "reset objective")
	)

	(defrule
	(or
		(goal g-attack-status FIRST-FEUDAL-ATTACK)
		(or
			(goal g-attack-status FIRST-CASTLE-ATTACK)
			(goal g-attack-status FIRST-IMPERIAL-ATTACK)))
	(goal g-attack-coordination STOP-ATTACKING)
	=>
	(up-modify-goal g-attack-status c:+ 1)	;move back to previous attack status
	(up-modify-sn sn-maximum-town-size s:= csn-peaceful-town-size)
	(up-update-targets)
	; (set-strategic-number sn-number-civilian-militia 4)
	(set-goal g-attack-coordination RETREAT)
	(up-jump-rule 1)
	)
		;Not the first attack of the age
		(defrule
		(goal g-attack-coordination STOP-ATTACKING)
		=>
		(up-modify-goal g-attack-status c:- 1)	;move back to previous attack status
		(up-modify-sn sn-maximum-town-size s:= csn-peaceful-town-size)
		(up-update-targets)
		; (set-strategic-number sn-number-civilian-militia 4)
		(set-goal g-attack-coordination RETREAT)
		)

;=========================<>=========================
;		         SWITCH ATTACK TYPES
;=========================<>=========================

	(defrule
	(true)
	=>
	(set-goal g-attack-method-flag 0)
	)

	#load-if-defined DE-AVAILABLE

		(defrule
		(up-compare-goal g-difficulty >= EXTREME)
		(current-age <= castle-age)
		(up-compare-goal g-map-style != WALLED-LAND)
		(up-compare-goal g-map-style != SEMI-WALLED-LAND)
		=>
		(up-modify-flag g-attack-method-flag c:+ USE-DUC)
		)

		(defrule
		(or
			(current-age == imperial-age)
			(or
				(up-compare-goal g-difficulty < EXTREME)
				(or
					(goal g-map-style WALLED-LAND)
					(goal g-map-style SEMI-WALLED-LAND))))
		(up-compare-goal g-attack-objective != HELP-ALLY-DEFEND)
		=>
		(up-modify-flag g-attack-method-flag c:+ USE-TSA)
		)

	#else

		(defrule
		(true)
		=>
		(up-modify-flag g-attack-method-flag c:+ USE-TSA)
		)

	#end-if
	
	;If enemies have no buildings left, switch to attack groups
	(defrule
	(goal g-attacking YES)
	(up-compare-flag g-attack-method-flag != USE-DUC)
	(players-building-count every-enemy == 0)
	(game-time > 600)
	(up-compare-sn sn-maximum-town-size >= HUNDRED-FIFTY-PERCENT-MAP-SIZE)
	(up-compare-sn sn-number-attack-groups == 0)
	=>
	(up-modify-flag g-attack-method-flag c:+ USE-ATTACK-GROUPS)
	(up-modify-sn sn-task-ungrouped-soldiers c:= 1)
	(up-modify-sn sn-number-explore-groups c:= 4)
	(up-modify-sn sn-total-number-explorers c:= 4)
	)

;=========================<>=========================
;		   SET SN-MAXIMUM-TOWN-SIZE FOR TSA
;=========================<>=========================

	(defrule
	(goal g-attacking YES)
	(up-compare-flag g-attack-method-flag == USE-TSA)
	(strategic-number sn-target-player-number > 0)
	=>
	(up-modify-goal g-temp g:= g-closest-enemy-building-distance)	;set to nearest building of target enemy player
	(up-modify-goal g-temp g:min g-nearest-enemy-defenses-distance)	;or nearest castle/tower of all enemies
	(up-modify-goal g-temp c:+ 20)	;give some wiggle room to TSA and allow for multiple building target options
	)

	(defrule
	(goal g-attacking YES)
	(up-compare-flag g-attack-method-flag == USE-TSA)
	(up-compare-goal g-temp s:> sn-maximum-town-size)
	(strategic-number sn-target-player-number > 0)
	=>
	(up-modify-sn sn-maximum-town-size g:= g-temp)	;nearest enemy building distance + 5
	(up-modify-sn sn-maximum-town-size c:min HUNDRED-PERCENT-MAP-SIZE)
	(up-modify-sn sn-safe-town-size s:= sn-maximum-town-size)
	(up-modify-sn sn-safe-town-size c:%* 50)
	(up-update-targets)
	)

	(defrule
	(goal g-attacking YES)
	(up-compare-flag g-attack-method-flag == USE-TSA)
	(up-enemy-buildings-in-town == 0)
	(strategic-number sn-maximum-town-size < HUNDRED-PERCENT-MAP-SIZE)
	(strategic-number sn-target-player-number > 0)
	=>
	(up-modify-sn sn-maximum-town-size c:+ 20)
	(up-modify-sn sn-maximum-town-size c:min HUNDRED-PERCENT-MAP-SIZE)
	(up-modify-sn sn-safe-town-size s:= sn-maximum-town-size)
	(up-modify-sn sn-safe-town-size c:%* 50)
	(up-update-targets)
	)

	(defrule
	(goal g-attacking YES)
	(up-compare-flag g-attack-method-flag == USE-TSA)
	(up-compare-goal g-temp s:< sn-maximum-town-size)
	(up-compare-goal g-enemy-buildings-in-town > 0)
	=>
	(up-modify-sn sn-maximum-town-size g:= g-temp)
	(up-modify-sn sn-maximum-town-size c:min HUNDRED-PERCENT-MAP-SIZE)
	(up-modify-sn sn-safe-town-size s:= sn-maximum-town-size)
	(up-modify-sn sn-safe-town-size c:%* 50)
	)

	(defrule
	(goal g-attacking YES)
	(up-compare-sn sn-number-attack-groups != 0)
	(players-building-count every-enemy != 0)
	(game-time > 600)
	(current-age >= feudal-age)
	=>
	(up-modify-flag g-attack-method-flag c:- USE-ATTACK-GROUPS)
	(up-modify-sn sn-task-ungrouped-soldiers c:= 0)
	(up-modify-sn sn-number-explore-groups c:= 1)
	(up-modify-sn sn-total-number-explorers c:= 1)
	(up-reset-scouts)
	)

;=========================<>=========================
;		   		  TARGET PRIORITIES
;=========================<>=========================

	;--------------------------
	;	Offensive Priorities
	;--------------------------

		(defrule
		(true)
		=>
		(up-set-offense-priority c: unpacked-trebuchet-class c: 9)
		(up-set-offense-priority c: siege-weapon-class c: 8)
		(up-set-offense-priority c: scorpion-class c: 8)
		(up-set-offense-priority c: villager-class c: 9)
		(disable-self)
		)

		#load-if-defined DE-AVAILABLE 

			(defrule
			(or
				(unit-type-count trebuchet-set > 0)
				(unit-type-count bombard-cannon-line > 0))
			=>
			(up-set-offense-priority c: castle c: 11)
			(up-set-offense-priority c: town-center c: 9)
			(up-set-offense-priority c: watch-tower c: 4)
			(up-set-offense-priority c: donjon c: 4)
			(up-set-offense-priority c: bombard-tower c: 4)
			)

			(defrule
			(unit-type-count trebuchet-set <= 0)
			(unit-type-count bombard-cannon-line <= 0)
			=>
			(up-set-offense-priority c: castle c: 0)
			(up-set-offense-priority c: town-center c: 0)
			(up-set-offense-priority c: watch-tower c: 0)
			(up-set-offense-priority c: donjon c: 0)
			(up-set-offense-priority c: bombard-tower c: 0)
			)

		#else

			(defrule
			(or
				(unit-type-count trebuchet-set > 0)
				(unit-type-count bombard-cannon > 0))
			=>
			(up-set-offense-priority c: castle c: 11)
			(up-set-offense-priority c: town-center c: 9)
			(up-set-offense-priority c: watch-tower c: 4)
			(up-set-offense-priority c: donjon c: 4)
			(up-set-offense-priority c: bombard-tower c: 4)
			)

			(defrule
			(unit-type-count trebuchet-set <= 0)
			(unit-type-count bombard-cannon <= 0)
			=>
			(up-set-offense-priority c: castle c: 0)
			(up-set-offense-priority c: town-center c: 0)
			(up-set-offense-priority c: watch-tower c: 0)
			(up-set-offense-priority c: donjon c: 0)
			(up-set-offense-priority c: bombard-tower c: 0)
			)

		#end-if

	;--------------------------
	;	Defensive Priorities
	;--------------------------

		(defrule
		(true)
		=>
		(up-set-defense-priority c: palisade-wall c: 1000)
		(up-set-defense-priority c: stone-wall c: 1000)
		(up-set-defense-priority c: fortified-wall c: 1000)
		(disable-self)
		)

		(defrule
		(goal g-map-style SEMI-WALLED-LAND)
		=>
		(up-set-defense-priority c: palisade-wall c: 2000)
		(set-strategic-number sn-wall-targeting-mode 1)
		(disable-self)
		)

		(defrule
		(goal g-attacking YES)
		(military-population < 10)
		=>
		(up-set-defense-priority c: lumber-camp c: 3000)
		(up-set-defense-priority c: mining-camp c: 3000)
		(up-set-defense-priority c: mill c: 2000)
		(up-set-defense-priority c: town-center c: 1000)
		(up-set-defense-priority c: watch-tower c: 50)
		(up-set-defense-priority c: guard-tower c: 20)
		(up-set-defense-priority c: keep c: 20)
		(up-set-defense-priority c: bombard-tower c: 10)
		(up-set-defense-priority c: castle c: 5)
		(up-set-defense-priority c: krepost c: 5)
		(up-set-defense-priority c: donjon c: 50)
		(up-jump-rule 1)
		)

			(defrule
			(goal g-attacking YES)
			(goal g-siege-class 0)
			(population < 120)
			(current-age < imperial-age)
			=>
			(up-set-defense-priority c: lumber-camp c: 3000)
			(up-set-defense-priority c: mining-camp c: 3000)
			(up-set-defense-priority c: mill c: 2000)
			(up-set-defense-priority c: town-center c: 1000)
			(up-set-defense-priority c: watch-tower c: 50)
			(up-set-defense-priority c: guard-tower c: 20)
			(up-set-defense-priority c: keep c: 20)
			(up-set-defense-priority c: bombard-tower c: 10)
			(up-set-defense-priority c: castle c: 5)
			(up-set-defense-priority c: krepost c: 5)
			(up-set-defense-priority c: donjon c: 50)
			)

		(defrule
		(goal g-attacking YES)
		(military-population >= 10)
		(up-compare-goal g-siege-class > 0)
		(up-compare-goal g-target-pop-parity > 10)
		=>
		(up-set-defense-priority c: lumber-camp c: 750)
		(up-set-defense-priority c: mining-camp c: 750)
		(up-set-defense-priority c: mill c: 600)
		(up-set-defense-priority c: town-center c: 3000)
		(up-set-defense-priority c: watch-tower c: 1000)
		(up-set-defense-priority c: guard-tower c: 1000)
		(up-set-defense-priority c: keep c: 1000)
		(up-set-defense-priority c: bombard-tower c: 2000)
		(up-set-defense-priority c: castle c: 5000)
		(up-set-defense-priority c: krepost c: 4000)
		(up-set-defense-priority c: donjon c: 1000)
		(up-jump-rule 2)
		)

			(defrule
			(goal g-attacking YES)
			(military-population >= 10)
			(population >= 120)
			(up-compare-goal g-target-pop-parity > 10)
			=>
			(up-set-defense-priority c: lumber-camp c: 750)
			(up-set-defense-priority c: mining-camp c: 750)
			(up-set-defense-priority c: mill c: 600)
			(up-set-defense-priority c: town-center c: 3000)
			(up-set-defense-priority c: watch-tower c: 1000)
			(up-set-defense-priority c: guard-tower c: 1000)
			(up-set-defense-priority c: keep c: 1000)
			(up-set-defense-priority c: bombard-tower c: 2000)
			(up-set-defense-priority c: castle c: 5000)
			(up-set-defense-priority c: krepost c: 4000)
			(up-set-defense-priority c: donjon c: 1000)
			(up-jump-rule 1)
			)

			(defrule
			(goal g-attacking YES)
			(military-population >= 10)
			(current-age == imperial-age)
			(up-compare-goal g-target-pop-parity > 10)
			=>
			(up-set-defense-priority c: lumber-camp c: 750)
			(up-set-defense-priority c: mining-camp c: 750)
			(up-set-defense-priority c: mill c: 600)
			(up-set-defense-priority c: town-center c: 3000)
			(up-set-defense-priority c: watch-tower c: 1000)
			(up-set-defense-priority c: guard-tower c: 1000)
			(up-set-defense-priority c: keep c: 1000)
			(up-set-defense-priority c: bombard-tower c: 2000)
			(up-set-defense-priority c: castle c: 5000)
			(up-set-defense-priority c: krepost c: 4000)
			(up-set-defense-priority c: donjon c: 1000)
			)

		(defrule
		(goal g-attacking NO)
		(up-compare-goal g-siege-class == 0)
		=>
		(up-set-defense-priority c: lumber-camp c: 50)
		(up-set-defense-priority c: mining-camp c: 50)
		(up-set-defense-priority c: mill c: 50)
		(up-set-defense-priority c: town-center c: 2000)
		(up-set-defense-priority c: watch-tower c: 1500)
		(up-set-defense-priority c: guard-tower c: 1500)
		(up-set-defense-priority c: keep c: 1500)
		(up-set-defense-priority c: bombard-tower c: 1000)
		(up-set-defense-priority c: castle c: 5)
		(up-set-defense-priority c: krepost c: 5)
		(up-set-defense-priority c: donjon c: 1500)
		)

		(defrule
		(goal g-attacking NO)
		(up-compare-goal g-siege-class > 0)
		=>
		(up-set-defense-priority c: lumber-camp c: 50)
		(up-set-defense-priority c: mining-camp c: 50)
		(up-set-defense-priority c: mill c: 50)
		(up-set-defense-priority c: town-center c: 2000)
		(up-set-defense-priority c: watch-tower c: 3000)
		(up-set-defense-priority c: guard-tower c: 4000)
		(up-set-defense-priority c: keep c: 5000)
		(up-set-defense-priority c: bombard-tower c: 6000)
		(up-set-defense-priority c: castle c: 10000)
		(up-set-defense-priority c: krepost c: 8000)
		(up-set-defense-priority c: donjon c: 3000)
		)

		(defrule
		(or
			(current-age == imperial-age)
			(population >= 100))
		=>
		(up-set-defense-priority c: lumber-camp c: 50)
		(up-set-defense-priority c: mining-camp c: 50)
		(up-set-defense-priority c: mill c: 50)
		)

		#load-if-not-defined VICTORY-CONQUEST

			(defrule
			(enemy-captured-relics)
			=>
			(up-set-defense-priority c: monastery c: 20000)
			)

			(defrule
			(not
				(enemy-captured-relics))
			=>
			(up-set-defense-priority c: monastery c: 500)
			)

		#end-if

		(load "The General 1.2/Functions/Reset Mini")

		;Check for towers surrounded by walls
		;If they exist, set wall defense priorities higher
		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		(up-projectile-detected projectile-watch-tower <= 5000)
		(timer-triggered t-5-sec)
		=>
		(up-get-projectile-player projectile-watch-tower g-temp)
		(up-modify-sn sn-focus-player-number g:= g-temp)
		(up-full-reset-search)
		(up-find-remote c: tower-class c: 40)
		(up-remove-objects search-remote object-data-next-attack <= 0)
		)

		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		(up-projectile-detected projectile-watch-tower <= 5000)
		(up-set-target-object search-remote c: 0)
		(timer-triggered t-5-sec)
		=>
		(up-get-point position-object g-point-x)
		(up-set-target-point g-point-x)
		(up-get-object-data object-data-id g-temp2)
		(up-full-reset-search)
		(up-filter-distance c: -1 c: 2)
		(up-find-remote c: palisade-wall c: 20)
		(up-find-remote c: stone-wall c: 20)
		(up-find-remote c: fortified-wall c: 20)
		(up-get-search-state g-local-total)
		)

		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		(up-projectile-detected projectile-watch-tower <= 5000)
		(up-compare-goal g-remote-total < 3)
		(timer-triggered t-5-sec)
		=>
		(up-set-defense-priority c: watch-tower c: 500)
		(up-set-defense-priority c: donjon c: 500)
		)

		;Get soldiers that are targeteting nearby walled tower
		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		(up-projectile-detected projectile-watch-tower <= 5000)
		(up-compare-goal g-remote-total >= 3)
		(timer-triggered t-5-sec)
		(up-set-target-by-id g: g-temp2)
		=>
		(up-reset-search 1 1 0 0)
		(up-reset-filters)
		(up-filter-distance c: -1 c: 10)
		(up-filter-include cmdid-military -1 -1 -1)
		(up-filter-exclude -1 actionid-explore orderid-explore -1)
		(up-find-local c: any-objects c: 240)
		(up-remove-objects search-local object-data-attack-stance == stance-stand-ground)
		(up-remove-objects search-local object-data-range > 0)
		(up-remove-objects search-local object-data-target-id g:!= g-temp2)	;remove soldiers targeting tower with walls around it
		(up-get-search-state g-local-total)
		(up-set-defense-priority c: watch-tower c: 20)
		(up-set-defense-priority c: donjon c: 20)
		)

		;Retarget these soldiers against wall instead
		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		(up-projectile-detected projectile-watch-tower <= 5000)
		(up-compare-goal g-remote-total >= 3)
		(up-compare-goal g-local-total > 0)
		(timer-triggered t-5-sec)
		=>
		(up-target-objects 0 action-default -1 stance-stand-ground)	;attack walls
		)

		;Get soldiers targeting the walled tower that aren't nearby
		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		(up-projectile-detected projectile-watch-tower <= 5000)
		(up-compare-goal g-remote-total >= 3)
		(timer-triggered t-5-sec)
		(up-set-target-by-id g: g-temp2)
		=>
		(up-reset-search 1 1 0 0)
		(up-reset-filters)
		(up-filter-distance c: 10 c: -1)
		(up-filter-include cmdid-military -1 -1 -1)
		(up-filter-exclude -1 actionid-explore orderid-explore -1)
		(up-find-local c: any-objects c: 240)
		(up-remove-objects search-local object-data-attack-stance == stance-stand-ground)
		(up-remove-objects search-local object-data-range > 0)
		(up-remove-objects search-local object-data-target-id g:!= g-temp2)	;remove soldiers targeting tower with walls around it
		(up-get-search-state g-local-total)
		(up-set-defense-priority c: watch-tower c: 20)
		(up-set-defense-priority c: donjon c: 20)
		)

		;Try to stop these soldiers from targeting the tower
		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		(up-projectile-detected projectile-watch-tower <= 5000)
		(up-compare-goal g-remote-total >= 3)
		(up-compare-goal g-local-total > 0)
		(up-set-target-object search-local c: 0)
		(timer-triggered t-5-sec)
		=>
		(up-target-point 0 action-none -1 -1)	;stop targeting tower (hopefully)
		)
		
		;Reset stand ground units if they don't need to target wall anymore
		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		=>
		(up-full-reset-search)
		(up-filter-include cmdid-military -1 -1 -1)
		(up-filter-exclude -1 actionid-explore orderid-explore -1)
		(up-find-local c: any-objects c: 240)
		(up-remove-objects search-local object-data-attack-stance != stance-stand-ground)
		(up-remove-objects search-local object-data-target == wall-class)
		(up-get-search-state g-local-total)
		)

		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		(up-compare-goal g-local-total > 0)
        (up-set-target-object search-local c: 0)
		=>
		(up-target-point 0 action-none -1 stance-aggressive)
		)
		
		;Reset idle stand ground units
		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		=>
		(up-full-reset-search)
		(up-filter-include cmdid-military -1 -1 -1)
		(up-filter-exclude -1 actionid-explore orderid-explore -1)
		(up-find-local c: any-objects c: 240)
		(up-remove-objects search-local object-data-attack-stance != stance-stand-ground)
		(up-remove-objects search-local object-data-action == actionid-attack)
		(up-get-search-state g-local-total)
		)

		(defrule
        (or
            (goal g-attacking NO)
            (up-compare-flag g-attack-method-flag != USE-DUC))
		(up-compare-goal g-local-total > 0)
        (up-set-target-object search-local c: 0)
		=>
		(up-target-point 0 action-none -1 stance-aggressive)
		)