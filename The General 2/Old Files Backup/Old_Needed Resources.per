;Next Building Items

(defrule
(true)
=>
(up-reset-cost-data g-max-food-needed)
(up-reset-cost-data g-food-needed-soon)
(up-reset-cost-data g-food-to-save)
)

;====================<<<<<<<<<<NEEDED NEW BUILDINGS>>>>>>>>>>====================

;====Town Center

(defrule
(building-available town-center)
(up-object-type-count-total c: town-center g:< g-desired-num-town-center)
=>
(up-modify-goal g-temp g:= g-desired-num-town-center)
(up-get-fact building-type-count-total town-center g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: town-center-foundation c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: town-center-foundation g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available town-center)
(up-object-type-count-total c: town-center g:< g-desired-num-town-center)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: town-center-foundation g: g-temp)
(up-chat-data-to-self "Building: %d Town Centers" g: g-temp)
)

;Construct building soon

(defrule
(building-available town-center)
(up-object-type-count-total c: town-center g:< g-desired-num-town-center)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: town-center-foundation g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Town Centers" g: g-temp)
)

;====House

(defrule
(building-available house)
(up-object-type-count-total c: house g:< g-desired-num-house)
=>
(up-modify-goal g-temp g:= g-desired-num-house)
(up-get-fact building-type-count-total house g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: house c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: house g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Construct building soon

(defrule
(building-available house)
(up-object-type-count-total c: house g:< g-desired-num-house)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: house g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Houses" g: g-temp)
)

;====Mill

(defrule
(up-object-type-count-total c: mill g:< g-desired-num-mill)
=>
(up-modify-goal g-temp g:= g-desired-num-mill)
(up-get-fact building-type-count-total mill g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: mill c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: mill g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Construct building soon

(defrule
(up-object-type-count-total c: mill g:< g-desired-num-mill)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: mill g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Mills" g: g-temp)
)

;====Mining Camp

(defrule
(up-object-type-count-total c: mining-camp g:< g-desired-num-mining-camp)
=>
(up-modify-goal g-temp g:= g-desired-num-mining-camp)
(up-get-fact building-type-count-total mining-camp g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: mining-camp c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: mining-camp g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Construct building soon

(defrule
(up-object-type-count-total c: mining-camp g:< g-desired-num-mining-camp)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: mining-camp g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Mining Camps" g: g-temp)
)

;====Lumber Camp

(defrule
(up-object-type-count-total c: lumber-camp g:< g-desired-num-lumber-camp)
=>
(up-modify-goal g-temp g:= g-desired-num-lumber-camp)
(up-get-fact building-type-count-total lumber-camp g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: lumber-camp c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: lumber-camp g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Construct building soon

(defrule
(up-object-type-count-total c: lumber-camp g:< g-desired-num-lumber-camp)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: lumber-camp g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Lumber Camps" g: g-temp)
)

;====Dock

(defrule
(up-object-type-count-total c: dock g:< g-desired-num-dock)
=>
(up-modify-goal g-temp g:= g-desired-num-dock)
(up-get-fact building-type-count-total dock g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: dock c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: dock g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(up-object-type-count-total c: dock g:< g-desired-num-dock)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: dock g: g-temp)
(up-chat-data-to-self "Building: %d Docks" g: g-temp)
)

;Construct building soon

(defrule
(up-object-type-count-total c: dock g:< g-desired-num-dock)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: dock g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Docks" g: g-temp)
)

;====Farm

;added in different section

;====Blacksmith

(defrule
(building-available blacksmith)
(up-object-type-count-total c: blacksmith g:< g-desired-num-blacksmith)
=>
(up-modify-goal g-temp g:= g-desired-num-blacksmith)
(up-get-fact building-type-count-total blacksmith g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: blacksmith c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: blacksmith g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available blacksmith)
(up-object-type-count-total c: blacksmith g:< g-desired-num-blacksmith)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: blacksmith g: g-temp)
(up-chat-data-to-self "Building: %d Blacksmiths" g: g-temp)
)

;Construct building soon

(defrule
(building-available blacksmith)
(up-object-type-count-total c: blacksmith g:< g-desired-num-blacksmith)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: blacksmith g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Blacksmiths" g: g-temp)
)

;====Market

(defrule
(building-available market)
(up-object-type-count-total c: market g:< g-desired-num-market)
=>
(up-modify-goal g-temp g:= g-desired-num-market)
(up-get-fact building-type-count-total market g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: market c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: market g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available market)
(up-object-type-count-total c: market g:< g-desired-num-market)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: market g: g-temp)
(up-chat-data-to-self "Building: %d Markets" g: g-temp)
)

;Construct building soon

(defrule
(building-available market)
(up-object-type-count-total c: market g:< g-desired-num-market)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: market g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Markets" g: g-temp)
)

;====Monastery

(defrule
(building-available monastery)
(up-object-type-count-total c: monastery g:< g-desired-num-monastery)
=>
(up-modify-goal g-temp g:= g-desired-num-monastery)
(up-get-fact building-type-count-total monastery g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: monastery c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: monastery g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available monastery)
(up-object-type-count-total c: monastery g:< g-desired-num-monastery)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: monastery g: g-temp)
(up-chat-data-to-self "Building: %d Monasteries" g: g-temp)
)

;Construct building soon

(defrule
(building-available monastery)
(up-object-type-count-total c: monastery g:< g-desired-num-monastery)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: monastery g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Monasteries" g: g-temp)
)

;====University

(defrule
(building-available university)
(up-object-type-count-total c: university g:< g-desired-num-university)
=>
(up-modify-goal g-temp g:= g-desired-num-university)
(up-get-fact building-type-count-total university g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: university c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: university g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available university)
(up-object-type-count-total c: university g:< g-desired-num-university)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: university g: g-temp)
(up-chat-data-to-self "Building: %d Universities" g: g-temp)
)

;Construct building soon

(defrule
(building-available university)
(up-object-type-count-total c: university g:< g-desired-num-university)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: university g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Universities" g: g-temp)
)

;====Wonder

(defrule
(building-available wonder)
(up-object-type-count-total c: wonder g:< g-desired-num-wonder)
=>
(up-modify-goal g-temp g:= g-desired-num-wonder)
(up-get-fact building-type-count-total wonder g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: wonder c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: wonder g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available wonder)
(up-object-type-count-total c: wonder g:< g-desired-num-wonder)
(or
	(up-compare-goal g-wood-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-stone-delta > 200)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: wonder g: g-temp)
(up-chat-data-to-self "Building: %d Wonders" g: g-temp)
)

;Construct building soon

(defrule
(building-available wonder)
(up-object-type-count-total c: wonder g:< g-desired-num-wonder)
(up-compare-goal g-wood-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
(up-compare-goal g-stone-delta <= 200)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: wonder g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Wonders" g: g-temp)
)

;====Barracks

(defrule
(up-object-type-count-total c: barracks g:< g-desired-num-barracks)
=>
(up-modify-goal g-temp g:= g-desired-num-barracks)
(up-get-fact building-type-count-total barracks g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: barracks c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: barracks g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(up-object-type-count-total c: barracks g:< g-desired-num-barracks)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: barracks g: g-temp)
(up-chat-data-to-self "Building: %d Barracks" g: g-temp)
)

;Construct building soon

(defrule
(up-object-type-count-total c: barracks g:< g-desired-num-barracks)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: barracks g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Barracks" g: g-temp)
)

;====Archery Range

(defrule
(building-available archery-range)
(up-object-type-count-total c: archery-range g:< g-desired-num-archery-range)
=>
(up-modify-goal g-temp g:= g-desired-num-archery-range)
(up-get-fact building-type-count-total archery-range g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: archery-range c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: archery-range g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available archery-range)
(up-object-type-count-total c: archery-range g:< g-desired-num-archery-range)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: archery-range g: g-temp)
(up-chat-data-to-self "Building: %d Archery Ranges" g: g-temp)
)

;Construct building soon

(defrule
(building-available archery-range)
(up-object-type-count-total c: archery-range g:< g-desired-num-archery-range)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: archery-range g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Archery Ranges" g: g-temp)
)

;====Stable

(defrule
(building-available stable)
(up-object-type-count-total c: stable g:< g-desired-num-stable)
=>
(up-modify-goal g-temp g:= g-desired-num-stable)
(up-get-fact building-type-count-total stable g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: stable c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: stable g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available stable)
(up-object-type-count-total c: stable g:< g-desired-num-stable)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: stable g: g-temp)
(up-chat-data-to-self "Building: %d Stables" g: g-temp)
)

;Construct building soon

(defrule
(building-available stable)
(up-object-type-count-total c: stable g:< g-desired-num-stable)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: stable g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Stables" g: g-temp)
)

;====Siege Workshop

(defrule
(building-available siege-workshop)
(up-object-type-count-total c: siege-workshop g:< g-desired-num-siege-workshop)
=>
(up-modify-goal g-temp g:= g-desired-num-siege-workshop)
(up-get-fact building-type-count-total siege-workshop g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: siege-workshop c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: siege-workshop g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available siege-workshop)
(up-object-type-count-total c: siege-workshop g:< g-desired-num-siege-workshop)
(up-compare-goal g-wood-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: siege-workshop g: g-temp)
(up-chat-data-to-self "Building: %d Siege Workshops" g: g-temp)
)

;Construct building soon

(defrule
(building-available siege-workshop)
(up-object-type-count-total c: siege-workshop g:< g-desired-num-siege-workshop)
(up-compare-goal g-wood-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: siege-workshop g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Siege Workshops" g: g-temp)
)

;====Watch Tower

(defrule
(or
	(building-available watch-tower)
	(or
		(building-available guard-tower)
		(building-available keep)))
(up-compare-goal g-watch-tower-line g:< g-desired-num-watch-tower)
=>
(up-modify-goal g-temp g:= g-desired-num-watch-tower)
(up-modify-goal g-temp-2 g:= g-watch-tower-line)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: watch-tower c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(or
	(building-available watch-tower)
	(or
		(building-available guard-tower)
		(building-available keep)))
(up-compare-goal g-watch-tower-line g:< g-desired-num-watch-tower)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: watch-tower g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(or
	(building-available watch-tower)
	(or
		(building-available guard-tower)
		(building-available keep)))
(up-compare-goal g-watch-tower-line g:< g-desired-num-watch-tower)
(up-compare-goal g-stone-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: watch-tower g: g-temp)
(up-chat-data-to-self "Building: %d Watch Towers" g: g-temp)
)

;Construct building soon

(defrule
(or
	(building-available watch-tower)
	(or
		(building-available guard-tower)
		(building-available keep)))
(up-compare-goal g-watch-tower-line g:< g-desired-num-watch-tower)
(up-compare-goal g-stone-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: watch-tower g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Watch Towers" g: g-temp)
)

;====Bombard Tower

(defrule
(building-available bombard-tower)
(up-object-type-count-total c: bombard-tower g:< g-desired-num-bombard-tower)
=>
(up-modify-goal g-temp g:= g-desired-num-bombard-tower)
(up-get-fact building-type-count-total bombard-tower g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: bombard-tower c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: bombard-tower g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available bombard-tower)
(up-object-type-count-total c: bombard-tower g:< g-desired-num-bombard-tower)
(up-compare-goal g-stone-delta > 100)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: bombard-tower g: g-temp)
(up-chat-data-to-self "Building: %d Bombard Towers" g: g-temp)
)

;Construct building soon

(defrule
(building-available bombard-tower)
(up-object-type-count-total c: bombard-tower g:< g-desired-num-bombard-tower)
(up-compare-goal g-stone-delta <= 100)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: bombard-tower g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Bombard Towers" g: g-temp)
)

;====Castle

(defrule
(building-available castle)
(up-object-type-count-total c: castle g:< g-desired-num-castle)
=>
(up-modify-goal g-temp g:= g-desired-num-castle)
(up-get-fact building-type-count-total castle g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: castle c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: castle g: g-temp)
(up-get-cost-delta g-food-delta)
)

;Save for building with escrow

(defrule
(building-available castle)
(up-object-type-count-total c: castle g:< g-desired-num-castle)
(up-compare-goal g-stone-delta > 150)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-object-cost c: castle g: g-temp)
(up-chat-data-to-self "Building: %d Castles" g: g-temp)
)

;Construct building soon

(defrule
(building-available castle)
(up-object-type-count-total c: castle g:< g-desired-num-castle)
(up-compare-goal g-stone-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: castle g: g-temp)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because building is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-chat-data-to-self "Building: %d Castles" g: g-temp)
)


;====================<<<<<<<<<<TOWN CENTER>>>>>>>>>>====================

;Get amount of time available at all town centers to research techs and train units.

(defrule
(true)
=>
(up-get-fact building-type-count town-center g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

#load-if-defined PERSIAN-CIV

	#load-if-defined DE-AVAILABLE

		(defrule
		(current-age == dark-age)
		(up-compare-goal g-seconds-available-for-building > 0)
		=>
		(up-modify-goal g-seconds-available-for-building c:%* 105)
		)
	
	#end-if

	(defrule
	(current-age == feudal-age)
	(up-compare-goal g-seconds-available-for-building > 0)
	=>
	(up-modify-goal g-seconds-available-for-building c:%* 110)
	)

	(defrule
	(current-age == castle-age)
	(up-compare-goal g-seconds-available-for-building > 0)
	=>
	(up-modify-goal g-seconds-available-for-building c:%* 115)
	)

	(defrule
	(current-age == imperial-age)
	(up-compare-goal g-seconds-available-for-building > 0)
	=>
	(up-modify-goal g-seconds-available-for-building c:%* 120)
	)
	
#end-if
	

;====Feudal Age

(defrule
(up-research-status c: feudal-age == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: feudal-age c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp g:= g-required-num-villager)
(up-modify-goal g-temp c:- 3)
(set-goal g-item-time-required FEUDAL-AGE-TECH-TIME)
)

#load-if-defined MALAY-CIV

	(defrule
	(up-research-status c: feudal-age == research-available)
	(goal g-item-time-required FEUDAL-AGE-TECH-TIME)
	=>
	(up-modify-goal g-item-time-required c:- 52)
	)

#end-if

;Increase max resources needed if necessary

(defrule
(up-research-status c: feudal-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 3
	(players-current-age any-enemy >= feudal-age))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: feudal-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 3
	(players-current-age any-enemy >= feudal-age))
(or
	(up-compare-goal g-food-delta > 150)
	(up-compare-goal g-seconds-available-for-building g:< g-item-time-required))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: feudal-age c: 1)
(chat-local-to-self "Tech: Feudal Age")
)

;Research tech soon

(defrule
(up-research-status c: feudal-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 3
	(players-current-age any-enemy >= feudal-age))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: feudal-age c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Feudal Age")
)

;Set Save for Feudal
(defrule
(up-compare-goal g-age-status < gv-save-for-feudal)
(up-research-status c: feudal-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 3
	(players-current-age any-enemy >= feudal-age))
(up-compare-goal g-food-delta <= 150)
=>
(set-goal g-age-status gv-save-for-feudal)
)

;====Castle Age

(defrule
(up-research-status c: castle-age == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: castle-age c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp g:= g-required-num-villager)
(up-modify-goal g-temp c:- 5)
(set-goal g-item-time-required CASTLE-AGE-TECH-TIME)
)

#load-if-defined MALAY-CIV

	(defrule
	(up-research-status c: castle-age == research-available)
	(goal g-item-time-required CASTLE-AGE-TECH-TIME)
	=>
	(up-modify-goal g-item-time-required c:- 64)
	)
	
#end-if

;Increase max resources needed if necessary

(defrule
(up-research-status c: castle-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 5
	(players-current-age any-enemy >= castle-age))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: castle-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 5
	(players-current-age any-enemy >= castle-age))
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: castle-age c: 1)
(chat-local-to-self "Tech: Castle Age")
)

;Research tech soon

(defrule
(up-research-status c: castle-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 5
	(players-current-age any-enemy >= castle-age))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(chat-local-to-self "Tech: Castle Age")
)

(defrule
(up-research-status c: castle-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 5
	(players-current-age any-enemy >= castle-age))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: castle-age c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
)

;Set Save for Castle
(defrule
(up-compare-goal g-age-status < gv-save-for-castle)
(up-research-status c: castle-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 5
	(players-current-age any-enemy >= castle-age))
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-age-status gv-save-for-castle)
)

;====Imperial Age

(defrule
(up-research-status c: imperial-age == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: imperial-age c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp g:= g-required-num-villager)
(up-modify-goal g-temp c:- 10)
(set-goal g-item-time-required IMPERIAL-AGE-TECH-TIME)
)

#load-if-defined MALAY-CIV

	(defrule
	(up-research-status c: imperial-age == research-available)
	(goal g-item-time-required IMPERIAL-AGE-TECH-TIME)
	=>
	(up-modify-goal g-item-time-required c:- 76)
	)

#end-if

;Increase max resources needed if necessary

(defrule
(up-research-status c: imperial-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 10
	(players-current-age any-enemy >= imperial-age))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: imperial-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 10
	(players-current-age any-enemy >= imperial-age))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: imperial-age c: 1)
(chat-local-to-self "Tech: Imperial Age")
)

;Research tech soon

(defrule
(up-research-status c: imperial-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 10
	(players-current-age any-enemy >= imperial-age))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(chat-local-to-self "Tech: Imperial Age")
)

(defrule
(up-research-status c: imperial-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 10
	(players-current-age any-enemy >= imperial-age))
(up-compare-goal g-seconds-available-for-building >= IMPERIAL-AGE-TECH-TIME)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(chat-local-to-self "Tech: Imperial Age")
)

(defrule
(up-research-status c: imperial-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 10
	(players-current-age any-enemy >= imperial-age))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: imperial-age c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
)

;Set Save for Imperial
(defrule
(up-compare-goal g-age-status < gv-save-for-imperial)
(up-research-status c: imperial-age == research-available)
(or
	(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 10
	(players-current-age any-enemy >= imperial-age))
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-age-status gv-save-for-imperial)
)

;====Loom

(defrule
(up-research-status c: ri-loom == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-loom c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp g:= g-required-num-villager)
(up-modify-goal g-temp c:- 2)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required LOOM-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-loom == research-available)
(dropsite-min-distance live-boar > 18)
(dropsite-min-distance live-boar < 38)
(or
	(up-compare-goal g-desired-num-boar-hunters > 0)
	(unit-type-count villager >= 11))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(up-research-status c: ri-loom == research-available)
(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 2
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

;Condition 1 - research to protect boar hunters

(defrule
(up-research-status c: ri-loom == research-available)
(dropsite-min-distance live-boar > 18)
(dropsite-min-distance live-boar < 38)
(or
	(up-compare-goal g-desired-num-boar-hunters > 0)
	(unit-type-count villager >= 11))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-loom == research-available)
(dropsite-min-distance live-boar > 18)
(dropsite-min-distance live-boar < 38)
(or
	(up-compare-goal g-desired-num-boar-hunters > 0)
	(unit-type-count villager >= 11))
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-loom c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(chat-local-to-self "Tech: Loom")
)

;Condition 2 - have enough vils

(defrule
(up-research-status c: ri-loom == research-available)
(up-object-type-count-total c: villager g:>= g-temp)	;required num vils minus 2
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(goal g-temp-2 0)	;tech resources not yet added to needed resources from previous rule(s)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-loom c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Loom")
)

;====Wheelbarrow

(defrule
(up-research-status c: ri-wheel-barrow == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-wheel-barrow c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required WHEELBARROW-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-wheel-barrow == research-available)
(current-age >= castle-age)
(unit-type-count villager-farmer >= 10)
(up-compare-goal g-attack-status >= gv-first-attack)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-wheel-barrow == research-available)
(current-age >= castle-age)
(unit-type-count villager-farmer >= 10)
(up-compare-goal g-attack-status >= gv-first-attack)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-wheel-barrow c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Wheelbarrow")
)

;====Hand Cart

(defrule
(up-research-status c: ri-hand-cart == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-hand-cart c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HAND-CART-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-hand-cart == research-available)
(unit-type-count villager-farmer >= 15)
(research-completed ri-bow-saw)
;(up-compare-goal g-excess-resources >= gv-some-excess)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-hand-cart == research-available)
(unit-type-count villager-farmer >= 15)
(research-completed ri-bow-saw)
;(up-compare-goal g-excess-resources >= gv-some-excess)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-wood-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-hand-cart c: 1)
(chat-local-to-self "Tech: Hand Cart")
)

;Research tech soon

(defrule
(up-research-status c: ri-hand-cart == research-available)
(unit-type-count villager-farmer >= 15)
(research-completed ri-bow-saw)
;(up-compare-goal g-excess-resources >= gv-some-excess)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-wood-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-hand-cart c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Hand Cart")
)

;====Town Watch

(defrule
(up-research-status c: ri-town-watch == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-town-watch c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required TOWN-WATCH-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-town-watch == research-available)
(or
	(up-building-type-in-town c: watch-tower > 0)
	(or
		(up-unit-type-in-town c: cavalry-class > 0)
		(and
			(building-type-count town-center >= 2)
			(unit-type-count villager >= 30))))
	;Or (up-compare-goal g-excess-resources >= gv-some-excess)
(research-completed ri-wheel-barrow)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-town-watch == research-available)
;(building-type-count town-center >= 2)
;(unit-type-count villager >= 30)
;Or (up-compare-goal g-excess-resources >= gv-some-excess)
;(research-completed ri-wheel-barrow)
;(up-compare-goal g-attack-status >= gv-first-attack)
(up-object-type-count-total c: villager g:>= g-desired-num-villager)
(current-age >= castle-age)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-town-watch c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(set-goal g-temp-2 1)
(chat-local-to-self "Tech: Town Watch")
)

(defrule
(up-research-status c: ri-town-watch == research-available)
(or
	(up-building-type-in-town c: watch-tower > 0)
	(up-unit-type-in-town c: cavalry-class > 0))
(up-compare-goal g-attacking != YES)
(research-completed ri-wheel-barrow)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(goal g-temp-2 0)
=>
(chat-local-to-self "Tech: Town Watch")
)

(defrule
(up-research-status c: ri-town-watch == research-available)
(goal g-temp-2 0)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-town-watch c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
)

;====Town Patrol

(defrule
(up-research-status c: ri-town-patrol == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-town-patrol c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required TOWN-PATROL-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-town-patrol == research-available)
(up-object-type-count-total c: villager g:>= g-desired-num-villager)
(research-completed ri-hand-cart)
;(up-compare-goal g-excess-resources >= gv-high-excess)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-town-patrol == research-available)
(up-object-type-count-total c: villager g:>= g-desired-num-villager)
(research-completed ri-hand-cart)
;(up-compare-goal g-excess-resources >= gv-high-excess)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-town-patrol c: 1)
(chat-local-to-self "Tech: Town Patrol")
)

;Research tech soon

(defrule
(up-research-status c: ri-town-patrol == research-available)
(up-object-type-count-total c: villager g:>= g-desired-num-villager)
(research-completed ri-hand-cart)
;(up-compare-goal g-excess-resources >= gv-high-excess)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-town-patrol c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Town Patrol")
)

;====Villagers

(defrule
(true)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: villager c: 1)
(up-get-cost-delta g-food-delta)
(set-goal g-item-time-required VILLAGER-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-object-type-count-total c: villager g:< g-desired-num-villager)
(population-headroom > 0)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Train unit(s) soon

(defrule
(up-object-type-count-total c: villager g:< g-desired-num-villager)
(population-headroom > 0)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-modify-goal g-temp g:= g-seconds-available-for-building)
(up-modify-goal g-temp g:z/ g-item-time-required)
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: villager g: g-temp)
(up-modify-goal g-temp g:* g-item-time-required)
(up-modify-goal g-seconds-available-for-building g:- g-temp)
)



;====================<<<<<<<<<<MILL>>>>>>>>>>====================

;Get amount of time available at all mills to research techs.

(defrule
(true)
=>
(up-get-fact building-type-count mill g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

;====Horse Collar

(defrule
(up-research-status c: ri-horse-collar == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-horse-collar c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HORSE-COLLAR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-horse-collar == research-available)
(up-compare-goal g-age-status >= gv-advancing-to-castle)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-horse-collar == research-available)
(up-compare-goal g-age-status >= gv-advancing-to-castle)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-horse-collar c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Horse Collar")
)

;====Heavy Plow

(defrule
(up-research-status c: ri-heavy-plow == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-heavy-plow c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HEAVY-PLOW-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-heavy-plow == research-available)
(up-compare-goal g-attack-status >= gv-first-attack)
(unit-type-count villager-farmer >= 4)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-heavy-plow == research-available)
(up-compare-goal g-attack-status >= gv-first-attack)
(unit-type-count villager-farmer >= 4)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-heavy-plow c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Heavy Plow")
)

;====Crop Rotation

(defrule
(up-research-status c: ri-crop-rotation == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-crop-rotation c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CROP-ROTATION-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-crop-rotation == research-available)
(unit-type-count villager-farmer > 8)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-crop-rotation == research-available)
(unit-type-count villager-farmer > 8)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-wood-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-crop-rotation c: 1)
(chat-local-to-self "Tech: Crop Rotation")
)

;Research tech soon

(defrule
(up-research-status c: ri-crop-rotation == research-available)
(unit-type-count villager-farmer > 8)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-wood-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-crop-rotation c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Crop Rotation")
)



;====================<<<<<<<<<<MINING CAMP>>>>>>>>>>====================

;Get amount of time available at all mining camps to research techs.

(defrule
(true)
=>
(up-get-fact building-type-count mining-camp g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

;====Gold Mining

(defrule
(up-research-status c: ri-gold-mining == research-available)
(unit-type-count villager-gold >= 8)
(up-research-status c: ri-double-bit-axe >= research-pending)
(or
	(up-research-status	c: ri-horse-collar >= research-pending)
	(up-research-status c: castle-age >= research-pending))
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-gold-mining c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required GOLD-MINING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-gold-mining == research-available)
(unit-type-count villager-gold >= 8)
(up-research-status c: ri-double-bit-axe >= research-pending)
(or
	(up-research-status	c: ri-horse-collar >= research-pending)
	(up-research-status c: castle-age >= research-pending))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-gold-mining == research-available)
(unit-type-count villager-gold >= 8)
(up-research-status c: ri-double-bit-axe >= research-pending)
(or
	(up-research-status	c: ri-horse-collar >= research-pending)
	(up-research-status c: castle-age >= research-pending))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(chat-local-to-self "Tech: Gold Mining")
)

(defrule
(up-research-status c: ri-gold-mining == research-available)
(unit-type-count villager-gold >= 8)
(up-research-status c: ri-double-bit-axe >= research-pending)
(or
	(up-research-status	c: ri-horse-collar >= research-pending)
	(up-research-status c: castle-age >= research-pending))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-gold-mining c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
)

;====Gold Shaft Mining

(defrule
(up-research-status c: ri-gold-shaft-mining == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-gold-shaft-mining c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required GOLD-SHAFT-MINING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-gold-shaft-mining == research-available)
(up-compare-goal g-attack-status >= gv-first-attack)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-gold-shaft-mining == research-available)
(up-research-status c: ri-heavy-plow >= research-pending)
(unit-type-count villager-gold >= 5)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-gold-shaft-mining c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Gold Shaft Mining")
)

;====Stone Mining

(defrule
(up-research-status c: ri-stone-mining == research-available)
(unit-type-count villager-stone >= 6)
(up-research-status c: ri-double-bit-axe >= research-pending)
(or
	(up-research-status	c: ri-horse-collar >= research-pending)
	(up-research-status c: castle-age >= research-pending))
(or
	(up-compare-goal g-desired-num-castle > 0)
	(up-compare-goal g-desired-num-watch-tower > 1))
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-stone-mining c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required STONE-MINING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-stone-mining == research-available)
(unit-type-count villager-stone >= 6)
(up-research-status c: ri-double-bit-axe >= research-pending)
(or
	(up-research-status	c: ri-horse-collar >= research-pending)
	(up-research-status c: castle-age >= research-pending))
(or
	(up-compare-goal g-desired-num-castle > 0)
	(up-compare-goal g-desired-num-watch-tower > 1))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-stone-mining == research-available)
(unit-type-count villager-stone >= 6)
(up-research-status c: ri-double-bit-axe >= research-pending)
(or
	(up-research-status	c: ri-horse-collar >= research-pending)
	(up-research-status c: castle-age >= research-pending))
(or
	(up-compare-goal g-desired-num-castle > 0)
	(up-compare-goal g-desired-num-watch-tower > 1))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(chat-local-to-self "Tech: Stone Mining")
)

(defrule
(up-research-status c: ri-stone-mining == research-available)
(unit-type-count villager-stone >= 6)
(up-research-status c: ri-double-bit-axe >= research-pending)
(or
	(up-research-status	c: ri-horse-collar >= research-pending)
	(up-research-status c: castle-age >= research-pending))
(or
	(up-compare-goal g-desired-num-castle > 0)
	(up-compare-goal g-desired-num-watch-tower > 1))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-stone-mining == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-stone-mining c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
)

;====Stone Shaft Mining

(defrule
(up-research-status c: ri-stone-shaft-mining == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-stone-shaft-mining c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required STONE-SHAFT-MINING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-stone-shaft-mining == research-available)
(up-compare-goal g-attack-status >= gv-first-attack)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-stone-shaft-mining == research-available)
(up-research-status c: ri-gold-shaft-mining != research-available)
(or
	(up-compare-goal g-desired-num-castle >= 4)
	(up-compare-goal g-desired-num-watch-tower >= 6))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-stone-shaft-mining c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Stone Shaft Mining")
)



;====================<<<<<<<<<<LUMBER CAMP>>>>>>>>>>====================

;Get amount of time available at all lumber camps to research techs.

(defrule
(true)
=>
(up-get-fact building-type-count lumber-camp g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

;====Double-Bit Axe

(defrule
(up-research-status c: ri-double-bit-axe == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-double-bit-axe c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required DOUBLE-BIT-AXE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-double-bit-axe == research-available)
(up-compare-goal g-age-status >= gv-advancing-to-castle)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-double-bit-axe == research-available)
(up-compare-goal g-age-status >= gv-advancing-to-castle)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-double-bit-axe c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Double-Bit Axe")
)

;====Bow Saw

(defrule
(up-research-status c: ri-bow-saw == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-bow-saw c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required BOW-SAW-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-bow-saw == research-available)
(up-compare-goal g-attack-status >= gv-first-attack)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-bow-saw == research-available)
(up-compare-goal g-attack-status >= gv-first-attack)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-bow-saw c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Bow Saw")
)

;====Two-Man Saw

(defrule
(up-research-status c: ri-two-man-saw == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-two-man-saw c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required TWO-MAN-SAW-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-two-man-saw == research-available)
(unit-type-count villager-farmer > 8)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-two-man-saw == research-available)
(unit-type-count villager-farmer > 8)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-wood-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-two-man-saw c: 1)
(chat-local-to-self "Tech: Two-Man Saw")
)

;Research tech soon

(defrule
(up-research-status c: ri-two-man-saw == research-available)
(unit-type-count villager-farmer > 8)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-wood-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-two-man-saw c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Two-Man Saw")
)



;====================<<<<<<<<<<DOCK>>>>>>>>>>====================

;not currently used

;====================<<<<<<<<<<BLACKSMITH>>>>>>>>>>====================

;Get amount of time available at all blacksmiths to research techs.

(defrule
(true)
=>
(up-get-fact building-type-count blacksmith g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

#load-if-defined DE-AVAILABLE

	(defrule
	(or
		(civ-selected bulgarian)
		(players-civ any-ally bulgarian))
	(up-compare-goal g-seconds-available-for-building > 0)
	=>
	(up-modify-goal g-seconds-available-for-building c:%* 150)
	)
	
#end-if

;====Fletching

(defrule
(up-research-status c: ri-fletching == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-fletching c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required FLETCHING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-fletching == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 4)
(up-compare-goal g-initial-strategy != gv-krush)
(up-compare-goal g-initial-strategy != gv-crush)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(set-goal g-temp-2 5)
)

(defrule
(up-compare-goal g-temp-2 != 5)
(up-research-status c: ri-fletching == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 4)
(or
	(up-compare-goal g-initial-strategy == gv-krush)
	(up-compare-goal g-initial-strategy == gv-crush))
(or
	(up-compare-goal g-attack-status >= gv-first-attack)
	(up-research-status c: ri-scale-barding >= research-pending))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

;Condition 1 - want ranged units, not knight rush

(defrule
(up-research-status c: ri-fletching == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 4)
(up-compare-goal g-initial-strategy != gv-krush)
(up-compare-goal g-initial-strategy != gv-crush)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

;Condition 2 - want ranged units, first knight rush attack over

(defrule
(up-research-status c: ri-fletching == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 4)
(or
	(up-compare-goal g-initial-strategy == gv-krush)
	(up-compare-goal g-initial-strategy == gv-crush))
(or
	(up-compare-goal g-attack-status >= gv-first-attack)
	(up-research-status c: ri-scale-barding >= research-pending))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

;Condition 3 - want ranged units, also want cavalry armor upgrade

(defrule
(true)
=>
(up-modify-goal g-temp g:= g-item-time-required)
(up-modify-goal g-temp c:+ SCALE-BARDING-ARMOR-TIME)
)

(defrule
(up-research-status c: ri-fletching == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 4)
(or
	(and
		(or
			(up-compare-goal g-initial-strategy == gv-krush)
			(up-compare-goal g-initial-strategy == gv-crush))
		(up-compare-goal g-attack-status < gv-first-attack))
	(or
		(up-compare-goal g-desired-num-cavalry g:> g-desired-num-pierce-attack-units)
		(up-research-status c: ri-scale-barding >= research-pending)))
(up-compare-goal g-seconds-available-for-building g:>= g-temp)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-fletching == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-fletching c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Fletching")
)

;====Scale Mail Armor

(defrule
(up-research-status c: ri-scale-mail == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-scale-mail c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required SCALE-MAIL-ARMOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-scale-mail == research-available)
(up-compare-goal g-desired-num-infantry >= 5)
(up-compare-goal g-attack-status >= gv-first-attack)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

;Condition 1 - want infantry, not knight rush

(defrule
(up-research-status c: ri-scale-mail == research-available)
(up-compare-goal g-desired-num-infantry >= 5)
(up-compare-goal g-initial-strategy != gv-krush)
(up-compare-goal g-initial-strategy != gv-crush)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

;Condition 2 - want infantry, first knight rush attack over

(defrule
(up-research-status c: ri-scale-mail == research-available)
(up-compare-goal g-desired-num-infantry >= 5)
(or
	(up-compare-goal g-initial-strategy == gv-krush)
	(up-compare-goal g-initial-strategy == gv-crush))
(or
	(up-compare-goal g-attack-status >= gv-first-attack)
	(up-research-status c: ri-scale-barding >= research-pending))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

;Condition 3 - want infantry, also want cavalry armor upgrade

(defrule
(true)
=>
(up-modify-goal g-temp g:= g-item-time-required)
(up-modify-goal g-temp c:+ SCALE-BARDING-ARMOR-TIME)
)

(defrule
(up-research-status c: ri-scale-mail == research-available)
(up-compare-goal g-desired-num-infantry >= 5)
(or
	(and
		(or
			(up-compare-goal g-initial-strategy == gv-krush)
			(up-compare-goal g-initial-strategy == gv-crush))
		(up-compare-goal g-attack-status < gv-first-attack))
	(or
		(up-compare-goal g-desired-num-cavalry g:> g-desired-num-pierce-attack-units)
		(up-research-status c: ri-scale-barding >= research-pending)))
(up-compare-goal g-seconds-available-for-building g:>= g-temp)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-scale-mail == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-scale-mail c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Scale Mail")
)

;====Padded Archer Armor

(defrule
(up-research-status c: ri-padded-archer-armor == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-padded-archer-armor c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required PADDED-ARCHER-ARMOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-padded-archer-armor == research-available)
(up-compare-goal g-desired-num-archer-armor-units >= 5)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

;Condition 1 - want infantry, not knight rush

(defrule
(up-research-status c: ri-padded-archer-armor == research-available)
(up-compare-goal g-desired-num-archer-armor-units >= 5)
(up-compare-goal g-initial-strategy != gv-krush)
(up-compare-goal g-initial-strategy != gv-crush)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

;Condition 2 - want infantry, first knight rush attack over

(defrule
(up-research-status c: ri-padded-archer-armor == research-available)
(up-compare-goal g-desired-num-archer-armor-units >= 5)
(or
	(up-compare-goal g-initial-strategy == gv-krush)
	(up-compare-goal g-initial-strategy == gv-crush))
(or
	(up-compare-goal g-attack-status >= gv-first-attack)
	(up-research-status c: ri-scale-barding >= research-pending))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

;Condition 3 - want archers, also want cavalry armor upgrade

(defrule
(true)
=>
(up-modify-goal g-temp g:= g-item-time-required)
(up-modify-goal g-temp c:+ SCALE-BARDING-ARMOR-TIME)
)

(defrule
(up-research-status c: ri-padded-archer-armor == research-available)
(up-compare-goal g-desired-num-archer-armor-units >= 5)
(or
	(and
		(or
			(up-compare-goal g-initial-strategy == gv-krush)
			(up-compare-goal g-initial-strategy == gv-crush))
		(up-compare-goal g-attack-status < gv-first-attack))
	(or
		(up-compare-goal g-desired-num-cavalry g:> g-desired-num-pierce-attack-units)
		(up-research-status c: ri-scale-barding >= research-pending)))
(up-compare-goal g-seconds-available-for-building g:>= g-temp)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-padded-archer-armor == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-padded-archer-armor c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Padded Archer Armor")
)

;====Scale Barding Armor

(defrule
(up-research-status c: ri-scale-barding == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-scale-barding c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required SCALE-BARDING-ARMOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-scale-barding == research-available)
(up-compare-goal g-desired-num-cavalry >= 4)
(up-compare-goal g-attack-status >= gv-first-attack)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-scale-barding == research-available)
(up-compare-goal g-desired-num-cavalry >= 4)
(up-compare-goal g-attack-status >= gv-first-attack)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-scale-barding c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Scale Barding")
)

;====Forging

(defrule
(up-research-status c: ri-forging == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-forging c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required FORGING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-forging == research-available)
(up-compare-goal g-desired-num-melee-attack-units >= 8)
(up-compare-goal g-attack-status >= gv-first-attack)
(or
	(up-research-status c: ri-scale-barding != research-available)
	(up-research-status c: ri-scale-mail != research-available))
(or
	(or
		(goal g-strategy gv-krush)
		(goal g-strategy gv-crush))
	(up-research-status c: ri-chain-barding != research-available))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-forging == research-available)
(up-compare-goal g-desired-num-melee-attack-units >= 8)
(up-compare-goal g-attack-status >= gv-first-attack)
(or
	(up-research-status c: ri-scale-barding != research-available)
	(up-research-status c: ri-scale-mail != research-available))
(or
	(or
		(goal g-strategy gv-krush)
		(goal g-strategy gv-crush))
	(up-research-status c: ri-chain-barding != research-available))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-forging == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-forging c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Forging")
)

;====Bodkin Arrow

(defrule
(up-research-status c: ri-bodkin-arrow == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-bodkin-arrow c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required BODKIN-ARROW-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-bodkin-arrow == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 6)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-bodkin-arrow == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 6)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-bodkin-arrow == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-bodkin-arrow c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Bodkin Arrow")
)

;====Chain Barding Armor

(defrule
(up-research-status c: ri-chain-barding == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-chain-barding c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CHAIN-BARDING-ARMOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-chain-barding == research-available)
(up-compare-goal g-desired-num-cavalry >= 8)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-chain-barding == research-available)
(up-compare-goal g-desired-num-cavalry >= 8)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-chain-barding c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Chain Barding")
)

;====Leather Archer Armor

(defrule
(up-research-status c: ri-leather-archer-armor == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-leather-archer-armor c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required LEATHER-ARCHER-ARMOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-leather-archer-armor == research-available)
(up-compare-goal g-desired-num-archer-armor-units >= 10)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-leather-archer-armor == research-available)
(up-compare-goal g-desired-num-archer-armor-units >= 10)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-leather-archer-armor == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-leather-archer-armor c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Leather Archer Armor")
)

;====Chain Mail Armor

(defrule
(up-research-status c: ri-chain-mail == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-chain-mail c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CHAIN-MAIL-ARMOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-chain-mail == research-available)
(up-compare-goal g-desired-num-infantry >= 10)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-chain-mail == research-available)
(up-compare-goal g-desired-num-infantry >= 10)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-chain-mail == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-chain-mail c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Chain Mail")
)

;====Iron Casting

(defrule
(up-research-status c: ri-iron-casting == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-iron-casting c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required IRON-CASTING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-iron-casting == research-available)
(up-compare-goal g-desired-num-melee-attack-units >= 15)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-iron-casting == research-available)
(up-compare-goal g-desired-num-melee-attack-units >= 15)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-iron-casting c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Iron Casting")
)

;====Bracer

(defrule
(up-research-status c: ri-bracer == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-bracer c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required BRACER-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-bracer == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 6)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-bracer == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 6)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-bracer c: 1)
(chat-local-to-self "Tech: Bracer")
)

;Research tech soon

(defrule
(up-research-status c: ri-bracer == research-available)
(up-compare-goal g-desired-num-pierce-attack-units > 6)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-bracer == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-bracer c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Bracer")
)

;====Plate Barding Armor

(defrule
(up-research-status c: ri-plate-barding == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-plate-barding c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required PLATE-BARDING-ARMOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-plate-barding == research-available)
(up-compare-goal g-desired-num-cavalry >= 8)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-plate-barding == research-available)
(up-compare-goal g-desired-num-cavalry >= 8)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-plate-barding c: 1)
(chat-local-to-self "Tech: Plate Barding")
)

;Research tech soon

(defrule
(up-research-status c: ri-plate-barding == research-available)
(up-compare-goal g-desired-num-cavalry >= 8)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-plate-barding c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Plate Barding")
)

;====Plate Mail Armor

(defrule
(up-research-status c: ri-plate-mail == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-plate-mail c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required PLATE-MAIL-ARMOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-plate-mail == research-available)
(up-compare-goal g-desired-num-infantry >= 10)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-plate-mail == research-available)
(up-compare-goal g-desired-num-infantry >= 10)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-plate-mail c: 1)
(chat-local-to-self "Tech: Plate Mail")
)

;Research tech soon

(defrule
(up-research-status c: ri-plate-mail == research-available)
(up-compare-goal g-desired-num-infantry >= 10)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-plate-mail == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-plate-mail c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Plate Mail")
)

;====Ring Archer Armor

(defrule
(up-research-status c: ri-ring-archer-armor == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-ring-archer-armor c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required RING-ARCHER-ARMOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-ring-archer-armor == research-available)
(up-compare-goal g-desired-num-archer-armor-units >= 10)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-ring-archer-armor == research-available)
(up-compare-goal g-desired-num-archer-armor-units >= 10)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-ring-archer-armor c: 1)
(chat-local-to-self "Tech: Ring Archer Armor")
)

;Research tech soon

(defrule
(up-research-status c: ri-ring-archer-armor == research-available)
(up-compare-goal g-desired-num-archer-armor-units >= 10)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-ring-archer-armor == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-ring-archer-armor c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Ring Archer Armor")
)

;====Blast Furnace

(defrule
(up-research-status c: ri-blast-furnace == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-blast-furnace c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required BLAST-FURNACE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-blast-furnace == research-available)
(up-compare-goal g-desired-num-melee-attack-units >= 15)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-blast-furnace == research-available)
(up-compare-goal g-desired-num-melee-attack-units >= 15)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-blast-furnace c: 1)
(chat-local-to-self "Tech: Blast Furnace")
)

;Research tech soon

(defrule
(up-research-status c: ri-blast-furnace == research-available)
(up-compare-goal g-desired-num-melee-attack-units >= 15)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-blast-furnace c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Blast Furnace")
)



;====================<<<<<<<<<<MARKET>>>>>>>>>>====================

;Get amount of time available at all markets to research techs and train trade carts.

(defrule
(true)
=>
(up-get-fact building-type-count market g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

;====Cartography

(defrule
(up-research-status c: ri-cartography == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-cartography c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CARTOGRAPHY-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-cartography == research-available)
(player-in-game any-ally)
(current-age >= castle-age)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-cartography == research-available)
(player-in-game any-ally)
(current-age >= castle-age)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-cartography c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Cartography")
)

;====Caravan

(defrule
(up-research-status c: ri-caravan == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-caravan c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CARAVAN-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-caravan == research-available)
(player-in-game any-ally)
(population > 150)
(or	
	(up-compare-goal g-desired-num-trade-cart >= 5)
	(unit-type-count trade-cart >= 5))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-caravan == research-available)
(player-in-game any-ally)
(population > 150)
(or	
	(up-compare-goal g-desired-num-trade-cart >= 5)
	(unit-type-count trade-cart >= 5))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-caravan == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-caravan c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Caravan")
)

#load-if-defined DO-NOT-LOAD		;AI doesn't tribute yet, so these techs are pointless

	;====Coinage

	(defrule
	(up-research-status c: ri-coinage == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-coinage c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required COINAGE-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-coinage == research-available)
	(player-in-game any-ally)
	(current-age >= castle-age)
	(food-amount >= 500)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-coinage == research-available)
	(player-in-game any-ally)
	(current-age >= castle-age)
	(food-amount >= 500)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-coinage == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-coinage c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Coinage")
	)

	;====Banking

	(defrule
	(up-research-status c: ri-banking == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-banking c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required BANKING-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-banking == research-available)
	(player-in-game any-ally)
	(population > 150)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-banking == research-available)
	(player-in-game any-ally)
	(population > 150)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-banking c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Banking")
	)

#end-if

;====Guilds

(defrule
(up-research-status c: ri-guilds == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-guilds c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required GUILDS-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-guilds == research-available)
(population > 100)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-guilds == research-available)
(population > 100)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-guilds c: 1)
(chat-local-to-self "Tech: Guilds")
)

;Research tech soon

(defrule
(up-research-status c: ri-guilds == research-available)
(population > 100)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-guilds c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Guilds")
)

;====Trade Carts

(defrule
(true)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: trade-cart c: 1)
(up-get-cost-delta g-food-delta)
(set-goal g-item-time-required TRADE-CART-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-object-type-count-total c: trade-cart g:< g-desired-num-trade-cart)
(population-headroom > 0)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Train unit(s) soon

(defrule
(up-object-type-count-total c: trade-cart g:< g-desired-num-trade-cart)
(population-headroom > 0)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-modify-goal g-temp g:= g-seconds-available-for-building)
(up-modify-goal g-temp g:z/ g-item-time-required)
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-object-cost c: trade-cart g: g-temp)
(up-modify-goal g-temp g:* g-item-time-required)
(up-modify-goal g-seconds-available-for-building g:- g-temp)
)



;====================<<<<<<<<<<MONASTERY>>>>>>>>>>====================

;Get amount of time available at all monasteries to research techs and train monks.

(defrule
(true)
=>
(up-get-fact building-type-count monastery g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

#load-if-defined DE-AVAILABLE

	(defrule
	(or
		(civ-selected lithuanian)
		(players-civ any-ally lithuanian))
	(up-compare-goal g-seconds-available-for-building > 0)
	=>
	(up-modify-goal g-seconds-available-for-building c:%* 120)
	)
	
#end-if

;====Heresy

(defrule
(up-research-status c: ri-heresy == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-heresy c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HERESY-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-heresy == research-available)
(or
	(players-unit-type-count any-enemy monk > 7)
	(and
		(civ-selected aztec)
		(up-compare-goal g-desired-num-monk > 10)))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-heresy == research-available)
(or
	(players-unit-type-count any-enemy monk > 7)
	(and
		(civ-selected aztec)
		(up-compare-goal g-desired-num-monk > 10)))
(or
	(up-compare-goal g-gold-delta > 150)
	(up-compare-goal g-seconds-available-for-building g:< g-item-time-required))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-heresy c: 1)
(chat-local-to-self "Tech: Heresy")
)

;Research tech soon

(defrule
(up-research-status c: ri-heresy == research-available)
(or
	(players-unit-type-count any-enemy monk > 7)
	(and
		(civ-selected aztec)
		(up-compare-goal g-desired-num-monk > 10)))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-heresy == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-heresy c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Heresy")
)

;====Faith

(defrule
(up-research-status c: ri-faith == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-faith c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required FAITH-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-faith == research-available)
(or
	(players-unit-type-count any-enemy monk > 7)
	(and
		(civ-selected aztec)
		(up-compare-goal g-desired-num-monk > 10)))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(set-goal g-temp-2 1)
)

(defrule
(up-compare-goal g-temp-2 != 1)
(up-research-status c: ri-faith == research-available)
(players-unit-type-count any-enemy monk > 3)
(or
	(unit-type-count war-elephant-line > 6)
	(or
		(unit-type-count elephant-archer > 8)
		(unit-type-count battle-elephant > 6)))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-faith == research-available)
(or
	(players-unit-type-count any-enemy monk > 7)
	(and
		(civ-selected aztec)
		(up-compare-goal g-desired-num-monk > 10)))
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-faith c: 1)
(chat-local-to-self "Tech: Faith")
(set-goal g-temp-2 2)
)

(defrule
(up-compare-goal g-temp-2 != 2)
(up-research-status c: ri-faith == research-available)
(players-unit-type-count any-enemy monk > 3)
(or
	(unit-type-count war-elephant-line > 6)
	(or
		(unit-type-count elephant-archer > 8)
		(unit-type-count battle-elephant > 6)))
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-faith c: 1)
(chat-local-to-self "Tech: Faith")
)

;Research tech soon

(defrule
(up-research-status c: ri-faith == research-available)
(or
	(players-unit-type-count any-enemy monk > 7)
	(and
		(civ-selected aztec)
		(up-compare-goal g-desired-num-monk > 10)))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-gold-delta <= 150)
(up-compare-goal g-food-delta <= 150)
=>
(set-goal g-temp-2 3)
)

(defrule
(up-research-status c: ri-faith == research-available)
(players-unit-type-count any-enemy monk > 3)
(or
	(unit-type-count war-elephant-line > 6)
	(or
		(unit-type-count elephant-archer > 8)
		(unit-type-count battle-elephant > 6)))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-gold-delta <= 150)
(up-compare-goal g-food-delta <= 150)
=>
(set-goal g-temp-2 3)
)

(defrule
(up-research-status c: ri-faith == research-available)
(goal g-temp-2 3)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-faith c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Faith")
)

;====Redemption

(defrule
(up-research-status c: ri-redemption == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-redemption c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required REDEMPTION-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-redemption == research-available)
(up-compare-goal g-desired-num-monk > 7)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-redemption == research-available)
(up-compare-goal g-desired-num-monk > 7)
(or
	(up-compare-goal g-gold-delta > 150)
	(up-compare-goal g-seconds-available-for-building g:< g-item-time-required))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-redemption c: 1)
(chat-local-to-self "Tech: Redemption")
)

;Research tech soon

(defrule
(up-research-status c: ri-redemption == research-available)
(up-compare-goal g-desired-num-monk > 7)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-gold-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-redemption c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Redemption")
)

;====Sanctity

(defrule
(up-research-status c: ri-sanctity == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-sanctity c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required SANCTITY-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-sanctity == research-available)
(up-compare-goal g-desired-num-monk > 5)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-sanctity == research-available)
(up-compare-goal g-desired-num-monk > 5)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-sanctity c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Sanctity")
)

;====Theocracy

(defrule
(up-research-status c: ri-theocracy == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-theocracy c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required THEOCRACY-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-theocracy == research-available)
(up-compare-goal g-desired-num-monk > 5)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-theocracy == research-available)
(up-compare-goal g-desired-num-monk > 5)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-theocracy c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Theocracy")
)

;====Block Printing

(defrule
(up-research-status c: ri-block-printing == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-block-printing c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required BLOCK-PRINTING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-block-printing == research-available)
(up-compare-goal g-desired-num-monk > 7)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-block-printing == research-available)
(up-compare-goal g-desired-num-monk > 7)
(or
	(up-compare-goal g-gold-delta > 150)
	(up-compare-goal g-seconds-available-for-building g:< g-item-time-required))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-block-printing c: 1)
(chat-local-to-self "Tech: Block Printing")
)

;Research tech soon

(defrule
(up-research-status c: ri-block-printing == research-available)
(up-compare-goal g-desired-num-monk > 7)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-gold-delta <= 150)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-block-printing c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Block Printing")
)

;====Illumination

(defrule
(up-research-status c: ri-illumination == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-illumination c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ILLUMINATION-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-illumination == research-available)
(up-compare-goal g-desired-num-monk > 5)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-illumination == research-available)
(up-compare-goal g-desired-num-monk > 5)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-illumination c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Illumination")
)

;====Atonement

(defrule
(up-research-status c: ri-atonement == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-atonement c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ATONEMENT-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-atonement == research-available)
(or
	(players-unit-type-count any-enemy monk > 5)
	(civ-selected aztec))
(up-compare-goal g-desired-num-monk > 7)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-atonement == research-available)
(or
	(players-unit-type-count any-enemy monk > 5)
	(civ-selected aztec))
(up-compare-goal g-desired-num-monk > 7)
(or
	(up-compare-goal g-gold-delta > 150)
	(up-compare-goal g-seconds-available-for-building g:< g-item-time-required))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-atonement c: 1)
(chat-local-to-self "Tech: Atonement")
)

;Research tech soon

(defrule
(up-research-status c: ri-atonement == research-available)
(or
	(players-unit-type-count any-enemy monk > 5)
	(civ-selected aztec))
(up-compare-goal g-desired-num-monk > 7)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-atonement == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-atonement c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Atonement")
)

;====Fervor

(defrule
(up-research-status c: ri-fervor == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-fervor c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required FERVOR-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-fervor == research-available)
(up-compare-goal g-desired-num-monk > 5)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-fervor == research-available)
(up-compare-goal g-desired-num-monk > 5)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-fervor c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Fervor")
)

;====Herbal Medicine

;Don't save for Herbal Medicine



;====TRAIN MONKS

#load-if-not-defined SPANISH-CIV

	;====Monks

	(defrule
	(true)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: monk c: 1)
	(up-get-cost-delta g-food-delta)
	(set-goal g-item-time-required MONK-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-object-type-count-total c: monk g:< g-desired-num-monk)
	(population-headroom > 0)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Train unit(s) soon

	(defrule
	(up-object-type-count-total c: monk g:< g-desired-num-monk)
	(population-headroom > 0)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-modify-goal g-temp g:= g-seconds-available-for-building)
	(up-modify-goal g-temp g:z/ g-item-time-required)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: monk g: g-temp)
	(up-modify-goal g-temp g:* g-item-time-required)
	(up-modify-goal g-seconds-available-for-building g:- g-temp)
	)
	
#end-if

#load-if-defined SPANISH-CIV

;Calculate which monk/missionary should be trained next.
;Do this by calculating which unit has the smallest
;current units trained to desired train amount ratio.

(defrule
(building-type-count monastery > 0)
=>
(set-goal g-num-units-wanted-slot-1 0)	;Monk
(set-goal g-num-units-wanted-slot-2 0)	;Missionary
(set-goal i 0)
)

	;Jump rule section

	(defrule
	(building-type-count monastery > 0)
	=>
	(set-goal g-temp 100)	;ratio of current units to desired units (in %, lowest ratio is next trained unit)
	(set-goal g-temp-2 100)	;current lowest ratio (in %)
	(set-goal g-next-unit-wanted PENDING)
	)

	;Monk
	
	(defrule
	(building-type-count monastery > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-monk)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-1)
	(set-goal g-item-time-required MONK-TIME)
	)
	
	(defrule
	(or
		(civ-selected lithuanian)
		(players-civ any-ally lithuanian))
	(building-type-count monastery > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)

	(defrule
	(building-type-count monastery > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available monk)
	(up-object-type-count-total c: monk g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total monk g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-1)
	(up-modify-goal g-temp g:%/ g-desired-num-monk)
	)

	(defrule
	(building-type-count monastery > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available monk)
	(up-object-type-count-total c: monk g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= monk)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Missionary
	
	(defrule
	(building-type-count monastery > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-missionary)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-2)
	(set-goal g-item-time-required MISSIONARY-TIME)
	)
	
	(defrule
	(or
		(civ-selected lithuanian)
		(players-civ any-ally lithuanian))
	(building-type-count monastery > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)

	(defrule
	(building-type-count monastery > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available missionary)
	(up-object-type-count-total c: missionary g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total missionary g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-2)
	(up-modify-goal g-temp g:%/ g-desired-num-missionary)
	)

	(defrule
	(building-type-count monastery > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available missionary)
	(up-object-type-count-total c: missionary g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= missionary)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)



	;Add needed resources for unit chosen,
	;Then re-do process until out of monastery time.
	
	(defrule
	(building-type-count monastery > 0)
	=>
	(set-goal g-temp 100)
	)
	
	(defrule
	(building-type-count monastery > 0)
	(or
		(civ-selected lithuanian)
		(players-civ any-ally lithuanian))
	=>
	(set-goal g-temp 120)	;adjustment to divide by
	)

	;Monk

	(defrule
	(building-type-count monastery > 0)
	(up-compare-goal g-next-unit-wanted == monk)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: monk c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: monk c: 1)
	(up-modify-goal g-num-units-wanted-slot-1 c:+ 1)
	(set-goal g-item-time-required MONK-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Missionary

	(defrule
	(building-type-count monastery > 0)
	(up-compare-goal g-next-unit-wanted == missionary)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: missionary c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: missionary c: 1)
	(up-modify-goal g-num-units-wanted-slot-1 c:+ 2)
	(set-goal g-item-time-required MISSIONARY-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building c:- MISSIONARY-TIME)
	)

	;Loop again for next unit to train
	;Or no units to train

	(defrule
	(building-type-count monastery > 0)
	(up-compare-goal g-next-unit-wanted != PENDING)
	(up-compare-goal i < 50)
	=>
	(up-modify-goal i c:+ 1)
	(up-jump-rule -14)
	)
	
#end-if

(defrule
(up-compare-goal g-num-units-wanted-slot-1 > 0)
(building-type-count monastery > 0)
=>
(up-chat-data-to-self "Monks: %d" g: g-num-units-wanted-slot-1)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-2 > 0)
(building-type-count monastery > 0)
=>
(up-chat-data-to-self "Missionaries: %d" g: g-num-units-wanted-slot-2)
)


;====================<<<<<<<<<<UNIVERSITY>>>>>>>>>>====================

;Get amount of time available at all universities to research techs.

(defrule
(true)
=>
(up-get-fact building-type-count university g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

(defrule
(or
	(civ-selected malian)
	(players-civ any-ally malian))
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 180)
)


;====Chemistry

(defrule
(up-research-status c: ri-chemistry == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-chemistry c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CHEMISTRY-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-chemistry == research-available)
(or
	(up-compare-goal g-desired-num-hand-cannoneer > 0)
	(or
		(up-compare-goal g-desired-num-bombard-cannon > 0)
		(or
			(up-compare-goal g-desired-num-bombard-tower > 0)
			(up-compare-goal g-desired-num-cannon-galleon > 0))))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-chemistry == research-available)
(or
	(up-compare-goal g-desired-num-hand-cannoneer > 0)
	(or
		(up-compare-goal g-desired-num-bombard-cannon > 0)
		(or
			(up-compare-goal g-desired-num-bombard-tower > 0)
			(up-compare-goal g-desired-num-cannon-galleon > 0))))
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-chemistry c: 1)
(chat-local-to-self "Tech: Chemistry")
)

;Research tech soon

(defrule
(up-research-status c: ri-chemistry == research-available)
(or
	(up-compare-goal g-desired-num-hand-cannoneer > 0)
	(or
		(up-compare-goal g-desired-num-bombard-cannon > 0)
		(or
			(up-compare-goal g-desired-num-bombard-tower > 0)
			(up-compare-goal g-desired-num-cannon-galleon > 0))))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-chemistry == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-chemistry c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Chemistry")
)

;====Bombard Tower

(defrule
(up-research-status c: ri-bombard-tower == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-bombard-tower c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required BOMBARD-TOWER-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-bombard-tower == research-available)
(up-compare-goal g-desired-num-bombard-tower > 0)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-bombard-tower == research-available)
(up-compare-goal g-desired-num-bombard-tower > 0)
(or
	(up-compare-goal g-wood-delta > 200)
	(or
		(up-compare-goal g-food-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-bombard-tower c: 1)
(chat-local-to-self "Tech: Bombard Tower")
)

;Research tech soon

(defrule
(up-research-status c: ri-bombard-tower == research-available)
(up-compare-goal g-desired-num-bombard-tower > 0)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-wood-delta <= 200)
(up-compare-goal g-food-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-bombard-tower == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-bombard-tower c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Bombard Tower")
)

;====Ballistics

(defrule
(up-research-status c: ri-ballistics == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-ballistics c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required BALLISTICS-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-ballistics == research-available)
(or
	(up-compare-goal g-desired-num-pierce-attack-units >= 10)
	(up-compare-goal g-desired-num-galley >= 6))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-ballistics == research-available)
(or
	(up-compare-goal g-desired-num-pierce-attack-units >= 10)
	(up-compare-goal g-desired-num-galley >= 6))
(or
	(up-compare-goal g-wood-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-ballistics c: 1)
(chat-local-to-self "Tech: Ballistics")
)

;Research tech soon

(defrule
(up-research-status c: ri-ballistics == research-available)
(or
	(up-compare-goal g-desired-num-pierce-attack-units >= 10)
	(up-compare-goal g-desired-num-galley >= 6))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-wood-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-ballistics == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-ballistics c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Ballistics")
)

;====Siege Engineers

(defrule
(up-research-status c: ri-siege-engineers == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-siege-engineers c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required SIEGE-ENGINEERS-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-siege-engineers == research-available)
(or
	(up-compare-goal g-desired-num-siege > 3)
	(up-compare-goal g-siege-class > 3))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-siege-engineers == research-available)
(or
	(up-compare-goal g-desired-num-siege > 3)
	(up-compare-goal g-siege-class > 3))
(or
	(up-compare-goal g-wood-delta > 200)
	(or
		(up-compare-goal g-food-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-siege-engineers c: 1)
(chat-local-to-self "Tech: Siege Engineers")
)

;Research tech soon

(defrule
(up-research-status c: ri-siege-engineers == research-available)
(or
	(up-compare-goal g-desired-num-siege > 3)
	(up-compare-goal g-siege-class > 3))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-wood-delta <= 200)
(up-compare-goal g-food-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-siege-engineers == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-siege-engineers c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Siege Engineers")
)

;====Guard Tower

(defrule
(up-research-status c: ri-guard-tower == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-guard-tower c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required GUARD-TOWER-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-guard-tower == research-available)
(or
	(up-compare-goal g-desired-num-watch-tower > 5)
	(up-compare-goal g-watch-tower-line >= 5))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-guard-tower == research-available)
(or
	(up-compare-goal g-desired-num-watch-tower > 5)
	(up-compare-goal g-watch-tower-line >= 5))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-guard-tower c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Guard Tower")
)

;====Arrowslits

(defrule
(up-research-status c: ri-arrowslits == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-arrowslits c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ARROWSLITS-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-arrowslits == research-available)
(or
	(up-compare-goal g-desired-num-watch-tower > 5)
	(up-compare-goal g-watch-tower-line >= 5))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-arrowslits == research-available)
(or
	(up-compare-goal g-desired-num-watch-tower > 5)
	(up-compare-goal g-watch-tower-line >= 5))
(or
	(up-compare-goal g-wood-delta > 150)
	(or
		(up-compare-goal g-food-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-arrowslits c: 1)
(chat-local-to-self "Tech: Arrowslits")
)

;Research tech soon

(defrule
(up-research-status c: ri-arrowslits == research-available)
(or
	(up-compare-goal g-desired-num-watch-tower > 5)
	(up-compare-goal g-watch-tower-line >= 5))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-wood-delta <= 150)
(up-compare-goal g-food-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-arrowslits == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-arrowslits c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Arrowslits")
)

;====Keep

(defrule
(up-research-status c: ri-keep == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-keep c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required KEEP-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-keep == research-available)
(or
	(up-compare-goal g-desired-num-watch-tower > 5)
	(up-compare-goal g-watch-tower-line >= 5))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-keep == research-available)
(or
	(up-compare-goal g-desired-num-watch-tower > 5)
	(up-compare-goal g-watch-tower-line >= 5))
(or
	(up-compare-goal g-wood-delta > 200)
	(or
		(up-compare-goal g-food-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-keep c: 1)
(chat-local-to-self "Tech: Keep")
)

;Research tech soon

(defrule
(up-research-status c: ri-keep == research-available)
(or
	(up-compare-goal g-desired-num-watch-tower > 5)
	(up-compare-goal g-watch-tower-line >= 5))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-wood-delta <= 200)
(up-compare-goal g-food-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-keep == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-keep c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Keep")
)

;====Murder Holes

(defrule
(up-research-status c: ri-murder-holes == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-murder-holes c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required MURDER-HOLES-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-murder-holes == research-available)
(or
	(building-type-count-total castle >= 3)
	(or
		(up-compare-goal g-watch-tower-line >= 5)
		(and
			(building-type-count castle >= 1)
			(goal g-town-under-attack YES))))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-murder-holes == research-available)
(or
	(building-type-count-total castle >= 3)
	(or
		(up-compare-goal g-watch-tower-line >= 5)
		(and
			(building-type-count castle >= 1)
			(goal g-town-under-attack YES))))
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-stone-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-murder-holes c: 1)
(chat-local-to-self "Tech: Murder Holes")
)

;Research tech soon

(defrule
(up-research-status c: ri-murder-holes == research-available)
(or
	(building-type-count-total castle >= 3)
	(or
		(up-compare-goal g-watch-tower-line >= 5)
		(and
			(building-type-count castle >= 1)
			(goal g-town-under-attack YES))))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-stone-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-murder-holes == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-murder-holes c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Murder Holes")
)

;====Masonry

(defrule
(up-research-status c: ri-masonry == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-masonry c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required MASONRY-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-masonry == research-available)
(goal g-town-under-attack NO)
(population > 95)
(research-completed ri-murder-holes)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-masonry == research-available)
(goal g-town-under-attack NO)
(population > 95)
(research-completed ri-murder-holes)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-masonry c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Masonry")
)

;====Architecture

(defrule
(up-research-status c: ri-architecture == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-architecture c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ARCHITECTURE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-architecture == research-available)
(goal g-town-under-attack NO)
(population > 95)
(research-completed ri-murder-holes)
(building-type-count castle >= 2)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-architecture == research-available)
(goal g-town-under-attack NO)
(population > 95)
(research-completed ri-murder-holes)
(building-type-count castle >= 2)
(or
	(up-compare-goal g-wood-delta > 150)
	(or
		(up-compare-goal g-food-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-architecture c: 1)
(chat-local-to-self "Tech: Architecture")
)

;Research tech soon

(defrule
(up-research-status c: ri-architecture == research-available)
(goal g-town-under-attack NO)
(population > 95)
(research-completed ri-murder-holes)
(building-type-count castle >= 2)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-wood-delta <= 150)
(up-compare-goal g-food-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-architecture == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-architecture c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Architecture")
)

;====Treadmill Crane

(defrule
(up-research-status c: ri-treadmill-crane == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-treadmill-crane c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required TREADMILL-CRANE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-treadmill-crane == research-available)
(population > 95)
(up-compare-goal g-desired-num-castle >= 3)
(building-type-count castle >= 2)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-treadmill-crane == research-available)
(population > 95)
(up-compare-goal g-desired-num-castle >= 3)
(or
	(up-compare-goal g-wood-delta > 150)
	(or
		(up-compare-goal g-food-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-treadmill-crane c: 1)
(chat-local-to-self "Tech: Treadmill Crane")
)

;Research tech soon

(defrule
(up-research-status c: ri-treadmill-crane == research-available)
(population > 95)
(up-compare-goal g-desired-num-castle >= 3)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-wood-delta <= 150)
(up-compare-goal g-food-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-treadmill-crane == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-treadmill-crane c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Treadmill Crane")
)

;====Heated Shot

(defrule
(up-research-status c: ri-heated-shot == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-heated-shot c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HEATED-SHOT-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-heated-shot == research-available)
(or
	(building-type-count-total castle >= 3)
	(up-compare-goal g-watch-tower-line >= 5))
(players-unit-type-count any-enemy warship-class > 10)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-heated-shot == research-available)
(or
	(building-type-count-total castle >= 3)
	(up-compare-goal g-watch-tower-line >= 5))
(players-unit-type-count any-enemy warship-class > 10)
(or
	(up-compare-goal g-wood-delta > 150)
	(or
		(up-compare-goal g-food-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-heated-shot c: 1)
(chat-local-to-self "Tech: Heated Shot")
)

;Research tech soon

(defrule
(up-research-status c: ri-heated-shot == research-available)
(or
	(building-type-count-total castle >= 3)
	(up-compare-goal g-watch-tower-line >= 5))
(players-unit-type-count any-enemy warship-class > 10)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-wood-delta <= 150)
(up-compare-goal g-food-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-heated-shot == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-heated-shot c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Heated Shot")
)

;====================<<<<<<<<<<BARRACKS>>>>>>>>>>====================

;Get amount of time available at all barracks to research techs and train soldiers.

(defrule
(true)
=>
(up-get-fact building-type-count barracks g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

(defrule
(research-completed ri-conscription)
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 133)
)

#load-if-defined GOTHIC-CIV

	(defrule
	(research-completed ri-imperial-unique-tech)
	(up-compare-goal g-seconds-available-for-building > 0)
	=>
	(up-modify-goal g-seconds-available-for-building c:* 2)
	)
	
#end-if

(defrule
(or
	(civ-selected gothic)
	(players-civ any-ally gothic))
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 120)
)



;====Eagle Warrior

(defrule
(up-research-status c: ri-eagle-warrior == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-eagle-warrior c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required EAGLE-WARRIOR-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-eagle-warrior == research-available)
(or
	(up-compare-goal g-desired-num-eagle-warrior > 5)
	(unit-type-count-total eagle-warrior-line >= 8))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-eagle-warrior == research-available)
(or
	(up-compare-goal g-desired-num-eagle-warrior > 5)
	(unit-type-count-total eagle-warrior-line >= 8))
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-eagle-warrior c: 1)
(chat-local-to-self "Tech: Eagle Warrior")
)

;Research tech soon

(defrule
(up-research-status c: ri-eagle-warrior == research-available)
(or
	(up-compare-goal g-desired-num-eagle-warrior > 5)
	(unit-type-count-total eagle-warrior-line >= 8))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-eagle-warrior == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-eagle-warrior c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Eagle Warrior")
)

;====Elite Eagle Warrior

(defrule
(up-research-status c: ri-elite-eagle-warrior == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-elite-eagle-warrior c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ELITE-EAGLE-WARRIOR-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-elite-eagle-warrior == research-available)
(or
	(up-compare-goal g-desired-num-eagle-warrior > 8)
	(unit-type-count-total eagle-warrior-line >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-elite-eagle-warrior == research-available)
(or
	(up-compare-goal g-desired-num-eagle-warrior > 8)
	(unit-type-count-total eagle-warrior-line >= 12))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-elite-eagle-warrior c: 1)
(chat-local-to-self "Tech: Elite Eagle Warrior")
)

;Research tech soon

(defrule
(up-research-status c: ri-elite-eagle-warrior == research-available)
(or
	(up-compare-goal g-desired-num-eagle-warrior > 8)
	(unit-type-count-total eagle-warrior-line >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-elite-eagle-warrior == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-elite-eagle-warrior c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Elite Eagle Warrior")
)

;====Pikeman

(defrule
(up-research-status c: ri-pikeman == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-pikeman c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required PIKEMAN-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-pikeman == research-available)
(or
	(up-compare-goal g-desired-num-spearman > 5)
	(or
		(unit-type-count-total spearman-line >= 10)
		(and
			(up-compare-goal g-desired-num-spearman > 0)
			(up-compare-goal g-strategy >= gv-low-gold))))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-pikeman == research-available)
(or
	(up-compare-goal g-desired-num-spearman > 5)
	(or
		(unit-type-count-total spearman-line >= 10)
		(and
			(up-compare-goal g-desired-num-spearman > 0)
			(up-compare-goal g-strategy >= gv-low-gold))))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-pikeman == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-pikeman c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Pikeman")
)

;====Halberdier

(defrule
(up-research-status c: ri-halberdier == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-halberdier c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HALBERDIER-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-halberdier == research-available)
(or
	(up-compare-goal g-desired-num-spearman > 8)
	(or
		(unit-type-count-total spearman-line >= 12)
		(and
			(up-compare-goal g-desired-num-spearman > 0)
			(up-compare-goal g-strategy >= gv-low-gold))))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-halberdier == research-available)
(or
	(up-compare-goal g-desired-num-spearman > 8)
	(or
		(unit-type-count-total spearman-line >= 12)
		(and
			(up-compare-goal g-desired-num-spearman > 0)
			(up-compare-goal g-strategy >= gv-low-gold))))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-halberdier c: 1)
(chat-local-to-self "Tech: Halberdier")
)

;Research tech soon

(defrule
(up-research-status c: ri-halberdier == research-available)
(or
	(up-compare-goal g-desired-num-spearman > 8)
	(or
		(unit-type-count-total spearman-line >= 12)
		(and
			(up-compare-goal g-desired-num-spearman > 0)
			(up-compare-goal g-strategy >= gv-low-gold))))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-halberdier == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-halberdier c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Halberdier")
)

;====Man-at-arms

(defrule
(up-research-status c: ri-man-at-arms == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-man-at-arms c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required MAN-AT-ARMS-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-man-at-arms == research-available)
(up-compare-goal g-desired-num-militia >= 5)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-man-at-arms == research-available)
(up-compare-goal g-desired-num-militia >= 5)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-man-at-arms c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Man-at-arms")
)

;====Long Swordsman

(defrule
(up-research-status c: ri-long-swordsman == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-long-swordsman c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required LONG-SWORDSMAN-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-long-swordsman == research-available)
(or
	(up-compare-goal g-desired-num-militia > 8)
	(unit-type-count-total militiaman-line >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-long-swordsman == research-available)
(or
	(up-compare-goal g-desired-num-militia > 8)
	(unit-type-count-total militiaman-line >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-long-swordsman c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Long Swordsman")
)

;====Two-Handed Swordsman

(defrule
(up-research-status c: ri-two-handed-swordsman == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-two-handed-swordsman c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required TWO-HANDED-SWORDSMAN-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-two-handed-swordsman == research-available)
(or
	(up-compare-goal g-desired-num-militia > 8)
	(unit-type-count-total militiaman-line >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-two-handed-swordsman == research-available)
(or
	(up-compare-goal g-desired-num-militia > 8)
	(unit-type-count-total militiaman-line >= 12))
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-two-handed-swordsman c: 1)
(chat-local-to-self "Tech: Two-Handed Swordsman")
)

;Research tech soon

(defrule
(up-research-status c: ri-two-handed-swordsman == research-available)
(or
	(up-compare-goal g-desired-num-militia > 8)
	(unit-type-count-total militiaman-line >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-two-handed-swordsman == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-two-handed-swordsman c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Two-Handed Swordsman")
)

;====Champion

(defrule
(up-research-status c: ri-champion == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-champion c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CHAMPION-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-champion == research-available)
(or
	(up-compare-goal g-desired-num-militia > 8)
	(unit-type-count-total militiaman-line >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-champion == research-available)
(or
	(up-compare-goal g-desired-num-militia > 8)
	(unit-type-count-total militiaman-line >= 12))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-champion c: 1)
(chat-local-to-self "Tech: Champion")
)

;Research tech soon

(defrule
(up-research-status c: ri-champion == research-available)
(or
	(up-compare-goal g-desired-num-militia > 8)
	(unit-type-count-total militiaman-line >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-champion == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-champion c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Champion")
)

;====Arson

(defrule
(up-research-status c: ri-arson == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-arson c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ARSON-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-arson == research-available)
(unit-type-count infantry-class > 12)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-arson == research-available)
(unit-type-count infantry-class > 12)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-arson c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Arson")
)

;====Squires

(defrule
(up-research-status c: ri-squires == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-squires c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required SQUIRES-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-squires == research-available)
(unit-type-count infantry-class > 15)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-squires == research-available)
(unit-type-count infantry-class > 15)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-squires c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Squires")
)

;====Tracking

(defrule
(up-research-status c: ri-tracking == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-tracking c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required TRACKING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-tracking == research-available)
(current-age >= castle-age)
(unit-type-count infantry-class > 13)
(food-amount > 400)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-tracking == research-available)
(current-age >= castle-age)
(unit-type-count infantry-class > 13)
(food-amount > 400)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-tracking c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Tracking")
)

;========SOLDIERS

;Calculate which soldier should be trained next.
;Do this by calculating which soldier has the smallest
;current units trained to desired train amount ratio.

(defrule
(building-type-count barracks > 0)
=>
(set-goal g-num-units-wanted-slot-1 0)	;Militia line
(set-goal g-num-units-wanted-slot-2 0)	;Spearman line
(set-goal g-num-units-wanted-slot-3 0)	;Condottiero
(set-goal g-num-units-wanted-slot-4 0)	;Eagle Warrior line
(set-goal g-num-units-wanted-slot-7 0)	;Huskarl line (slot 7 used so that it isn't overwritten when comparing with castle huskarl rules)
(set-goal i 0)
)

	;Jump rule section

	(defrule
	(building-type-count barracks > 0)
	=>
	(set-goal g-temp 100)	;ratio of current units to desired units (in %, lowest ratio is next trained unit)
	(set-goal g-temp-2 100)	;current lowest ratio (in %)
	(set-goal g-next-unit-wanted PENDING)
	)

	;Eagle Warriors
	
	(defrule
	(building-type-count barracks > 0)
	(up-research-status c: ri-eagle-warrior != research-complete)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-eagle-warrior)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-4)
	(set-goal g-item-time-required EAGLE-SCOUT-TIME)
	)
	
	(defrule
	(building-type-count barracks > 0)
	(up-research-status c: ri-eagle-warrior == research-complete)
	(up-research-status c: ri-elite-eagle-warrior != research-complete)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-eagle-warrior)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-4)
	(set-goal g-item-time-required EAGLE-WARRIOR-TIME)
	)
	
	(defrule
	(building-type-count barracks > 0)
	(up-research-status c: ri-elite-eagle-warrior == research-complete)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-eagle-warrior)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-4)
	(set-goal g-item-time-required ELITE-EAGLE-WARRIOR-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(or
		(civ-selected gothic)
		(players-civ any-ally gothic))
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected gothic)
	(research-completed ri-imperial-unique-tech)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:/ 2)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available eagle-warrior)
		(or
			(unit-available heavy-eagle-warrior)
			(unit-available elite-eagle-warrior)))
	(up-compare-goal g-eagle-scout-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-modify-goal g-temp g:= g-eagle-scout-line)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-4)
	(up-modify-goal g-temp g:%/ g-desired-num-eagle-warrior)
	)

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available eagle-warrior)
		(or
			(unit-available heavy-eagle-warrior)
			(unit-available elite-eagle-warrior)))
	(up-compare-goal g-eagle-scout-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= eagle-warrior)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Militia Line
	
	(defrule
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-militia)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-1)
	(set-goal g-item-time-required MILITIA-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(or
		(civ-selected gothic)
		(players-civ any-ally gothic))
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected gothic)
	(research-completed ri-imperial-unique-tech)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:/ 2)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available militiaman-line)
	(up-object-type-count-total c: militiaman-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total militiaman-line g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-1)
	(up-modify-goal g-temp g:%/ g-desired-num-militia)
	)

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available militiaman-line)
	(up-object-type-count-total c: militiaman-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= militiaman)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Spearman Line
	
	(defrule
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-spearman)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-2)
	(set-goal g-item-time-required SPEARMAN-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(or
		(civ-selected gothic)
		(players-civ any-ally gothic))
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected gothic)
	(research-completed ri-imperial-unique-tech)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:/ 2)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available spearman-line)
	(up-object-type-count-total c: spearman-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total spearman-line g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-2)
	(up-modify-goal g-temp g:%/ g-desired-num-spearman)
	)

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available spearman-line)
	(up-object-type-count-total c: spearman-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= spearman)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Condottiero
	
	(defrule
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-condottiero)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-3)
	(set-goal g-item-time-required CONDOTTIERO-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(or
		(civ-selected gothic)
		(players-civ any-ally gothic))
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected gothic)
	(research-completed ri-imperial-unique-tech)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:/ 2)
	)
	
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available condottiero)
	(up-object-type-count-total c: condottiero g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total condottiero g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-3)
	(up-modify-goal g-temp g:%/ g-desired-num-condottiero)
	)

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available condottiero)
	(up-object-type-count-total c: condottiero g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= condottiero)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Huskarl Line
	
	(defrule
	(building-type-count barracks > 0)
	(civ-selected gothic)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-unique-unit)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-4)
	(set-goal g-item-time-required HUSKARL-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected gothic)
	(research-completed ri-imperial-unique-tech)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:/ 2)
	)
	
	(defrule
	(civ-selected gothic)
	(research-completed ri-conscription)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count barracks > 0)
	(civ-selected gothic)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available barracks-huskarl)
		(unit-available barracks-elite-huskarl))
	(up-compare-goal g-huskarl-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-modify-goal g-temp g:= g-huskarl-line)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-7)
	(up-modify-goal g-temp g:%/ g-desired-num-unique-unit)
	)

	(defrule
	(building-type-count barracks > 0)
	(civ-selected gothic)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available barracks-huskarl)
		(unit-available barracks-elite-huskarl))
	(up-compare-goal g-huskarl-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= huskarl)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)



	;Add needed resources for unit chosen,
	;Then re-do process until out of barracks time.
	
	(defrule
	(building-type-count barracks > 0)
	=>
	(set-goal g-temp 100)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count barracks > 0)
	=>
	(up-modify-goal g-temp c:* 100)
	(up-modify-goal g-temp c:/ 85)
	)
	
	(defrule
	(building-type-count barracks > 0)
	(or
		(civ-selected gothic)
		(players-civ any-ally gothic))
	=>
	(set-goal g-temp 120)	;adjustment to divide by
	)
	
	(defrule
	(building-type-count barracks > 0)
	(research-completed ri-conscription)
	=>
	(up-modify-goal g-temp c:* 133)	;adjustment to divide by
	(up-modify-goal g-temp c:/ 100)
	)
	
	(defrule
	(civ-selected gothic)
	(building-type-count barracks > 0)
	(research-completed ri-imperial-unique-tech)
	=>
	(up-modify-goal g-temp c:* 2)	;adjustment to divide by
	)

	;Militia line

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-next-unit-wanted == militiaman)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: militiaman c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: militiaman c: 1)
	(up-modify-goal g-num-units-wanted-slot-1 c:+ 1)
	(set-goal g-item-time-required MILITIA-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Spearman line

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-next-unit-wanted == spearman)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: spearman c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: spearman c: 1)
	(up-modify-goal g-num-units-wanted-slot-2 c:+ 1)
	(set-goal g-item-time-required SPEARMAN-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Condottiero line

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-next-unit-wanted == condottiero)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: condottiero c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: condottiero c: 1)
	(up-modify-goal g-num-units-wanted-slot-3 c:+ 1)
	(set-goal g-item-time-required CONDOTTIERO-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Eagle Warriors
	
	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-next-unit-wanted == eagle-warrior)
	(up-research-status c: ri-eagle-warrior != research-complete)
	=>
	(set-goal g-temp-2 EAGLE-SCOUT-TIME)
	)
	
	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-next-unit-wanted == eagle-warrior)
	(up-research-status c: ri-eagle-warrior == research-complete)
	(up-research-status c: ri-elite-eagle-warrior != research-complete)
	=>
	(set-goal g-temp-2 EAGLE-WARRIOR-TIME)
	)
	
	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-next-unit-wanted == eagle-warrior)
	(up-research-status c: ri-elite-eagle-warrior == research-complete)
	=>
	(set-goal g-temp-2 ELITE-EAGLE-WARRIOR-TIME)
	)

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-next-unit-wanted == eagle-warrior)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: eagle-warrior c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: eagle-warrior c: 1)
	(up-modify-goal g-num-units-wanted-slot-4 c:+ 1)
	(up-modify-goal g-item-time-required g:= g-temp-2)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Huskarl line

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-next-unit-wanted == huskarl)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: huskarl c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: huskarl c: 1)
	(up-modify-goal g-num-units-wanted-slot-7 c:+ 1)
	(set-goal g-item-time-required HUSKARL-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Loop again for next unit to train
	;Or no units to train

	(defrule
	(building-type-count barracks > 0)
	(up-compare-goal g-next-unit-wanted != PENDING)
	(up-compare-goal i < 300)
	=>
	(up-modify-goal i c:+ 1)
	(up-jump-rule -50)
	)

(defrule
(up-compare-goal g-num-units-wanted-slot-1 > 0)
(building-type-count barracks > 0)
=>
(up-chat-data-to-self "Militia: %d" g: g-num-units-wanted-slot-1)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-2 > 0)
(building-type-count barracks > 0)
=>
(up-chat-data-to-self "Spears: %d" g: g-num-units-wanted-slot-2)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-3 > 0)
(building-type-count barracks > 0)
=>
(up-chat-data-to-self "Condos: %d" g: g-num-units-wanted-slot-3)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-4 > 0)
(building-type-count barracks > 0)
=>
(up-chat-data-to-self "Eagles: %d" g: g-num-units-wanted-slot-4)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-7 > 0)
(building-type-count barracks > 0)
=>
(up-chat-data-to-self "Husks: %d" g: g-num-units-wanted-slot-7)
)



;====================<<<<<<<<<<ARCHERY RANGE>>>>>>>>>>====================

;Get amount of time available at all archery ranges to research techs and train soldiers.

(defrule
(true)
=>
(up-get-fact building-type-count archery-range g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

(defrule
(or
	(civ-selected briton)
	(players-civ any-ally briton))
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 120)
)

(defrule
(research-completed ri-conscription)
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 133)
)

;====Crossbowman

(defrule
(up-research-status c: ri-crossbow == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-crossbow c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CROSSBOWMAN-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-crossbow == research-available)
(or
	(up-compare-goal g-desired-num-archer > 5)
	(unit-type-count-total archer-line >= 10))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-crossbow == research-available)
(or
	(up-compare-goal g-desired-num-archer > 5)
	(unit-type-count-total archer-line >= 10))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-crossbow c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Crossbowman")
)

;====Arbalest

(defrule
(up-research-status c: ri-arbalest == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-arbalest c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ARBALEST-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-arbalest == research-available)
(or
	(up-compare-goal g-desired-num-archer > 8)
	(unit-type-count-total archer-line >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-arbalest == research-available)
(or
	(up-compare-goal g-desired-num-archer > 8)
	(unit-type-count-total archer-line >= 12))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-arbalest c: 1)
(chat-local-to-self "Tech: Arbalest")
)

;Research tech soon

(defrule
(up-research-status c: ri-arbalest == research-available)
(or
	(up-compare-goal g-desired-num-archer > 8)
	(unit-type-count-total archer-line >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-arbalest == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-arbalest c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Arbalest")
)

;====Elite Skirmisher

(defrule
(up-research-status c: ri-elite-skirmisher == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-elite-skirmisher c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ELITE-SKIRMISHER-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-elite-skirmisher == research-available)
(or
	(up-compare-goal g-desired-num-skirmisher > 5)
	(unit-type-count-total skirmisher-line >= 8))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-elite-skirmisher == research-available)
(or
	(up-compare-goal g-desired-num-skirmisher > 5)
	(unit-type-count-total skirmisher-line >= 8))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-elite-skirmisher c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Elite Skirmisher")
)

;====Imperial Skirmisher

(defrule
(up-research-status c: ri-imperial-skirmisher == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-imperial-skirmisher c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required IMPERIAL-SKIRMISHER-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-imperial-skirmisher == research-available)
(or
	(up-compare-goal g-desired-num-skirmisher > 8)
	(unit-type-count-total skirmisher-line >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-imperial-skirmisher == research-available)
(or
	(up-compare-goal g-desired-num-skirmisher > 8)
	(unit-type-count-total skirmisher-line >= 12))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-imperial-skirmisher c: 1)
(chat-local-to-self "Tech: Imperial Skirmisher")
)

;Research tech soon

(defrule
(up-research-status c: ri-imperial-skirmisher == research-available)
(or
	(up-compare-goal g-desired-num-skirmisher > 8)
	(unit-type-count-total skirmisher-line >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-imperial-skirmisher == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-imperial-skirmisher c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Imperial Skirmisher")
)

;====Heavy Cavalry Archer

(defrule
(up-research-status c: ri-heavy-cavalry-archer == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-heavy-cavalry-archer c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HEAVY-CAVALRY-ARCHER-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-heavy-cavalry-archer == research-available)
(or
	(up-compare-goal g-desired-num-cavalry-archer > 10)
	(unit-type-count-total cavalry-archer-line >= 15))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-heavy-cavalry-archer == research-available)
(or
	(up-compare-goal g-desired-num-cavalry-archer > 10)
	(unit-type-count-total cavalry-archer-line >= 15))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-heavy-cavalry-archer c: 1)
(chat-local-to-self "Tech: Heavy Cavalry Archer")
)

;Research tech soon

(defrule
(up-research-status c: ri-heavy-cavalry-archer == research-available)
(or
	(up-compare-goal g-desired-num-cavalry-archer > 10)
	(unit-type-count-total cavalry-archer-line >= 15))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-heavy-cavalry-archer == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-heavy-cavalry-archer c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Heavy Cavalry Archer")
)

;====Elite Genitour

(defrule
(up-research-status c: ri-elite-genitour == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-elite-genitour c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ELITE-GENITOUR-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-elite-genitour == research-available)
(or
	(up-compare-goal g-desired-num-genitour > 8)
	(up-compare-goal g-genitour-line >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-elite-genitour == research-available)
(or
	(up-compare-goal g-desired-num-genitour > 8)
	(up-compare-goal g-genitour-line >= 12))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-wood-delta > 200)
		(up-compare-goal g-seconds-available-for-building < ELITE-GENITOUR-UPGRADE-TIME)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-elite-genitour c: 1)
(chat-local-to-self "Tech: Elite Genitour")
)

;Research tech soon

(defrule
(up-research-status c: ri-elite-genitour == research-available)
(or
	(up-compare-goal g-desired-num-genitour > 8)
	(up-compare-goal g-genitour-line >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-wood-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-elite-genitour == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-elite-genitour c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Elite Genitour")
)

;====Thumb Ring

(defrule
(up-research-status c: ri-thumb-ring == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-thumb-ring c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required THUMB-RING-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-thumb-ring == research-available)
(or
	(up-compare-goal g-desired-num-archer >= 10)
	(or
		(up-compare-goal g-desired-num-cavalry-archers >= 6)
		(up-compare-goal g-desired-num-slinger >= 10)))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-thumb-ring == research-available)
(or
	(up-compare-goal g-desired-num-archer >= 10)
	(or
		(up-compare-goal g-desired-num-cavalry-archers >= 6)
		(up-compare-goal g-desired-num-slinger >= 10)))
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-thumb-ring c: 1)
(chat-local-to-self "Tech: Thumb Ring")
)

;Research tech soon

(defrule
(up-research-status c: ri-thumb-ring == research-available)
(or
	(up-compare-goal g-desired-num-archer >= 10)
	(or
		(up-compare-goal g-desired-num-cavalry-archers >= 6)
		(up-compare-goal g-desired-num-slinger >= 10)))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-thumb-ring == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-thumb-ring c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Thumb Ring")
)

;====Parthian Tactics

(defrule
(up-research-status c: ri-parthian-tactics == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-parthian-tactics c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required PARTHIAN-TACTICS-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-parthian-tactics == research-available)
(up-compare-goal g-desired-num-cavalry-archers > 8)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-parthian-tactics == research-available)
(up-compare-goal g-desired-num-cavalry-archers > 8)
(or
	(up-compare-goal g-food-delta > 150)
	(or
		(up-compare-goal g-gold-delta > 150)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-parthian-tactics c: 1)
(chat-local-to-self "Tech: Parthian Tactics")
)

;Research tech soon

(defrule
(up-research-status c: ri-parthian-tactics == research-available)
(up-compare-goal g-desired-num-cavalry-archers > 8)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 150)
(up-compare-goal g-gold-delta <= 150)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-parthian-tactics == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-parthian-tactics c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Parthian Tactics")
)

;========SOLDIERS

;Calculate which soldier should be trained next.
;Do this by calculating which soldier has the smallest
;current units trained to desired train amount ratio.

(defrule
(building-type-count archery-range > 0)
=>
(set-goal g-num-units-wanted-slot-1 0)	;Archer line
(set-goal g-num-units-wanted-slot-2 0)	;Skirmisher line
(set-goal g-num-units-wanted-slot-3 0)	;Cavalry Archer line
(set-goal g-num-units-wanted-slot-4 0)	;Hand Cannoneers
(set-goal g-num-units-wanted-slot-5 0)	;Genitour line
(set-goal g-num-units-wanted-slot-6 0)	;Slingers
(set-goal i 0)
)

	;Jump rule section

	(defrule
	(building-type-count archery-range > 0)
	=>
	(set-goal g-temp 100)	;ratio of current units to desired units (in %, lowest ratio is next trained unit)
	(set-goal g-temp-2 100)	;current lowest ratio (in %)
	(set-goal g-next-unit-wanted PENDING)
	)

	;Cavalry Archer
	
	(defrule
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-cavalry-archer)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-3)
	(set-goal g-item-time-required CAVALRY-ARCHER-TIME)
	)
	
	(defrule
	(building-type-count archery-range > 0)
	(research-completed ri-heavy-cavalry-archer)
	=>
	(set-goal g-item-time-required HEAVY-CAVALRY-ARCHER-TIME)
	)
	
	(defrule
	(civ-selected cuman)
	(research-completed ri-castle-unique-tech)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 20)
	)
	
	(defrule
	(or
		(civ-selected briton)
		(players-civ any-ally briton))
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available cavalry-archer-line)
	(up-object-type-count-total c: cavalry-archer-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total cavalry-archer-line g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-3)
	(up-modify-goal g-temp g:%/ g-desired-num-cavalry-archer)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available cavalry-archer-line)
	(up-object-type-count-total c: cavalry-archer-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= cavalry-archer)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Hand Cannoneer
	
	(defrule
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-hand-cannoneer)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-4)
	(set-goal g-item-time-required HAND-CANNONEER-TIME)
	)
	
	(defrule
	(players-civ any-ally briton)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available hand-cannoneer)
	(up-object-type-count-total c: hand-cannoneer g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total hand-cannoneer g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-4)
	(up-modify-goal g-temp g:%/ g-desired-num-hand-cannoneer)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available hand-cannoneer)
	(up-object-type-count-total c: hand-cannoneer g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= hand-cannoneer)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Slinger
	
	(defrule
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-slinger)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-6)
	(set-goal g-item-time-required SLINGER-TIME)
	)
	
	(defrule
	(players-civ any-ally briton)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available slinger)
	(up-object-type-count-total c: slinger g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total slinger g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-6)
	(up-modify-goal g-temp g:%/ g-desired-num-slinger)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available slinger)
	(up-object-type-count-total c: slinger g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= slinger)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Archer
	
	(defrule
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-archer)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-1)
	(set-goal g-item-time-required ARCHER-TIME)
	)
	
	(defrule
	(building-type-count archery-range > 0)
	(research-completed ri-crossbow)
	=>
	(set-goal g-item-time-required CROSSBOWMAN-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(players-civ any-ally briton)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available archer-line)
	(up-object-type-count-total c: archer-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total archer-line g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-1)
	(up-modify-goal g-temp g:%/ g-desired-num-archer)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available archer-line)
	(up-object-type-count-total c: archer-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= archer)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Genitour
	
	(defrule
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-genitour)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-5)
	(set-goal g-item-time-required GENITOUR-TIME)
	)
	
	(defrule
	(research-completed ri-elite-genitour)
	(building-type-count archery-range > 0)
	=>
	(set-goal g-item-time-required ELITE-GENITOUR-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(or
		(civ-selected briton)
		(players-civ any-ally briton))
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available genitour)
		(unit-available elite-genitour))
	(up-compare-goal g-genitour-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-modify-goal g-temp g:= g-genitour-line)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-5)
	(up-modify-goal g-temp g:%/ g-desired-num-genitour)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available genitour)
		(unit-available elite-genitour))
	(up-compare-goal g-genitour-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= genitour)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Skirmisher Line
	
	(defrule
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-skirmisher)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-2)
	(set-goal g-item-time-required SKIRMISHER-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(or
		(civ-selected briton)
		(players-civ any-ally briton))
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available skirmisher-line)
		(unit-available imperial-skirmisher))
	(up-compare-goal g-skirmisher-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-modify-goal g-temp g:= g-skirmisher-line)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-2)
	(up-modify-goal g-temp g:%/ g-desired-num-skirmisher)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available skirmisher-line)
		(unit-available imperial-skirmisher))
	(up-compare-goal g-skirmisher-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= skirmisher)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)



	;Add needed resources for unit chosen,
	;Then re-do process until out of archery range time.
	
	(defrule
	(building-type-count archery-range > 0)
	=>
	(set-goal g-temp 100)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-temp c:* 100)
	(up-modify-goal g-temp c:/ 85)
	)
	
	(defrule
	(civ-selected cuman)
	(research-completed ri-castle-unique-tech)
	(up-compare-goal g-next-unit-wanted == cavalry-archer)
	(building-type-count archery-range > 0)
	=>
	(set-goal g-temp 500)
	)
	
	(defrule
	(or
		(civ-selected briton)
		(players-civ any-ally briton))
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-temp c:* 120)
	(up-modify-goal g-temp c:/ 100)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count archery-range > 0)
	=>
	(up-modify-goal g-temp c:* 133)
	(up-modify-goal g-temp c:/ 100)
	)
	

	;Archer line
	
	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == archer)
	(up-research-status c: ri-crossbow != research-complete)
	=>
	(set-goal g-temp-2 ARCHER-TIME)
	)
	
	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == archer)
	(up-research-status c: ri-crossbow == research-complete)
	=>
	(set-goal g-temp-2 CROSSBOWMAN-TIME)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == archer)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: archer c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: archer c: 1)
	(up-modify-goal g-num-units-wanted-slot-1 c:+ 1)
	(up-modify-goal g-item-time-required g:= g-temp-2)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Skirmisher line

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == skirmisher)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: skirmisher c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: skirmisher c: 1)
	(up-modify-goal g-num-units-wanted-slot-2 c:+ 1)
	(set-goal g-item-time-required SKIRMISHER-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Cavalry Archer line
	
	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == cavalry-archer)
	(up-research-status c: ri-heavy-cavalry-archer != research-complete)
	=>
	(set-goal g-temp-2 CAVALRY-ARCHER-TIME)
	)
	
	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == cavalry-archer)
	(up-research-status c: ri-heavy-cavalry-archer == research-complete)
	=>
	(set-goal g-temp-2 HEAVY-CAVALRY-ARCHER-TIME)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == cavalry-archer)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: cavalry-archer c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: cavalry-archer c: 1)
	(up-modify-goal g-num-units-wanted-slot-3 c:+ 1)
	(up-modify-goal g-item-time-required g:= g-temp-2)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Hand Cannoneer

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == hand-cannoneer)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: hand-cannoneer c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: hand-cannoneer c: 1)
	(up-modify-goal g-num-units-wanted-slot-4 c:+ 1)
	(set-goal g-item-time-required HAND-CANNONEER-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Genitour line

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == genitour)
	(up-research-status c: ri-elite-genitour != research-complete)
	=>
	(set-goal g-temp-2 GENITOUR-TIME)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == genitour)
	(up-research-status c: ri-elite-genitour == research-complete)
	=>
	(set-goal g-temp-2 ELITE-GENITOUR-TIME)
	)

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == genitour)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: genitour c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: genitour c: 1)
	(up-modify-goal g-num-units-wanted-slot-5 c:+ 1)
	(up-modify-goal g-item-time-required g:= g-temp-2)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Slinger

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted == slinger)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: slinger c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: slinger c: 1)
	(up-modify-goal g-num-units-wanted-slot-6 c:+ 1)
	(set-goal g-item-time-required SLINGER-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Loop again for next unit to train
	;Or no units to train

	(defrule
	(building-type-count archery-range > 0)
	(up-compare-goal g-next-unit-wanted != PENDING)
	(up-compare-goal i < 300)
	=>
	(up-modify-goal i c:+ 1)
	(up-jump-rule -56)
	)

(defrule
(up-compare-goal g-num-units-wanted-slot-1 > 0)
(building-type-count archery-range > 0)
=>
(up-chat-data-to-self "Archers: %d" g: g-num-units-wanted-slot-1)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-2 > 0)
(building-type-count archery-range > 0)
=>
(up-chat-data-to-self "Skirms: %d" g: g-num-units-wanted-slot-2)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-3 > 0)
(building-type-count archery-range > 0)
=>
(up-chat-data-to-self "Cav Archers: %d" g: g-num-units-wanted-slot-3)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-4 > 0)
(building-type-count archery-range > 0)
=>
(up-chat-data-to-self "Hand Cannons: %d" g: g-num-units-wanted-slot-4)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-5 > 0)
(building-type-count archery-range > 0)
=>
(up-chat-data-to-self "Genitours: %d" g: g-num-units-wanted-slot-5)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-6 > 0)
(building-type-count archery-range > 0)
=>
(up-chat-data-to-self "Slingers: %d" g: g-num-units-wanted-slot-6)
)



;====================<<<<<<<<<<STABLE>>>>>>>>>>====================

;Get amount of time available at all stables to research techs and train soldiers.

(defrule
(true)
=>
(up-get-fact building-type-count stable g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

(defrule
(or
	(civ-selected hun)
	(players-civ any-ally hun))
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 120)
)

(defrule
(civ-selected frankish)
(research-completed ri-castle-unique-tech)
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 140)
)

(defrule
(research-completed ri-conscription)
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 133)
)

;====Cavalier

(defrule
(up-research-status c: ri-cavalier == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-cavalier c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CAVALIER-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-cavalier == research-available)
(or
	(up-compare-goal g-desired-num-knight > 8)
	(unit-type-count-total knight-line >= 10))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-cavalier == research-available)
(or
	(up-compare-goal g-desired-num-knight > 8)
	(unit-type-count-total knight-line >= 10))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-cavalier c: 1)
(chat-local-to-self "Tech: Cavalier")
)

;Research tech soon

(defrule
(up-research-status c: ri-cavalier == research-available)
(or
	(up-compare-goal g-desired-num-knight > 8)
	(unit-type-count-total knight-line >= 10))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-cavalier == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-cavalier c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Cavalier")
)

;====Paladin

(defrule
(up-research-status c: ri-paladin == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-paladin c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required PALADIN-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-paladin == research-available)
(or
	(up-compare-goal g-desired-num-knight > 10)
	(unit-type-count-total knight-line >= 15))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-paladin == research-available)
(or
	(up-compare-goal g-desired-num-knight > 10)
	(unit-type-count-total knight-line >= 15))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-paladin c: 1)
(chat-local-to-self "Tech: Paladin")
)

;Research tech soon

(defrule
(up-research-status c: ri-paladin == research-available)
(or
	(up-compare-goal g-desired-num-knight > 10)
	(unit-type-count-total knight-line >= 15))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-paladin == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-paladin c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Paladin")
)

;====Heavy Camel

(defrule
(up-research-status c: ri-heavy-camel == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-heavy-camel c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HEAVY-CAMEL-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-heavy-camel == research-available)
(or
	(up-compare-goal g-desired-num-camel > 8)
	(up-compare-goal g-camel-line >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-heavy-camel == research-available)
(or
	(up-compare-goal g-desired-num-camel > 8)
	(up-compare-goal g-camel-line >= 12))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-heavy-camel c: 1)
(chat-local-to-self "Tech: Heavy Camel")
)

;Research tech soon

(defrule
(up-research-status c: ri-heavy-camel == research-available)
(or
	(up-compare-goal g-desired-num-camel > 8)
	(up-compare-goal g-camel-line >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-heavy-camel == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-heavy-camel c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Heavy Camel")
)

;====Imperial Camel

(defrule
(up-research-status c: ri-imperial-camel == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-imperial-camel c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required IMPERIAL-CAMEL-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-imperial-camel == research-available)
(or
	(up-compare-goal g-desired-num-camel > 8)
	(up-compare-goal g-camel-line >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-imperial-camel == research-available)
(or
	(up-compare-goal g-desired-num-camel > 8)
	(up-compare-goal g-camel-line >= 12))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-imperial-camel c: 1)
(chat-local-to-self "Tech: Imperial Camel")
)

;Research tech soon

(defrule
(up-research-status c: ri-imperial-camel == research-available)
(or
	(up-compare-goal g-desired-num-camel > 8)
	(up-compare-goal g-camel-line >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-imperial-camel == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-imperial-camel c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Imperial Camel")
)

;====Elite Battle Elephant

(defrule
(up-research-status c: ri-elite-battle-elephant == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-elite-battle-elephant c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ELITE-BATTLE-ELEPHANT-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-elite-battle-elephant == research-available)
(or
	(up-compare-goal g-desired-num-battle-elephant > 8)
	(unit-type-count-total battle-elephant >= 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-elite-battle-elephant == research-available)
(or
	(up-compare-goal g-desired-num-battle-elephant > 8)
	(unit-type-count-total battle-elephant >= 12))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-elite-battle-elephant c: 1)
(chat-local-to-self "Tech: Elite Battle Elephant")
)

;Research tech soon

(defrule
(up-research-status c: ri-elite-battle-elephant == research-available)
(or
	(up-compare-goal g-desired-num-battle-elephant > 8)
	(unit-type-count-total battle-elephant >= 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-elite-battle-elephant == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-elite-battle-elephant c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Elite Battle Elephant")
)

;====Light Cavalry

(defrule
(up-research-status c: ri-light-cavalry == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-light-cavalry c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required LIGHT-CAVALRY-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-light-cavalry == research-available)
(or
	(up-compare-goal g-desired-num-scout-cavalry > 7)
	(unit-type-count-total scout-cavalry-line >= 10))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-light-cavalry == research-available)
(or
	(up-compare-goal g-desired-num-scout-cavalry > 7)
	(unit-type-count-total scout-cavalry-line >= 10))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-light-cavalry c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Light Cavalry")
)

;====Hussar

(defrule
(up-research-status c: ri-hussar == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-hussar c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-hussar == research-available)
(or
	(up-compare-goal g-desired-num-scout-cavalry > 8)
	(or
		(unit-type-count-total scout-cavalry-line >= 12)
		(and
			(up-compare-goal g-desired-num-scout-cavalry > 0)
			(up-compare-goal g-strategy >= gv-low-gold))))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-hussar == research-available)
(or
	(up-compare-goal g-desired-num-scout-cavalry > 8)
	(or
		(unit-type-count-total scout-cavalry-line >= 12)
		(and
			(up-compare-goal g-desired-num-scout-cavalry > 0)
			(up-compare-goal g-strategy >= gv-low-gold))))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-hussar c: 1)
(chat-local-to-self "Tech: Hussar")
)

;Research tech soon

(defrule
(up-research-status c: ri-hussar == research-available)
(or
	(up-compare-goal g-desired-num-scout-cavalry > 8)
	(or
		(unit-type-count-total scout-cavalry-line >= 12)
		(and
			(up-compare-goal g-desired-num-scout-cavalry > 0)
			(up-compare-goal g-strategy >= gv-low-gold))))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-hussar == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-hussar c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Hussar")
)

;====Bloodlines

(defrule
(up-research-status c: ri-bloodlines == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-bloodlines c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required BLOODLINES-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-bloodlines == research-available)
(or
	(up-compare-goal g-desired-num-cavalry >= 4)
	(up-compare-goal g-desired-num-cavalry-archers >= 4))
(up-compare-goal g-strategy != gv-krush)
(up-compare-goal g-strategy != gv-crush)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-bloodlines == research-available)
(up-compare-goal g-temp-2 != 1)
(or
	(up-compare-goal g-desired-num-cavalry >= 4)
	(up-compare-goal g-desired-num-cavalry-archers >= 4))
(or
	(up-compare-goal g-strategy == gv-krush)
	(up-compare-goal g-strategy == gv-crush))
(or
	(unit-type-count cavalry-class >= 8)
	(up-compare-goal g-attack-status >= gv-first-attack))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

;Condition 1 - not a cavalry rush and want cavalry units

(defrule
(up-research-status c: ri-bloodlines == research-available)
(or
	(up-compare-goal g-desired-num-cavalry >= 4)
	(up-compare-goal g-desired-num-cavalry-archers >= 4))
(up-compare-goal g-strategy != gv-krush)
(up-compare-goal g-strategy != gv-crush)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 2)
)

;Condition 2 - cavalry rush: delay until after first attack

(defrule
(up-research-status c: ri-bloodlines == research-available)
(or
	(up-compare-goal g-desired-num-cavalry >= 4)
	(up-compare-goal g-desired-num-cavalry-archers >= 4))
(or
	(up-compare-goal g-strategy == gv-krush)
	(up-compare-goal g-strategy == gv-crush))
(or
	(unit-type-count cavalry-class >= 8)
	(up-compare-goal g-attack-status >= gv-first-attack))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(set-goal g-temp-2 2)
)

(defrule
(up-research-status c: ri-bloodlines == research-available)
(goal g-temp-2 2)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-bloodlines c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Bloodlines")
)

;====Husbandry

(defrule
(up-research-status c: ri-husbandry == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-husbandry c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HUSBANDRY-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-husbandry == research-available)
(or
	(unit-type-count cavalry-class > 20)
	(unit-type-count-total cavalry-archer-class > 12))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-husbandry == research-available)
(or
	(unit-type-count cavalry-class > 20)
	(unit-type-count-total cavalry-archer-class > 12))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-husbandry c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Husbandry")
)

;========SOLDIERS

;Calculate which soldier should be trained next.
;Do this by calculating which soldier has the smallest
;current units trained to desired train amount ratio.

(defrule
(building-type-count stable > 0)
=>
(set-goal g-num-units-wanted-slot-1 0)	;Scout Cavalry line
(set-goal g-num-units-wanted-slot-2 0)	;Knight line
(set-goal g-num-units-wanted-slot-3 0)	;Camel line
(set-goal g-num-units-wanted-slot-4 0)	;Battle Elephant line
(set-goal g-num-units-wanted-slot-5 0)	;Steppe Lancer line
(set-goal g-num-units-wanted-slot-7 0)	;Stable Tarkans
(set-goal i 0)
)

	;Jump rule section

	(defrule
	(building-type-count stable > 0)
	=>
	(set-goal g-temp 100)	;ratio of current units to desired units (in %, lowest ratio is next trained unit)
	(set-goal g-temp-2 100)	;current lowest ratio (in %)
	(set-goal g-next-unit-wanted PENDING)
	)

	;Knight line
	
	(defrule
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-knight)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-2)
	(set-goal g-item-time-required KNIGHT-TIME)
	)
	
	(defrule
	(or
		(civ-selected hun)
		(players-civ any-ally hun))
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected frankish)
	(research-completed ri-castle-unique-tech)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 140)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available knight-line)
	(up-object-type-count-total c: knight-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total knight-line g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-2)
	(up-modify-goal g-temp g:%/ g-desired-num-knight)
	)

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available knight-line)
	(up-object-type-count-total c: knight-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= knight)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Battle Elephant line
	
	(defrule
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-battle-elephant)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-4)
	(set-goal g-item-time-required BATTLE-ELEPHANT-TIME)
	)
	
	(defrule
	(or
		(civ-selected hun)
		(players-civ any-ally hun))
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected frankish)
	(research-completed ri-castle-unique-tech)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 140)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available battle-elephant)
		(unit-available elite-battle-elephant))
	(up-compare-goal g-battle-elephant-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-modify-goal g-temp g:= g-battle-elephant-line)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-4)
	(up-modify-goal g-temp g:%/ g-desired-num-battle-elephant)
	)

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available battle-elephant)
		(unit-available elite-battle-elephant))
	(up-compare-goal g-battle-elephant-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= battle-elephant)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Camel line
	
	(defrule
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-camel)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-3)
	(set-goal g-item-time-required CAMEL-TIME)
	)
	
	(defrule
	(or
		(civ-selected hun)
		(players-civ any-ally hun))
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected frankish)
	(research-completed ri-castle-unique-tech)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 140)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available camel-line)
		(unit-available imperial-camel))
	(up-compare-goal g-camel-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-modify-goal g-temp g:= g-camel-line)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-3)
	(up-modify-goal g-temp g:%/ g-desired-num-camel)
	)

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available camel-line)
		(unit-available imperial-camel))
	(up-compare-goal g-camel-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= camel)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Stable Tarkans
	
	(defrule
	(civ-selected hun)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-unique-unit)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-7)
	(set-goal g-item-time-required STABLE-TARKAN-TIME)
	)
	
	(defrule
	(civ-selected hun)
	(research-completed my-unique-unit-upgrade)
	(building-type-count stable > 0)
	=>
	(set-goal g-item-time-required STABLE-ELITE-TARKAN-TIME)
	)
	
	(defrule
	(civ-selected hun)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected hun)
	(research-completed ri-conscription)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count stable > 0)
	(civ-selected hun)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available stable-tarkan)
		(unit-available stable-elite-tarkan))
	(up-compare-goal g-tarkan-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-modify-goal g-temp g:= g-tarkan-line)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-7)
	(up-modify-goal g-temp g:%/ g-desired-num-unique-unit)
	)

	(defrule
	(building-type-count stable > 0)
	(civ-selected hun)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available stable-tarkan)
		(unit-available stable-elite-tarkan))
	(up-compare-goal g-tarkan-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= tarkan)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Scout Cavalry line
	
	(defrule
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-scout-cavalry)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-1)
	(set-goal g-item-time-required SCOUT-CAVALRY-TIME)
	)
	
	(defrule
	(civ-selected cuman)
	(research-completed ri-castle-unique-tech)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 20)
	)
	
	(defrule
	(or
		(civ-selected hun)
		(players-civ any-ally hun))
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)
	
	(defrule
	(civ-selected frankish)
	(research-completed ri-castle-unique-tech)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 140)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 133)
	)

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available scout-cavalry-line)
	(up-object-type-count-total c: scout-cavalry-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total scout-cavalry-line g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-1)
	(up-modify-goal g-temp g:%/ g-desired-num-scout-cavalry)
	)

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available scout-cavalry-line)
	(up-object-type-count-total c: scout-cavalry-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= scout-cavalry)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)



	;Add needed resources for unit chosen,
	;Then re-do process until out of stable time.
	
	(defrule
	(building-type-count stable > 0)
	=>
	(set-goal g-temp 100)
	)
	
	(defrule
	(civ-selected cuman)
	(research-completed ri-castle-unique-tech)
	(up-compare-goal g-next-unit-wanted == scout-cavalry)
	(building-type-count stable > 0)
	=>
	(set-goal g-temp 500)
	)
	
	(defrule
	(or
		(civ-selected hun)
		(players-civ any-ally hun))
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-temp c:* 120)
	(up-modify-goal g-temp c:/ 100)
	)
	
	(defrule
	(civ-selected frankish)
	(research-completed ri-castle-unique-tech)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-temp c:* 140)
	(up-modify-goal g-temp c:/ 100)
	)
	
	(defrule
	(research-completed ri-conscription)
	(building-type-count stable > 0)
	=>
	(up-modify-goal g-temp c:* 133)
	(up-modify-goal g-temp c:/ 100)
	)

	;Scout Cavalry line

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-next-unit-wanted == scout-cavalry)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: scout-cavalry c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: scout-cavalry c: 1)
	(up-modify-goal g-num-units-wanted-slot-1 c:+ 1)
	(set-goal g-item-time-required SCOUT-CAVALRY-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Knight line

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-next-unit-wanted == knight)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: knight c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: knight c: 1)
	(up-modify-goal g-num-units-wanted-slot-2 c:+ 1)
	(set-goal g-item-time-required KNIGHT-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Camel line

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-next-unit-wanted == camel)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: camel c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: camel c: 1)
	(up-modify-goal g-num-units-wanted-slot-3 c:+ 1)
	(set-goal g-item-time-required CAMEL-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Battle Elephant line

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-next-unit-wanted == battle-elephant)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: battle-elephant c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: battle-elephant c: 1)
	(up-modify-goal g-num-units-wanted-slot-4 c:+ 1)
	(set-goal g-item-time-required BATTLE-ELEPHANT-TIME)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Tarkan
	
	(defrule
	(civ-selected hun)
	(building-type-count stable > 0)
	(up-research-status c: my-unique-unit-upgrade != research-complete)
	(up-compare-goal g-next-unit-wanted == tarkan)
	=>
	(set-goal g-temp-2 STABLE-TARKAN-TIME)
	)
	
	(defrule
	(civ-selected hun)
	(building-type-count stable > 0)
	(up-research-status c: my-unique-unit-upgrade == research-complete)
	(up-compare-goal g-next-unit-wanted == tarkan)
	=>
	(set-goal g-temp-2 STABLE-ELITE-TARKAN-TIME)
	)

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-next-unit-wanted == tarkan)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: tarkan c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: tarkan c: 1)
	(up-modify-goal g-num-units-wanted-slot-7 c:+ 1)
	(up-modify-goal g-item-time-required g:= g-temp-2)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Loop again for next unit to train
	;Or no units to train

	(defrule
	(building-type-count stable > 0)
	(up-compare-goal g-next-unit-wanted != PENDING)
	(up-compare-goal i < 300)
	=>
	(up-modify-goal i c:+ 1)
	(up-jump-rule -45)
	)

(defrule
(up-compare-goal g-num-units-wanted-slot-1 > 0)
(building-type-count stable > 0)
=>
(up-chat-data-to-self "Scouts: %d" g: g-num-units-wanted-slot-1)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-2 > 0)
(building-type-count stable > 0)
=>
(up-chat-data-to-self "Knights: %d" g: g-num-units-wanted-slot-2)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-3 > 0)
(building-type-count stable > 0)
=>
(up-chat-data-to-self "Camels: %d" g: g-num-units-wanted-slot-3)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-4 > 0)
(building-type-count stable > 0)
=>
(up-chat-data-to-self "Eles: %d" g: g-num-units-wanted-slot-4)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-7 > 0)
(building-type-count stable > 0)
=>
(up-chat-data-to-self "Tarkans: %d" g: g-num-units-wanted-slot-7)
)



;====================<<<<<<<<<<SIEGE WORKSHOP>>>>>>>>>>====================

;Get amount of time available at all siege workshops to research techs and train soldiers.

(defrule
(true)
=>
(up-get-fact building-type-count siege-workshop g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

(defrule
(or
	(civ-selected celtic)
	(players-civ any-ally celtic))
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 120)
)

;====Capped Ram

(defrule
(up-research-status c: ri-capped-ram == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-capped-ram c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CAPPED-RAM-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-capped-ram == research-available)
(or
	(up-compare-goal g-desired-num-battering-ram > 3)
	(unit-type-count-total battering-ram-line >= 5))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-capped-ram == research-available)
(or
	(up-compare-goal g-desired-num-battering-ram > 3)
	(unit-type-count-total battering-ram-line >= 5))
(or
	(up-compare-goal g-food-delta > 200)
	(up-compare-goal g-seconds-available-for-building g:< g-item-time-required))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-capped-ram c: 1)
(chat-local-to-self "Tech: Capped Ram")
)

;Research tech soon

(defrule
(up-research-status c: ri-capped-ram == research-available)
(or
	(up-compare-goal g-desired-num-battering-ram > 3)
	(unit-type-count-total battering-ram-line >= 5))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-capped-ram == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-capped-ram c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Capped Ram")
)

;====Siege Ram

(defrule
(up-research-status c: ri-siege-ram == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-siege-ram c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required SIEGE-RAM-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-siege-ram == research-available)
(or
	(up-compare-goal g-desired-num-battering-ram > 3)
	(unit-type-count-total battering-ram-line >= 5))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-siege-ram == research-available)
(or
	(up-compare-goal g-desired-num-battering-ram > 3)
	(unit-type-count-total battering-ram-line >= 5))
(or
	(up-compare-goal g-food-delta > 200)
	(up-compare-goal g-seconds-available-for-building g:< g-item-time-required))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-siege-ram c: 1)
(chat-local-to-self "Tech: Siege Ram")
)

;Research tech soon

(defrule
(up-research-status c: ri-siege-ram == research-available)
(or
	(up-compare-goal g-desired-num-battering-ram > 3)
	(unit-type-count-total battering-ram-line >= 5))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-siege-ram == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-siege-ram c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Siege Ram")
)

;====Onager

(defrule
(up-research-status c: ri-onager == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-onager c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ONAGER-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-onager == research-available)
(or
	(up-compare-goal g-desired-num-mangonel > 2)
	(up-compare-goal g-mangonel-line >= 4))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-onager == research-available)
(or
	(up-compare-goal g-desired-num-mangonel > 2)
	(up-compare-goal g-mangonel-line >= 4))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-onager c: 1)
(chat-local-to-self "Tech: Onager")
)

;Research tech soon

(defrule
(up-research-status c: ri-onager == research-available)
(or
	(up-compare-goal g-desired-num-mangonel > 2)
	(up-compare-goal g-mangonel-line >= 4))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-onager == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-onager c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Onager")
)

;====Siege Onager

(defrule
(up-research-status c: ri-siege-onager == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-siege-onager c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-siege-onager == research-available)
(or
	(up-compare-goal g-desired-num-mangonel > 2)
	(up-compare-goal g-mangonel-line >= 4))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-siege-onager == research-available)
(or
	(up-compare-goal g-desired-num-mangonel > 2)
	(up-compare-goal g-mangonel-line >= 4))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-siege-onager c: 1)
(chat-local-to-self "Tech: Siege Onager")
)

;Research tech soon

(defrule
(up-research-status c: ri-siege-onager == research-available)
(or
	(up-compare-goal g-desired-num-mangonel > 2)
	(up-compare-goal g-mangonel-line >= 4))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-siege-onager == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-siege-onager c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Siege Onager")
)

;====Heavy Scorpion

(defrule
(up-research-status c: ri-heavy-scorpion == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-heavy-scorpion c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-heavy-scorpion == research-available)
(or
	(up-compare-goal g-desired-num-scorpion > 4)
	(unit-type-count-total scorpion-line >= 6))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-heavy-scorpion == research-available)
(or
	(up-compare-goal g-desired-num-scorpion > 4)
	(unit-type-count-total scorpion-line >= 6))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-wood-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-heavy-scorpion c: 1)
(chat-local-to-self "Tech: Heavy Scorpion")
)

;Research tech soon

(defrule
(up-research-status c: ri-heavy-scorpion == research-available)
(or
	(up-compare-goal g-desired-num-scorpion > 4)
	(unit-type-count-total scorpion-line >= 6))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-wood-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-heavy-scorpion == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-heavy-scorpion c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Heavy Scorpion")
)

;========SOLDIERS

;Calculate which soldier should be trained next.
;Do this by calculating which soldier has the smallest
;current units trained to desired train amount ratio.

(defrule
(building-type-count siege-workshop > 0)
=>
(set-goal g-num-units-wanted-slot-1 0)	;Battering Ram line
(set-goal g-num-units-wanted-slot-2 0)	;Mangonel line
(set-goal g-num-units-wanted-slot-3 0)	;Scorpion line
(set-goal g-num-units-wanted-slot-4 0)	;Bombard Cannon
(set-goal i 0)
)

	;Jump rule section

	(defrule
	(building-type-count siege-workshop > 0)
	=>
	(set-goal g-temp 100)	;ratio of current units to desired units (in %, lowest ratio is next trained unit)
	(set-goal g-temp-2 100)	;current lowest ratio (in %)
	(set-goal g-next-unit-wanted PENDING)
	)

	;Bombard Cannon
	
	(defrule
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-bombard-cannon)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-4)
	(set-goal g-item-time-required BOMBARD-CANNON-TIME)
	)
	
	(defrule
	(players-civ any-ally celtic)
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available bombard-cannon)
	(up-object-type-count-total c: bombard-cannon g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total bombard-cannon g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-4)
	(up-modify-goal g-temp g:%/ g-desired-num-bombard-cannon)
	)

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available bombard-cannon)
	(up-object-type-count-total c: bombard-cannon g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= bombard-cannon)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Mangonel line
	
	(defrule
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-mangonel)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-2)
	(set-goal g-item-time-required MANGONEL-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(or
		(civ-selected celtic)
		(players-civ any-ally celtic))
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available mangonel-line)
		(unit-available wk-onager))
	(up-compare-goal g-mangonel-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-modify-goal g-temp g:= g-mangonel-line)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-2)
	(up-modify-goal g-temp g:%/ g-desired-num-mangonel)
	)

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(or
		(unit-available mangonel-line)
		(unit-available wk-onager))
	(up-compare-goal g-mangonel-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= mangonel)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Battering Ram line
	
	(defrule
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-battering-ram)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-1)
	(set-goal g-item-time-required BATTERING-RAM-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(or
		(civ-selected celtic)
		(players-civ any-ally celtic))
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available battering-ram-line)
	(up-object-type-count-total c: battering-ram-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total battering-ram-line g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-1)
	(up-modify-goal g-temp g:%/ g-desired-num-battering-ram)
	)

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available battering-ram-line)
	(up-object-type-count-total c: battering-ram-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= battering-ram)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)

	;Scorpion line
	
	(defrule
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-scorpion)
	(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-3)
	(set-goal g-item-time-required SCORPION-TIME)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-item-time-required c:%* 85)
	)
	
	(defrule
	(or
		(civ-selected celtic)
		(players-civ any-ally celtic))
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required c:/ 120)
	)

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available scorpion-line)
	(up-object-type-count-total c: scorpion-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	=>
	(up-get-fact unit-type-count-total scorpion-line g-temp)
	(up-modify-goal g-temp g:+ g-num-units-wanted-slot-3)
	(up-modify-goal g-temp g:%/ g-desired-num-scorpion)
	)

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-desired-num-loop-diff > 0)
	(unit-available scorpion-line)
	(up-object-type-count-total c: scorpion-line g:< g-desired-num-loop-diff)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-temp g:< g-temp-2)
	=>
	(up-modify-goal g-next-unit-wanted c:= scorpion)
	(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
	)



	;Add needed resources for unit chosen,
	;Then re-do process until out of siege workshop time.
	
	(defrule
	(building-type-count siege-workshop > 0)
	=>
	(set-goal g-temp 100)
	)
	
	(defrule
	(civ-selected aztec)
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-temp c:* 100)
	(up-modify-goal g-temp c:/ 85)
	)
	
	(defrule
	(or
		(civ-selected celtic)
		(players-civ any-ally celtic))
	(building-type-count siege-workshop > 0)
	=>
	(up-modify-goal g-temp c:* 120)
	(up-modify-goal g-temp c:/ 100)
	)

	;Battering Ram line

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-next-unit-wanted == battering-ram)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: battering-ram c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: battering-ram c: 1)
	(up-modify-goal g-num-units-wanted-slot-1 c:+ 1)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Mangonel line

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-next-unit-wanted == mangonel)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: mangonel c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: mangonel c: 1)
	(up-modify-goal g-num-units-wanted-slot-2 c:+ 1)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Scorpion line

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-next-unit-wanted == scorpion)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: scorpion c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: scorpion c: 1)
	(up-modify-goal g-num-units-wanted-slot-3 c:+ 1)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Bombard Cannon

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-next-unit-wanted == bombard-cannon)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: bombard-cannon c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-object-cost c: bombard-cannon c: 1)
	(up-modify-goal g-num-units-wanted-slot-4 c:+ 1)
	(up-modify-goal g-item-time-required c:* 100)
	(up-modify-goal g-item-time-required g:/ g-temp)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	)

	;Loop again for next unit to train
	;Or no units to train

	(defrule
	(building-type-count siege-workshop > 0)
	(up-compare-goal g-next-unit-wanted != PENDING)
	(up-compare-goal i < 300)
	=>
	(up-modify-goal i c:+ 1)
	(up-jump-rule -28)
	)

(defrule
(up-compare-goal g-num-units-wanted-slot-1 > 0)
(building-type-count siege-workshop > 0)
=>
(up-chat-data-to-self "Rams: %d" g: g-num-units-wanted-slot-1)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-2 > 0)
(building-type-count siege-workshop > 0)
=>
(up-chat-data-to-self "Mangonels: %d" g: g-num-units-wanted-slot-2)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-3 > 0)
(building-type-count siege-workshop > 0)
=>
(up-chat-data-to-self "Scorpions: %d" g: g-num-units-wanted-slot-3)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-4 > 0)
(building-type-count siege-workshop > 0)
=>
(up-chat-data-to-self "Cannons: %d" g: g-num-units-wanted-slot-4)
)




;====================<<<<<<<<<<CASTLE>>>>>>>>>>====================

;Get amount of time available at all castles to research techs and train soldiers.

(defrule
(true)
=>
(up-get-fact building-type-count castle g-seconds-available-for-building)
(up-modify-goal g-seconds-available-for-building c:* DEFAULT-SECONDS-AVAILABLE)
)

(defrule
(civ-selected berbers)
(research-completed ri-castle-unique-tech)
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 125)
)

(defrule
(research-completed ri-conscription)
(up-compare-goal g-seconds-available-for-building > 0)
=>
(up-modify-goal g-seconds-available-for-building c:%* 133)
)

;====Unique Unit Upgrade

(defrule
(up-research-status c: my-unique-unit-upgrade == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: my-unique-unit-upgrade c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required ELITE-UNIQUE-UNIT-UPGRADE-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: my-unique-unit-upgrade == research-available)
(or
	(up-compare-goal g-desired-num-unique-unit > 6)
	(up-compare-goal g-unique-unit-line >= 9))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: my-unique-unit-upgrade == research-available)
(or
	(up-compare-goal g-desired-num-unique-unit > 6)
	(up-compare-goal g-unique-unit-line >= 9))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(or
			(up-compare-goal g-wood-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required))))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: my-unique-unit-upgrade c: 1)
(chat-local-to-self "Tech: Unique Unit Upgrade")
)

;Research tech soon

(defrule
(up-research-status c: my-unique-unit-upgrade == research-available)
(or
	(up-compare-goal g-desired-num-unique-unit > 6)
	(up-compare-goal g-unique-unit-line >= 9))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
(up-compare-goal g-wood-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: my-unique-unit-upgrade == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: my-unique-unit-upgrade c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Unique Unit Upgrade")
)

;====Unique Techs

#load-if-defined AZTEC-CIV

	;Garland Wars

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-infantry > 10)
		(unit-type-count infantry-class >= 15))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-infantry > 10)
		(unit-type-count infantry-class >= 15))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-infantry > 10)
		(unit-type-count infantry-class >= 15))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Atl-Atl

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-skirmisher > 5)
		(up-compare-goal g-skirmisher-line >= 8))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-skirmisher > 5)
		(up-compare-goal g-skirmisher-line >= 8))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-skirmisher > 5)
		(up-compare-goal g-skirmisher-line >= 8))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined BERBERS-CIV

	;Maghrabi Camels

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-camel > 12)
		(or
			(up-compare-goal g-camel-line >= 15)
			(or
				(up-compare-goal g-desired-num-unique-unit > 12)
				(up-compare-goal g-unique-unit-line >= 15))))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-camel > 12)
		(or
			(up-compare-goal g-camel-line >= 15)
			(or
				(up-compare-goal g-desired-num-unique-unit > 12)
				(up-compare-goal g-unique-unit-line >= 15))))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-camel > 12)
		(or
			(up-compare-goal g-camel-line >= 15)
			(or
				(up-compare-goal g-desired-num-unique-unit > 12)
				(up-compare-goal g-unique-unit-line >= 15))))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Kasbah

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(and
			(unit-type-count castle >= 2)
			(up-compare-goal g-desired-num-unique-unit > 5))
		(players-building-type-count any-ally castle >= 2))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(and
			(unit-type-count castle >= 2)
			(up-compare-goal g-desired-num-unique-unit > 5))
		(players-building-type-count any-ally castle >= 2))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(and
			(unit-type-count castle >= 2)
			(up-compare-goal g-desired-num-unique-unit > 5))
		(players-building-type-count any-ally castle >= 2))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined BRITON-CIV

	;Warwolf

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-trebuchet > 3)
		(up-compare-goal g-trebuchet-line > 4))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-trebuchet > 3)
		(up-compare-goal g-trebuchet-line > 4))
	(or
		(up-compare-goal g-wood-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-trebuchet > 3)
		(up-compare-goal g-trebuchet-line > 4))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-wood-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Yeomen

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(unit-type-count archer-line > 15)
		(or
			(unit-type-count my-unique-unit-line > 12)
			(up-compare-goal g-watch-tower-line > 7)))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-compare-goal g-temp-2 != 1)
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-archer > 10)
		(or
			(up-compare-goal g-desired-num-unique-unit > 10)
			(up-compare-goal g-desired-num-watch-tower > 5)))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow
	
	;Condition 1

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-archer > 10)
		(or
			(up-compare-goal g-desired-num-unique-unit > 10)
			(up-compare-goal g-desired-num-watch-tower > 5)))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	(set-goal g-temp-2 2)
	)
	
	;Condition 2

	(defrule
	(up-compare-goal g-temp-2 != 2)
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(unit-type-count archer-line > 15)
		(or
			(unit-type-count my-unique-unit-line > 12)
			(up-compare-goal g-watch-tower-line > 7)))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	;Condition 1
	
	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-archer > 10)
		(or
			(up-compare-goal g-desired-num-unique-unit > 10)
			(up-compare-goal g-desired-num-watch-tower > 5)))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 3)
	)
	
	;Condition 2

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(unit-type-count archer-line > 15)
		(or
			(unit-type-count my-unique-unit-line > 12)
			(up-compare-goal g-watch-tower-line > 7)))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 3)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 3)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined BURMESE-CIV

	;Manipur Cavalry

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry > 15)
		(or
			(unit-type-count cavalry-class >= 20)
			(or
				(up-compare-goal g-desired-num-unique-unit > 9)
				(up-compare-goal g-unique-unit-line >= 13))))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry > 15)
		(or
			(unit-type-count cavalry-class >= 20)
			(or
				(up-compare-goal g-desired-num-unique-unit > 9)
				(up-compare-goal g-unique-unit-line >= 13))))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry > 15)
		(or
			(unit-type-count cavalry-class >= 20)
			(or
				(up-compare-goal g-desired-num-unique-unit > 9)
				(up-compare-goal g-unique-unit-line >= 13))))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Howdah

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-battle-elephant > 8)
		(up-compare-goal g-battle-elephant-line >= 12))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-battle-elephant > 8)
		(up-compare-goal g-battle-elephant-line >= 12))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-wood-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-battle-elephant > 8)
		(up-compare-goal g-battle-elephant-line >= 12))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-wood-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined BYZANTINE-CIV

	;Logistica

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit > 9)
		(up-compare-goal g-unique-unit-line >= 12))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit > 9)
		(up-compare-goal g-unique-unit-line >= 12))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit > 9)
		(up-compare-goal g-unique-unit-line >= 12))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Greek Fire

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-fire-ship > 6)
		(up-compare-goal g-fire-galley-line >= 9))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-fire-ship > 6)
		(up-compare-goal g-fire-galley-line >= 9))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-fire-ship > 6)
		(up-compare-goal g-fire-galley-line >= 9))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined CELTIC-CIV

	;Furor Celtica

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)
	
	;Determine desired counts and existing counts for siege workshop siege only
	(defrule
	(true)
	=>
	(up-modify-goal g-temp g:= g-desired-num-siege)
	(up-modify-goal g-temp g:- g-desired-num-trebuchet)
	(up-modify-goal g-temp g:- g-desired-num-petard)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-temp > 3)	;desired siege workshop siege
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-temp > 3)	;desired siege workshop siege
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-temp > 3)	;desired siege workshop siege
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Stronghold

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-castle > 1)
		(up-compare-goal g-desired-num-watch-tower >= 5))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-castle > 1)
		(up-compare-goal g-desired-num-watch-tower >= 5))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-castle > 1)
		(up-compare-goal g-desired-num-watch-tower >= 5))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined CHINESE-CIV

	;Rocketry

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-scorpion > 6)
		(or
			(unit-type-count scorpion-line >= 9)
			(or
				(up-compare-goal g-desired-num-unique-unit > 16)
				(up-compare-goal g-unique-unit-line >= 22))))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-scorpion > 6)
		(or
			(unit-type-count scorpion-line >= 9)
			(or
				(up-compare-goal g-desired-num-unique-unit > 16)
				(up-compare-goal g-unique-unit-line >= 22))))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-scorpion > 6)
		(or
			(unit-type-count scorpion-line >= 9)
			(or
				(up-compare-goal g-desired-num-unique-unit > 16)
				(up-compare-goal g-unique-unit-line >= 22))))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Great Wall

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-watch-tower-line >= 6)
		(unit-type-count bombard-tower > 3))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-watch-tower-line >= 6)
		(unit-type-count bombard-tower > 3))
	(or
		(up-compare-goal g-wood-delta > 150)
		(or
			(up-compare-goal g-stone-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-watch-tower-line >= 6)
		(unit-type-count bombard-tower > 3))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-wood-delta <= 150)
	(up-compare-goal g-stone-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined ETHIOPIAN-CIV

	;Torsion Engines
	
	(defrule
	(true)
	=>
	(up-modify-goal g-temp g:= g-desired-num-siege)
	(up-modify-goal g-temp g:- g-desired-num-trebuchet)
	(up-modify-goal g-temp g:- g-desired-num-petard)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-temp > 3)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-temp > 3)
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-temp > 3)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Royal Heirs

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(up-compare-goal g-desired-num-unique-unit > 12)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(up-compare-goal g-desired-num-unique-unit > 12)
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(up-compare-goal g-desired-num-unique-unit > 12)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined FRANKISH-CIV

	;Chivalry

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-scout-cavalry > 15)
		(up-compare-goal g-desired-num-knight > 15))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-scout-cavalry > 15)
		(up-compare-goal g-desired-num-knight > 15))
	(or
		(up-compare-goal g-wood-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-scout-cavalry > 15)
		(up-compare-goal g-desired-num-knight > 15))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-wood-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Bearded Axe

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit > 9)
		(up-compare-goal g-unique-unit-line > 15))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit > 9)
		(up-compare-goal g-unique-unit-line > 15))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit > 9)
		(up-compare-goal g-unique-unit-line > 15))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)
	
#end-if

#load-if-defined GOTHIC-CIV

	;Perfusion

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-desired-num-infantry > 15)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-desired-num-infantry > 15)
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-desired-num-infantry > 15)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Anarchy

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(up-compare-goal g-desired-num-unique-unit > 12)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(up-compare-goal g-desired-num-unique-unit > 12)
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(up-compare-goal g-desired-num-unique-unit > 12)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined HUN-CIV

	;Atheism

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(players-building-type-count any-enemy wonder > 0)
		(enemy-captured-relics))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(players-building-type-count any-enemy wonder > 0)
		(enemy-captured-relics))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(players-building-type-count any-enemy wonder > 0)
		(enemy-captured-relics))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Marauders

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(up-compare-goal g-desired-num-unique-unit > 12)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(up-compare-goal g-desired-num-unique-unit > 12)
	(or
		(up-compare-goal g-wood-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(up-compare-goal g-desired-num-unique-unit > 12)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-wood-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined INCAN-CIV

	;Couriers

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-slinger > 12)
		(or
			(up-compare-goal g-desired-num-eagle-warrior > 12)
			(up-compare-goal g-desired-num-unique-unit > 10)))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-slinger > 12)
		(or
			(up-compare-goal g-desired-num-eagle-warrior > 12)
			(up-compare-goal g-desired-num-unique-unit > 10)))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-slinger > 12)
		(or
			(up-compare-goal g-desired-num-eagle-warrior > 12)
			(up-compare-goal g-desired-num-unique-unit > 10)))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Andean Sling

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-skirmisher > 12)
		(or
			(up-compare-goal g-skirmisher-line >= 16)
			(or
				(up-compare-goal g-desired-num-slinger > 12)
				(unit-type-count slinger >= 16))))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-skirmisher > 12)
		(or
			(up-compare-goal g-skirmisher-line >= 16)
			(or
				(up-compare-goal g-desired-num-slinger > 12)
				(unit-type-count slinger >= 16))))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-skirmisher > 12)
		(or
			(up-compare-goal g-skirmisher-line >= 16)
			(or
				(up-compare-goal g-desired-num-slinger > 12)
				(unit-type-count slinger >= 16))))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined INDIAN-CIV

	;Shatagni

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-hand-cannoneer > 12)
		(unit-type-count hand-cannoneer >= 15))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-hand-cannoneer > 12)
		(unit-type-count hand-cannoneer >= 15))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-hand-cannoneer > 12)
		(unit-type-count hand-cannoneer >= 15))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Sultans

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(unit-type-count villager-gold > 5)
		(or
			(unit-type-count trade-cart > 10)
			(up-compare-goal g-num-relics-gathered >= 2)))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(unit-type-count villager-gold > 5)
		(or
			(unit-type-count trade-cart > 10)
			(up-compare-goal g-num-relics-gathered >= 2)))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-wood-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(unit-type-count villager-gold > 5)
		(or
			(unit-type-count trade-cart > 10)
			(up-compare-goal g-num-relics-gathered >= 2)))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-wood-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined ITALIAN-CIV

	;Silk Road

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-trade-cart > 0)
		(up-compare-goal g-desired-num-trade-cog > 0))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-trade-cart > 0)
		(up-compare-goal g-desired-num-trade-cog > 0))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-trade-cart > 0)
		(up-compare-goal g-desired-num-trade-cog > 0))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Pavise

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-archer > 10)
		(or
			(unit-type-count archer-line >= 15)
			(or
				(up-compare-goal g-desired-num-unique-unit > 10)
				(up-compare-goal g-unique-unit-line >= 15))))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-archer > 10)
		(or
			(unit-type-count archer-line >= 15)
			(or
				(up-compare-goal g-desired-num-unique-unit > 10)
				(up-compare-goal g-unique-unit-line >= 15))))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-archer > 10)
		(or
			(unit-type-count archer-line >= 15)
			(or
				(up-compare-goal g-desired-num-unique-unit > 10)
				(up-compare-goal g-unique-unit-line >= 15))))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined JAPANESE-CIV

	;Kataparuto

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-trebuchet > 3)
		(up-compare-goal g-trebuchet-line >= 5))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-trebuchet > 3)
		(up-compare-goal g-trebuchet-line >= 5))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-trebuchet > 3)
		(up-compare-goal g-trebuchet-line >= 5))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Yasama

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-watch-tower > 4)
		(up-compare-goal g-watch-tower-line >= 6))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-watch-tower > 4)
		(up-compare-goal g-watch-tower-line >= 6))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-wood-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-watch-tower > 4)
		(up-compare-goal g-watch-tower-line >= 6))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-wood-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined KHMER-CIV

	;Double Crossbow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-scorpion > 6)
		(or
			(unit-type-count scorpion-line >= 9)
			(or
				(up-compare-goal g-desired-num-unique-unit > 9)
				(up-compare-goal g-unique-unit-line >= 15))))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-scorpion > 6)
		(or
			(unit-type-count scorpion-line >= 9)
			(or
				(up-compare-goal g-desired-num-unique-unit > 9)
				(up-compare-goal g-unique-unit-line >= 15))))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-scorpion > 6)
		(or
			(unit-type-count scorpion-line >= 9)
			(or
				(up-compare-goal g-desired-num-unique-unit > 9)
				(up-compare-goal g-unique-unit-line >= 15))))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Tusk Swords

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-battle-elephant > 8)
		(up-compare-goal g-battle-elephant-line >= 12))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-battle-elephant > 8)
		(up-compare-goal g-battle-elephant-line >= 12))
	(or
		(up-compare-goal g-wood-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-battle-elephant > 8)
		(up-compare-goal g-battle-elephant-line >= 12))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-wood-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined KOREAN-CIV

	;Shinkichon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-mangonel >= 4)
		(unit-type-count mangonel-line >= 6))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-mangonel >= 4)
		(unit-type-count mangonel-line >= 6))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-mangonel >= 4)
		(unit-type-count mangonel-line >= 6))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Panokseon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-ship >= 5)
		(unit-type-count turtle-ship-line >= 6))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-ship >= 5)
		(unit-type-count turtle-ship-line >= 6))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-wood-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-ship >= 5)
		(unit-type-count turtle-ship-line >= 6))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-wood-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined MAGYAR-CIV

	;Recurve Bow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry-archer > 8)
		(unit-type-count cavalry-archer-line >= 12))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry-archer > 8)
		(unit-type-count cavalry-archer-line >= 12))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry-archer > 8)
		(unit-type-count cavalry-archer-line >= 12))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Mercenaries

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit > 8)
		(up-compare-goal g-unique-unit-line >= 12))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit > 8)
		(up-compare-goal g-unique-unit-line >= 12))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit > 8)
		(up-compare-goal g-unique-unit-line >= 12))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined MALAY-CIV

	;Forced Levy

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-militia > 12)
		(unit-type-count militiaman-line >= 20))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-militia > 12)
		(unit-type-count militiaman-line >= 20))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-militia > 12)
		(unit-type-count militiaman-line >= 20))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Thalassocracy

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-dock > 2)
		(building-type-count dock >= 4))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-dock > 2)
		(building-type-count dock >= 4))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-dock > 2)
		(building-type-count dock >= 4))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined MALIAN-CIV

	;Farimba

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry > 10)
		(unit-type-count cavalry-class >= 15))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry > 10)
		(unit-type-count cavalry-class >= 15))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry > 10)
		(unit-type-count cavalry-class >= 15))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Tigui

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-town-center > 3)
		(building-type-count town-center >= 4))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-town-center > 3)
		(building-type-count town-center >= 4))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-wood-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-town-center > 3)
		(building-type-count town-center >= 4))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-wood-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined MAYAN-CIV

	;El Dorado

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-eagle-warrior >= 10)
		(up-compare-goal g-eagle-scout-line >= 15))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-eagle-warrior >= 10)
		(up-compare-goal g-eagle-scout-line >= 15))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-eagle-warrior >= 10)
		(up-compare-goal g-eagle-scout-line >= 15))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Obsidian Arrows

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-archer >= 8)
		(unit-type-count archer-line >= 12))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-archer >= 8)
		(unit-type-count archer-line >= 12))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-archer >= 8)
		(unit-type-count archer-line >= 12))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined MONGOL-CIV

	;Drill
	
	;Determine desired counts and existing counts for siege workshop siege only
	(defrule
	(true)
	=>
	(up-modify-goal g-temp g:= g-desired-num-siege)
	(up-modify-goal g-temp g:- g-desired-num-trebuchet)
	(up-modify-goal g-temp g:- g-desired-num-petard)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-temp > 3)		;desired num siege weapons from siege workshop
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-temp > 3)		;desired num siege weapons from siege workshop
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(up-compare-goal g-temp > 3)		;desired num siege weapons from siege workshop
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Nomads

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(current-age >= imperial-age)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(current-age >= imperial-age)
	(or
		(up-compare-goal g-wood-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(current-age >= imperial-age)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-wood-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined PERSIAN-CIV

	;Mahouts

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit >= 8)
		(up-compare-goal g-unique-unit-line >= 12))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit >= 8)
		(up-compare-goal g-unique-unit-line >= 12))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit >= 8)
		(up-compare-goal g-unique-unit-line >= 12))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)
	
	#load-if-defined DE-AVAILABLE

		;Kamarandan

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		=>
		(up-setup-cost-data 1 g-food-cost)
		(up-add-research-cost c: ri-castle-unique-tech c: 1)
		(up-get-cost-delta g-food-delta)
		(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
		(set-goal g-item-time-required CASTLE-UT-TIME)
		)

		;Increase max resources needed if necessary

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		(or
			(up-compare-goal g-desired-num-archer >= 6)
			(unit-type-count archer-line >= 8))
		=>
		(up-modify-goal g-max-food-needed g:max g-food-cost)
		(up-modify-goal g-max-wood-needed g:max g-wood-cost)
		(up-modify-goal g-max-stone-needed g:max g-stone-cost)
		(up-modify-goal g-max-gold-needed g:max g-gold-cost)
		)

		;Save for tech with escrow

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		(or
			(up-compare-goal g-desired-num-archer >= 6)
			(unit-type-count archer-line >= 8))
		(or
			(up-compare-goal g-food-delta > 150)
			(or
				(up-compare-goal g-gold-delta > 150)
				(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
		=>
		(up-setup-cost-data 0 g-food-to-save)
		(up-add-research-cost c: ri-castle-unique-tech c: 1)
		(chat-local-to-self "Tech: Castle UT")
		)

		;Research tech soon

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		(or
			(up-compare-goal g-desired-num-archer >= 6)
			(unit-type-count archer-line >= 8))
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		(up-compare-goal g-food-delta <= 150)
		(up-compare-goal g-gold-delta <= 150)
		=>
		(set-goal g-temp-2 1)
		)

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		(goal g-temp-2 1)
		=>
		(up-setup-cost-data 0 g-food-needed-soon)
		(up-add-research-cost c: ri-castle-unique-tech c: 1)
		(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
		(up-modify-goal g-wood-cost c:%* 30)
		(up-modify-goal g-gold-cost c:%* 30)
		(up-modify-goal g-stone-cost c:%* 30)
		(up-setup-cost-data 0 g-food-to-save)
		(up-add-cost-data g-food-cost c: 1)
		(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
		(chat-local-to-self "Tech: Castle UT")
		)
		
	#else
	
		;Boiling Oil

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		=>
		(up-setup-cost-data 1 g-food-cost)
		(up-add-research-cost c: ri-castle-unique-tech c: 1)
		(up-get-cost-delta g-food-delta)
		(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
		(set-goal g-item-time-required CASTLE-UT-TIME)
		)

		;Increase max resources needed if necessary

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		(building-type-count castle >= 2)
		(players-unit-type-count any-enemy battering-ram-line >= 5)
		=>
		(up-modify-goal g-max-food-needed g:max g-food-cost)
		(up-modify-goal g-max-wood-needed g:max g-wood-cost)
		(up-modify-goal g-max-stone-needed g:max g-stone-cost)
		(up-modify-goal g-max-gold-needed g:max g-gold-cost)
		)

		;Save for tech with escrow

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		(building-type-count castle >= 2)
		(players-unit-type-count any-enemy battering-ram-line >= 5)
		(or
			(up-compare-goal g-wood-delta > 150)
			(or
				(up-compare-goal g-stone-delta > 150)
				(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
		=>
		(up-setup-cost-data 0 g-food-to-save)
		(up-add-research-cost c: ri-castle-unique-tech c: 1)
		(chat-local-to-self "Tech: Castle UT")
		)

		;Research tech soon

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		(building-type-count castle >= 2)
		(players-unit-type-count any-enemy battering-ram-line >= 5)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		(up-compare-goal g-wood-delta <= 150)
		(up-compare-goal g-stone-delta <= 150)
		=>
		(set-goal g-temp-2 1)
		)

		(defrule
		(up-research-status c: ri-castle-unique-tech == research-available)
		(goal g-temp-2 1)
		=>
		(up-setup-cost-data 0 g-food-needed-soon)
		(up-add-research-cost c: ri-castle-unique-tech c: 1)
		(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
		(up-modify-goal g-wood-cost c:%* 30)
		(up-modify-goal g-gold-cost c:%* 30)
		(up-modify-goal g-stone-cost c:%* 30)
		(up-setup-cost-data 0 g-food-to-save)
		(up-add-cost-data g-food-cost c: 1)
		(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
		(chat-local-to-self "Tech: Castle UT")
		)
		
	#end-if
#end-if

#load-if-defined PORTUGUESE-CIV

	;Arquebus

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-bombard-cannon > 3)
		(or
			(up-compare-goal g-desired-num-cannon-galleon > 5)
			(up-compare-goal g-desired-num-hand-cannoneer > 10)))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-bombard-cannon > 3)
		(or
			(up-compare-goal g-desired-num-cannon-galleon > 5)
			(up-compare-goal g-desired-num-hand-cannoneer > 10)))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-bombard-cannon > 3)
		(or
			(up-compare-goal g-desired-num-cannon-galleon > 5)
			(up-compare-goal g-desired-num-hand-cannoneer > 10)))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Carrack

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-warships >= 10)
		(unit-type-count warship-class >= 15))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-warships >= 10)
		(unit-type-count warship-class >= 15))
	(or
		(up-compare-goal g-wood-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-warships >= 10)
		(unit-type-count warship-class >= 15))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-wood-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined SARACEN-CIV

	;Zealotry

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-camel > 10)
		(or
			(up-compare-goal g-camel-line >= 15)
			(or
				(up-compare-goal g-desired-num-unique-unit > 9)
				(up-compare-goal g-unique-unit-line >= 15))))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-camel > 10)
		(or
			(up-compare-goal g-camel-line >= 15)
			(or
				(up-compare-goal g-desired-num-unique-unit > 9)
				(up-compare-goal g-unique-unit-line >= 15))))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-camel > 10)
		(or
			(up-compare-goal g-camel-line >= 15)
			(or
				(up-compare-goal g-desired-num-unique-unit > 9)
				(up-compare-goal g-unique-unit-line >= 15))))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Masrasah

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-monk >= 5)
		(unit-type-count monastery-class >= 7))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-monk >= 5)
		(unit-type-count monastery-class >= 7))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-monk >= 5)
		(unit-type-count monastery-class >= 7))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined SLAVIC-CIV

	;Druzhina

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-infantry >= 15)
		(unit-type-count infantry-class >= 20))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-infantry >= 15)
		(unit-type-count infantry-class >= 20))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-infantry >= 15)
		(unit-type-count infantry-class >= 20))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Orthodoxy

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-monk >= 5)
		(unit-type-count monastery-class >= 7))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-monk >= 5)
		(unit-type-count monastery-class >= 7))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-monk >= 5)
		(unit-type-count monastery-class >= 7))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined SPANISH-CIV

	;Supremacy

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(unit-type-count villager >= 90)
		(up-compare-sn sn-number-civilian-militia >= 12))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(unit-type-count villager >= 90)
		(up-compare-sn sn-number-civilian-militia >= 12))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(unit-type-count villager >= 90)
		(up-compare-sn sn-number-civilian-militia >= 12))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Inquisition

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-monks >= 5)
		(unit-type-count monastery-class >= 7))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-monk >= 5)
		(unit-type-count monastery-class >= 7))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-monk >= 5)
		(unit-type-count monastery-class >= 7))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined TEUTONIC-CIV

	;Crenellations

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-castle >= 3)
		(unit-type-count castle >= 3))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-castle >= 3)
		(unit-type-count castle >= 3))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-castle >= 3)
		(unit-type-count castle >= 3))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Ironclad

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-siege >= 5)
		(up-compare-goal g-siege-class >= 7))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-siege >= 5)
		(up-compare-goal g-siege-class >= 7))
	(or
		(up-compare-goal g-wood-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-siege >= 5)
		(up-compare-goal g-siege-class >= 7))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-wood-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined TURKISH-CIV

	;Artillery

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-bombard-cannon > 3)
		(or
			(up-compare-goal g-desired-num-cannon-galleon > 5)
			(up-compare-goal g-desired-num-bombard-tower > 3)))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-bombard-cannon > 3)
		(or
			(up-compare-goal g-desired-num-cannon-galleon > 5)
			(up-compare-goal g-desired-num-bombard-tower > 3)))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-bombard-cannon > 3)
		(or
			(up-compare-goal g-desired-num-cannon-galleon > 5)
			(up-compare-goal g-desired-num-bombard-tower > 3)))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Sipahi

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry-archer >= 8)
		(or
			(unit-type-count cavalry-archer-line >= 12)
			(or
				(up-compare-goal g-desired-num-genitour >= 8)
				(up-compare-goal g-genitour-line >= 12))))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry-archer >= 8)
		(or
			(unit-type-count cavalry-archer-line >= 12)
			(or
				(up-compare-goal g-desired-num-genitour >= 8)
				(up-compare-goal g-genitour-line >= 12))))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-cavalry-archer >= 8)
		(or
			(unit-type-count cavalry-archer-line >= 12)
			(or
				(up-compare-goal g-desired-num-genitour >= 8)
				(up-compare-goal g-genitour-line >= 12))))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined VIETNAMESE-CIV

	;Paper Money

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(player-in-game any-ally)
		(unit-type-count villager-gold == 0))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(player-in-game any-ally)
		(unit-type-count villager-gold == 0))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(player-in-game any-ally)
		(unit-type-count villager-gold == 0))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Chatras

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-battle-elephant >= 8)
		(up-compare-goal g-battle-elephant-line >= 12))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-battle-elephant >= 8)
		(up-compare-goal g-battle-elephant-line >= 12))
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-battle-elephant >= 8)
		(up-compare-goal g-battle-elephant-line >= 12))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

#load-if-defined VIKING-CIV

	;Berserkergang

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required IMPERIAL-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit >= 12)
		(up-compare-goal g-unique-unit-line >= 16))
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit >= 12)
		(up-compare-goal g-unique-unit-line >= 16))
	(or
		(up-compare-goal g-food-delta > 200)
		(or
			(up-compare-goal g-gold-delta > 200)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-unique-unit >= 12)
		(up-compare-goal g-unique-unit-line >= 16))
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 200)
	(up-compare-goal g-gold-delta <= 200)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-imperial-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-imperial-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Imperial UT")
	)

	;Chieftains

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-get-cost-delta g-food-delta)
	(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
	(set-goal g-item-time-required CASTLE-UT-TIME)
	)

	;Increase max resources needed if necessary

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-infantry >= 15)
		(unit-type-count infantry-class >= 20))
	(players-unit-type-count any-enemy cavalry-class > 10)
	=>
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)

	;Save for tech with escrow

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-infantry >= 15)
		(unit-type-count infantry-class >= 20))
	(players-unit-type-count any-enemy cavalry-class > 10)
	(or
		(up-compare-goal g-food-delta > 150)
		(or
			(up-compare-goal g-gold-delta > 150)
			(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
	=>
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(chat-local-to-self "Tech: Castle UT")
	)

	;Research tech soon

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(or
		(up-compare-goal g-desired-num-infantry >= 15)
		(unit-type-count infantry-class >= 20))
	(players-unit-type-count any-enemy cavalry-class > 10)
	(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
	(up-compare-goal g-food-delta <= 150)
	(up-compare-goal g-gold-delta <= 150)
	=>
	(set-goal g-temp-2 1)
	)

	(defrule
	(up-research-status c: ri-castle-unique-tech == research-available)
	(goal g-temp-2 1)
	=>
	(up-setup-cost-data 0 g-food-needed-soon)
	(up-add-research-cost c: ri-castle-unique-tech c: 1)
	(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
	(up-modify-goal g-wood-cost c:%* 30)
	(up-modify-goal g-gold-cost c:%* 30)
	(up-modify-goal g-stone-cost c:%* 30)
	(up-setup-cost-data 0 g-food-to-save)
	(up-add-cost-data g-food-cost c: 1)
	(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
	(chat-local-to-self "Tech: Castle UT")
	)
	
#end-if

;====Conscription

(defrule
(up-research-status c: ri-conscription == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-conscription c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required CONSCRIPTION-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-conscription == research-available)
(up-modify-goal g-desired-military-pop > 15)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Research tech soon

(defrule
(up-research-status c: ri-conscription == research-available)
(up-modify-goal g-desired-military-pop > 15)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-conscription c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Conscription")
)

;====Hoardings

(defrule
(up-research-status c: ri-hoardings == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-hoardings c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required HOARDINGS-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-hoardings == research-available)
(or
	(up-compare-goal g-desired-num-castle > 3)
	(unit-type-count castle >= 3))
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-hoardings == research-available)
(or
	(up-compare-goal g-desired-num-castle > 3)
	(unit-type-count castle >= 3))
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-hoardings c: 1)
(chat-local-to-self "Tech: Hoardings")
)

;Research tech soon

(defrule
(up-research-status c: ri-hoardings == research-available)
(or
	(up-compare-goal g-desired-num-castle > 3)
	(unit-type-count castle >= 3))
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-hoardings == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-hoardings c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Hoardings")
)

;====Sappers

(defrule
(up-research-status c: ri-sappers == research-available)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost c: ri-sappers c: 1)
(up-get-cost-delta g-food-delta)
(up-modify-goal g-temp-2 c:= 0)	;if goal = 1, tech has been added to needed resources
(set-goal g-item-time-required SAPPERS-TIME)
)

;Increase max resources needed if necessary

(defrule
(up-research-status c: ri-sappers == research-available)
(up-compare-sn sn-allow-civilian-offense == 1)
(up-compare-sn sn-number-civilian-militia >= 12)
=>
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;Save for tech with escrow

(defrule
(up-research-status c: ri-sappers == research-available)
(up-compare-sn sn-allow-civilian-offense == 1)
(up-compare-sn sn-number-civilian-militia >= 12)
(or
	(up-compare-goal g-food-delta > 200)
	(or
		(up-compare-goal g-gold-delta > 200)
		(up-compare-goal g-seconds-available-for-building g:< g-item-time-required)))
=>
(up-setup-cost-data 0 g-food-to-save)
(up-add-research-cost c: ri-sappers c: 1)
(chat-local-to-self "Tech: Sappers")
)

;Research tech soon

(defrule
(up-research-status c: ri-sappers == research-available)
(up-compare-sn sn-allow-civilian-offense == 1)
(up-compare-sn sn-number-civilian-militia >= 12)
(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
(up-compare-goal g-food-delta <= 200)
(up-compare-goal g-gold-delta <= 200)
=>
(set-goal g-temp-2 1)
)

(defrule
(up-research-status c: ri-sappers == research-available)
(goal g-temp-2 1)
=>
(up-setup-cost-data 0 g-food-needed-soon)
(up-add-research-cost c: ri-sappers c: 1)
(up-modify-goal g-food-cost c:%* 30)		;only add 30% of cost to g-food-to-save because tech is almost currently affordable
(up-modify-goal g-wood-cost c:%* 30)
(up-modify-goal g-gold-cost c:%* 30)
(up-modify-goal g-stone-cost c:%* 30)
(up-setup-cost-data 0 g-food-to-save)
(up-add-cost-data g-food-cost c: 1)
(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
(chat-local-to-self "Tech: Sappers")
)

;========SOLDIERS

;Calculate which soldier should be trained next.
;Do this by calculating which soldier has the smallest
;current units trained to desired train amount ratio.

(defrule
(building-type-count castle > 0)
=>
(set-goal g-num-units-wanted-slot-1 0)	;Unique Unit line
(set-goal g-num-units-wanted-slot-2 0)	;Trebuchet
(set-goal g-num-units-wanted-slot-3 0)	;Petard
(set-goal i 0)
)

	;Jump rules:
	
	#load-if-not-defined GOTHIC-CIV
		#load-if-not-defined HUN-CIV

			;Jump rule section

			(defrule
			(building-type-count castle > 0)
			=>
			(set-goal g-temp 100)	;ratio of current units to desired units (in %, lowest ratio is next trained unit)
			(set-goal g-temp-2 100)	;current lowest ratio (in %)
			(set-goal g-next-unit-wanted PENDING)
			)

			;Trebuchet
			
			(defrule
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-trebuchet)
			(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-2)
			(set-goal g-item-time-required TREBUCHET-TIME)
			)
			
			(defrule
			(civ-selected aztec)
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-item-time-required c:%* 85)
			)
			
			(defrule
			(civ-selected berbers)
			(building-type-count castle > 0)
			(research-completed ri-castle-unique-tech)
			=>
			(up-modify-goal g-item-time-required c:* 100)
			(up-modify-goal g-item-time-required c:/ 125)
			)
			
			(defrule
			(research-completed ri-conscription)
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-item-time-required c:* 100)
			(up-modify-goal g-item-time-required c:/ 133)
			)

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-desired-num-loop-diff > 0)
			(unit-available trebuchet)
			(up-compare-goal g-trebuchet-line g:< g-desired-num-loop-diff)
			(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
			=>
			(up-get-fact unit-type-count-total trebuchet g-temp)
			(up-modify-goal g-temp g:+ g-num-units-wanted-slot-2)
			(up-modify-goal g-temp g:%/ g-desired-num-trebuchet)
			)

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-desired-num-loop-diff > 0)
			(unit-available trebuchet)
			(up-compare-goal g-trebuchet-line g:< g-desired-num-loop-diff)
			(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
			(up-compare-goal g-temp g:< g-temp-2)
			=>
			(up-modify-goal g-next-unit-wanted c:= trebuchet)
			(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
			)

			;Unique Unit
			
			(defrule
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-unique-unit)
			(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-1)
			(set-goal g-item-time-required UNIQUE-UNIT-TIME)
			)
			
			(defrule
			(research-completed my-unique-unit-upgrade)
			(building-type-count castle > 0)
			=>
			(set-goal g-item-time-required ELITE-UNIQUE-UNIT-TIME)
			)
			
			(defrule
			(civ-selected ethiopian)
			(research-completed ri-castle-unique-tech)
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-item-time-required c:%* 50)
			)
			
			(defrule
			(civ-selected aztec)
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-item-time-required c:%* 85)
			)
			
			(defrule
			(civ-selected berbers)
			(building-type-count castle > 0)
			(research-completed ri-castle-unique-tech)
			=>
			(up-modify-goal g-item-time-required c:* 100)
			(up-modify-goal g-item-time-required c:/ 125)
			)
			
			(defrule
			(research-completed ri-conscription)
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-item-time-required c:* 100)
			(up-modify-goal g-item-time-required c:/ 133)
			)

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-desired-num-loop-diff > 0)
			(or
				(unit-available my-unique-unit)
				(unit-available my-elite-unique-unit))
			(up-compare-goal g-unique-unit-line g:< g-desired-num-loop-diff)
			(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
			=>
			(up-modify-goal g-temp g:= my-unique-unit-line)
			(up-modify-goal g-temp g:+ g-num-units-wanted-slot-1)
			(up-modify-goal g-temp g:%/ g-desired-num-unique-unit)
			)

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-desired-num-loop-diff > 0)
			(or
				(unit-available my-unique-unit)
				(unit-available my-elite-unique-unit))
			(up-compare-goal g-unique-unit-line g:< g-desired-num-loop-diff)
			(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
			(up-compare-goal g-temp g:< g-temp-2)
			=>
			(up-modify-goal g-next-unit-wanted c:= my-unique-unit)
			(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
			)

			;Petard
			
			(defrule
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-petard)
			(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-3)
			(set-goal g-item-time-required PETARD-TIME)
			)

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-desired-num-loop-diff > 0)
			(unit-available petard)
			(up-object-type-count-total c: petard g:< g-desired-num-loop-diff)
			(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
			=>
			(up-get-fact unit-type-count-total petard g-temp)
			(up-modify-goal g-temp g:+ g-num-units-wanted-slot-3)
			(up-modify-goal g-temp g:%/ g-desired-num-petard)
			)

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-desired-num-loop-diff > 0)
			(unit-available petard)
			(up-object-type-count-total c: petard g:< g-desired-num-loop-diff)
			(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
			(up-compare-goal g-temp g:< g-temp-2)
			=>
			(up-modify-goal g-next-unit-wanted c:= petard)
			(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
			)



			;Add needed resources for unit chosen,
			;Then re-do process until out of castle time.
	
			(defrule
			(building-type-count castle > 0)
			=>
			(set-goal g-temp 100)
			)
			
			(defrule
			(civ-selected ethiopian)
			(up-compare-goal g-next-unit-wanted == my-unique-unit)
			(research-completed ri-castle-unique-tech)
			=>
			(up-modify-goal g-temp c:* 2)
			)
			
			(defrule
			(civ-selected aztec)
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-temp c:* 100)
			(up-modify-goal g-temp c:/ 85)
			)
			
			(defrule
			(civ-selected berbers)
			(research-completed ri-castle-unique-tech)
			(building-type-count siege-workshop > 0)
			=>
			(up-modify-goal g-temp c:%* 125)
			)
			
			(defrule
			(research-completed ri-conscription)
			(building-type-count castle > 0)
			=>
			(up-modify-goal g-temp c:%* 133)
			)

			;Unique Unit line
			
			(defrule
			(up-research-status c: my-unique-unit-upgrade != research-complete)
			(up-compare-goal g-next-unit-wanted == my-unique-unit)
			(building-type-count castle > 0)
			=>
			(set-goal g-temp-2 UNIQUE-UNIT-TIME)
			)
			
			(defrule
			(up-research-status c: my-unique-unit-upgrade == research-complete)
			(up-compare-goal g-next-unit-wanted == my-unique-unit)
			(building-type-count castle > 0)
			=>
			(set-goal g-temp-2 ELITE-UNIQUE-UNIT-TIME)
			)

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-next-unit-wanted == my-unique-unit)
			=>
			(up-setup-cost-data 1 g-food-cost)
			(up-add-object-cost c: my-unique-unit c: 1)
			(up-modify-goal g-max-food-needed g:max g-food-cost)
			(up-modify-goal g-max-wood-needed g:max g-wood-cost)
			(up-modify-goal g-max-stone-needed g:max g-stone-cost)
			(up-modify-goal g-max-gold-needed g:max g-gold-cost)
			(up-setup-cost-data 0 g-food-needed-soon)
			(up-add-object-cost c: my-unique-unit c: 1)
			(up-modify-goal g-num-units-wanted-slot-1 c:+ 1)
			(up-modify-goal g-item-time-required g:= g-temp-2)
			(up-modify-goal g-item-time-required c:* 100)
			(up-modify-goal g-item-time-required g:/ g-temp)
			(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
			)

			;Trebuchet

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-next-unit-wanted == trebuchet)
			=>
			(up-setup-cost-data 1 g-food-cost)
			(up-add-object-cost c: trebuchet c: 1)
			(up-modify-goal g-max-food-needed g:max g-food-cost)
			(up-modify-goal g-max-wood-needed g:max g-wood-cost)
			(up-modify-goal g-max-stone-needed g:max g-stone-cost)
			(up-modify-goal g-max-gold-needed g:max g-gold-cost)
			(up-setup-cost-data 0 g-food-needed-soon)
			(up-add-object-cost c: trebuchet c: 1)
			(up-modify-goal g-num-units-wanted-slot-2 c:+ 1)
			(set-goal g-item-time-required TREBUCHET-TIME)
			(up-modify-goal g-item-time-required c:* 100)
			(up-modify-goal g-item-time-required g:/ g-temp)
			(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
			)

			;Petard

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-next-unit-wanted == petard)
			=>
			(up-setup-cost-data 1 g-food-cost)
			(up-add-object-cost c: petard c: 1)
			(up-modify-goal g-max-food-needed g:max g-food-cost)
			(up-modify-goal g-max-wood-needed g:max g-wood-cost)
			(up-modify-goal g-max-stone-needed g:max g-stone-cost)
			(up-modify-goal g-max-gold-needed g:max g-gold-cost)
			(up-setup-cost-data 0 g-food-needed-soon)
			(up-add-object-cost c: petard c: 1)
			(up-modify-goal g-num-units-wanted-slot-3 c:+ 1)
			(set-goal g-item-time-required PETARD-TIME)
			(up-modify-goal g-item-time-required c:* 100)
			(up-modify-goal g-item-time-required g:/ g-temp)
			(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
			)

			;Loop again for next unit to train
			;Or no units to train

			(defrule
			(building-type-count castle > 0)
			(up-compare-goal g-next-unit-wanted != PENDING)
			(up-compare-goal i < 300)
			=>
			(up-modify-goal i c:+ 1)
			(up-jump-rule -29)
			)
			
		#end-if
	#end-if
	
	#load-if-defined GOTHIC-CIV

		;Jump rule section

		(defrule
		(building-type-count castle > 0)
		=>
		(set-goal g-temp 100)	;ratio of current units to desired units (in %, lowest ratio is next trained unit)
		(set-goal g-temp-2 100)	;current lowest ratio (in %)
		(set-goal g-next-unit-wanted PENDING)
		)

		;Trebuchet
		
		(defrule
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-trebuchet)
		(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-2)
		(set-goal g-item-time-required TREBUCHET-TIME)
		)
		
		(defrule
		(research-completed ri-conscription)
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required c:/ 133)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(unit-available trebuchet)
		(up-compare-goal g-trebuchet-line g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		=>
		(up-get-fact unit-type-count-total trebuchet g-temp)
		(up-modify-goal g-temp g:+ g-num-units-wanted-slot-2)
		(up-modify-goal g-temp g:%/ g-desired-num-trebuchet)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(unit-available trebuchet)
		(up-compare-goal g-trebuchet-line g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		(up-compare-goal g-temp g:< g-temp-2)
		=>
		(up-modify-goal g-next-unit-wanted c:= trebuchet)
		(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
		)
	
		;For Goths, add desired huskarls from barracks (slot 7)

		;Unique Unit
		
		(defrule
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-unique-unit)
		(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-1)
		(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-7)
		(set-goal g-item-time-required UNIQUE-UNIT-TIME)
		)
		
		(defrule
		(research-completed my-unique-unit-upgrade)
		(building-type-count castle > 0)
		=>
		(set-goal g-item-time-required ELITE-UNIQUE-UNIT-TIME)
		)
			
		(defrule
		(research-completed ri-conscription)
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required c:/ 133)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(or
			(unit-available my-unique-unit)
			(unit-available my-elite-unique-unit))
		(up-compare-goal g-unique-unit-line g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		=>
		(up-modify-goal g-temp g:= g-unique-unit-line)
		(up-modify-goal g-temp g:+ g-num-units-wanted-slot-1)
		(up-modify-goal g-temp g:+ g-num-units-wanted-slot-7)
		(up-modify-goal g-temp g:%/ g-desired-num-unique-unit)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(or
			(unit-available my-unique-unit)
			(unit-available my-elite-unique-unit))
		(up-compare-goal g-unique-unit-line g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		(up-compare-goal g-temp g:< g-temp-2)
		=>
		(up-modify-goal g-next-unit-wanted c:= my-unique-unit)
		(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
		)

		;Petard
		
		(defrule
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-petard)
		(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-3)
		(set-goal g-item-time-required PETARD-TIME)
		)
			
		(defrule
		(research-completed ri-conscription)
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required c:/ 133)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(unit-available petard)
		(up-object-type-count-total c: petard g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		=>
		(up-get-fact unit-type-count-total petard g-temp)
		(up-modify-goal g-temp g:+ g-num-units-wanted-slot-3)
		(up-modify-goal g-temp g:%/ g-desired-num-petard)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(unit-available petard)
		(up-object-type-count-total c: petard g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		(up-compare-goal g-temp g:< g-temp-2)
		=>
		(up-modify-goal g-next-unit-wanted c:= petard)
		(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
		)



		;Add needed resources for unit chosen,
		;Then re-do process until out of castle time.
	
		(defrule
		(building-type-count castle > 0)
		=>
		(set-goal g-temp 100)
		)
		
		(defrule
		(research-completed ri-conscription)
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-temp c:%* 133)
		)

		;Unique Unit line
		
		(defrule
		(up-research-status c: my-unique-unit-upgrade != research-complete)
		(up-compare-goal g-next-unit-wanted == my-unique-unit)
		(building-type-count castle > 0)
		=>
		(set-goal g-temp-2 UNIQUE-UNIT-TIME)
		)
		
		(defrule
		(up-research-status c: my-unique-unit-upgrade == research-complete)
		(up-compare-goal g-next-unit-wanted == my-unique-unit)
		(building-type-count castle > 0)
		=>
		(set-goal g-temp-2 ELITE-UNIQUE-UNIT-TIME)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-next-unit-wanted == my-unique-unit)
		=>
		(up-setup-cost-data 1 g-food-cost)
		(up-add-object-cost c: my-unique-unit c: 1)
		(up-modify-goal g-max-food-needed g:max g-food-cost)
		(up-modify-goal g-max-wood-needed g:max g-wood-cost)
		(up-modify-goal g-max-stone-needed g:max g-stone-cost)
		(up-modify-goal g-max-gold-needed g:max g-gold-cost)
		(up-setup-cost-data 0 g-food-needed-soon)
		(up-add-object-cost c: my-unique-unit c: 1)
		(up-modify-goal g-num-units-wanted-slot-1 c:+ 1)
		(up-modify-goal g-item-time-required g:= g-temp-2)
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required g:/ g-temp)
		(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
		)

		;Trebuchet

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-next-unit-wanted == trebuchet)
		=>
		(up-setup-cost-data 1 g-food-cost)
		(up-add-object-cost c: trebuchet c: 1)
		(up-modify-goal g-max-food-needed g:max g-food-cost)
		(up-modify-goal g-max-wood-needed g:max g-wood-cost)
		(up-modify-goal g-max-stone-needed g:max g-stone-cost)
		(up-modify-goal g-max-gold-needed g:max g-gold-cost)
		(up-setup-cost-data 0 g-food-needed-soon)
		(up-add-object-cost c: trebuchet c: 1)
		(up-modify-goal g-num-units-wanted-slot-2 c:+ 1)
		(set-goal g-item-time-required TREBUCHET-TIME)
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required g:/ g-temp)
		(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
		)

		;Petard

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-next-unit-wanted == petard)
		=>
		(up-setup-cost-data 1 g-food-cost)
		(up-add-object-cost c: petard c: 1)
		(up-modify-goal g-max-food-needed g:max g-food-cost)
		(up-modify-goal g-max-wood-needed g:max g-wood-cost)
		(up-modify-goal g-max-stone-needed g:max g-stone-cost)
		(up-modify-goal g-max-gold-needed g:max g-gold-cost)
		(up-setup-cost-data 0 g-food-needed-soon)
		(up-add-object-cost c: petard c: 1)
		(up-modify-goal g-num-units-wanted-slot-3 c:+ 1)
		(set-goal g-item-time-required PETARD-TIME)
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required g:/ g-temp)
		(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
		)

		;Loop again for next unit to train
		;Or no units to train

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-next-unit-wanted != PENDING)
		(up-compare-goal i < 300)
		=>
		(up-modify-goal i c:+ 1)
		(up-jump-rule -22)
		)
	
	#end-if
	
	#load-if-defined HUN-CIV

		;Jump rule section

		(defrule
		(building-type-count castle > 0)
		=>
		(set-goal g-temp 100)	;ratio of current units to desired units (in %, lowest ratio is next trained unit)
		(set-goal g-temp-2 100)	;current lowest ratio (in %)
		(set-goal g-next-unit-wanted PENDING)
		)

		;Trebuchet
		
		(defrule
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-trebuchet)
		(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-2)
		(set-goal g-item-time-required TREBUCHET-TIME)
		)
		
		(defrule
		(research-completed ri-conscription)
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required c:/ 133)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(unit-available trebuchet)
		(up-compare-goal g-trebuchet-line g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		=>
		(up-get-fact unit-type-count-total trebuchet g-temp)
		(up-modify-goal g-temp g:+ g-num-units-wanted-slot-2)
		(up-modify-goal g-temp g:%/ g-desired-num-trebuchet)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(unit-available trebuchet)
		(up-compare-goal g-trebuchet-line g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		(up-compare-goal g-temp g:< g-temp-2)
		=>
		(up-modify-goal g-next-unit-wanted c:= trebuchet)
		(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
		)
	
		;For Huns, add desired tarkans from stable (slot 7)

		;Unique Unit
		
		(defrule
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-unique-unit)
		(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-1)
		(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-7)
		(set-goal g-item-time-required UNIQUE-UNIT-TIME)
		)
		
		(defrule
		(research-completed my-unique-unit-upgrade)
		(building-type-count castle > 0)
		=>
		(set-goal g-item-time-required ELITE-UNIQUE-UNIT-TIME)
		)
			
		(defrule
		(research-completed ri-conscription)
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required c:/ 133)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(or
			(unit-available my-unique-unit)
			(unit-available my-elite-unique-unit))
		(up-compare-goal g-unique-unit-line g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		=>
		(up-modify-goal g-temp g:= g-unique-unit-line)
		(up-modify-goal g-temp g:+ g-num-units-wanted-slot-1)
		(up-modify-goal g-temp g:+ g-num-units-wanted-slot-7)
		(up-modify-goal g-temp g:%/ g-desired-num-unique-unit)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(or
			(unit-available my-unique-unit)
			(unit-available my-elite-unique-unit))
		(up-compare-goal g-unique-unit-line g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		(up-compare-goal g-temp g:< g-temp-2)
		=>
		(up-modify-goal g-next-unit-wanted c:= my-unique-unit)
		(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
		)

		;Petard
		
		(defrule
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-desired-num-loop-diff g:= g-desired-num-petard)
		(up-modify-goal g-desired-num-loop-diff g:- g-num-units-wanted-slot-3)
		(set-goal g-item-time-required PETARD-TIME)
		)
			
		(defrule
		(research-completed ri-conscription)
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required c:/ 133)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(unit-available petard)
		(up-object-type-count-total c: petard g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		=>
		(up-get-fact unit-type-count-total petard g-temp)
		(up-modify-goal g-temp g:+ g-num-units-wanted-slot-3)
		(up-modify-goal g-temp g:%/ g-desired-num-petard)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-desired-num-loop-diff > 0)
		(unit-available petard)
		(up-object-type-count-total c: petard g:< g-desired-num-loop-diff)
		(up-compare-goal g-seconds-available-for-building g:>= g-item-time-required)
		(up-compare-goal g-temp g:< g-temp-2)
		=>
		(up-modify-goal g-next-unit-wanted c:= petard)
		(up-modify-goal g-temp-2 g:= g-temp)	;store ratio in temp 2 for comparison
		)



		;Add needed resources for unit chosen,
		;Then re-do process until out of castle time.
	
		(defrule
		(building-type-count castle > 0)
		=>
		(set-goal g-temp 100)
		)
		
		(defrule
		(research-completed ri-conscription)
		(building-type-count castle > 0)
		=>
		(up-modify-goal g-temp c:%* 133)
		)

		;Unique Unit line
		
		(defrule
		(up-research-status c: my-unique-unit-upgrade != research-complete)
		(up-compare-goal g-next-unit-wanted == my-unique-unit)
		(building-type-count castle > 0)
		=>
		(set-goal g-temp-2 UNIQUE-UNIT-TIME)
		)
		
		(defrule
		(up-research-status c: my-unique-unit-upgrade == research-complete)
		(up-compare-goal g-next-unit-wanted == my-unique-unit)
		(building-type-count castle > 0)
		=>
		(set-goal g-temp-2 ELITE-UNIQUE-UNIT-TIME)
		)

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-next-unit-wanted == my-unique-unit)
		=>
		(up-setup-cost-data 1 g-food-cost)
		(up-add-object-cost c: my-unique-unit c: 1)
		(up-modify-goal g-max-food-needed g:max g-food-cost)
		(up-modify-goal g-max-wood-needed g:max g-wood-cost)
		(up-modify-goal g-max-stone-needed g:max g-stone-cost)
		(up-modify-goal g-max-gold-needed g:max g-gold-cost)
		(up-setup-cost-data 0 g-food-needed-soon)
		(up-add-object-cost c: my-unique-unit c: 1)
		(up-modify-goal g-num-units-wanted-slot-1 c:+ 1)
		(up-modify-goal g-item-time-required g:= g-temp-2)
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required g:/ g-temp)
		(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
		)

		;Trebuchet

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-next-unit-wanted == trebuchet)
		=>
		(up-setup-cost-data 1 g-food-cost)
		(up-add-object-cost c: trebuchet c: 1)
		(up-modify-goal g-max-food-needed g:max g-food-cost)
		(up-modify-goal g-max-wood-needed g:max g-wood-cost)
		(up-modify-goal g-max-stone-needed g:max g-stone-cost)
		(up-modify-goal g-max-gold-needed g:max g-gold-cost)
		(up-setup-cost-data 0 g-food-needed-soon)
		(up-add-object-cost c: trebuchet c: 1)
		(up-modify-goal g-num-units-wanted-slot-2 c:+ 1)
		(set-goal g-item-time-required TREBUCHET-TIME)
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required g:/ g-temp)
		(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
		)

		;Petard

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-next-unit-wanted == petard)
		=>
		(up-setup-cost-data 1 g-food-cost)
		(up-add-object-cost c: petard c: 1)
		(up-modify-goal g-max-food-needed g:max g-food-cost)
		(up-modify-goal g-max-wood-needed g:max g-wood-cost)
		(up-modify-goal g-max-stone-needed g:max g-stone-cost)
		(up-modify-goal g-max-gold-needed g:max g-gold-cost)
		(up-setup-cost-data 0 g-food-needed-soon)
		(up-add-object-cost c: petard c: 1)
		(up-modify-goal g-num-units-wanted-slot-3 c:+ 1)
		(set-goal g-item-time-required PETARD-TIME)
		(up-modify-goal g-item-time-required c:* 100)
		(up-modify-goal g-item-time-required g:/ g-temp)
		(up-modify-goal g-seconds-available-for-building g:- g-item-time-required)
		)

		;Loop again for next unit to train
		;Or no units to train

		(defrule
		(building-type-count castle > 0)
		(up-compare-goal g-next-unit-wanted != PENDING)
		(up-compare-goal i < 300)
		=>
		(up-modify-goal i c:+ 1)
		(up-jump-rule -22)
		)
	
	#end-if
	
	;end jump section

(defrule
(up-compare-goal g-num-units-wanted-slot-1 > 0)
(building-type-count castle > 0)
=>
(up-chat-data-to-self "Unique Units: %d" g: g-num-units-wanted-slot-1)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-2 > 0)
(building-type-count castle > 0)
=>
(up-chat-data-to-self "Trebs: %d" g: g-num-units-wanted-slot-2)
)

(defrule
(up-compare-goal g-num-units-wanted-slot-3 > 0)
(building-type-count castle > 0)
=>
(up-chat-data-to-self "Petards: %d" g: g-num-units-wanted-slot-3)
)



(defrule
(true)
=>
(up-modify-goal g-food-needed-soon c:max 0)
(up-modify-goal g-wood-needed-soon c:max 0)
(up-modify-goal g-gold-needed-soon c:max 0)
(up-modify-goal g-stone-needed-soon c:max 0)
(up-modify-goal g-food-to-save c:max 0)
(up-modify-goal g-wood-to-save c:max 0)
(up-modify-goal g-gold-to-save c:max 0)
(up-modify-goal g-stone-to-save c:max 0)
)

;====================<<<<<<<<<<ESCROW>>>>>>>>>>====================



;Reset escrow to unit's cost if escrow is lower than unit's cost

(defrule
(up-object-type-count-total g: g-constant-train-unit g:< g-desired-num-constant-train-unit)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost g: g-constant-train-unit c: 1)
(up-get-fact escrow-amount food g-temp-food-cost)
(up-get-fact escrow-amount wood g-temp-wood-cost)
(up-get-fact escrow-amount stone g-temp-stone-cost)
(up-get-fact escrow-amount gold g-temp-gold-cost)
)

(defrule
(up-object-type-count-total g: g-constant-train-unit g:< g-desired-num-constant-train-unit)
(up-compare-goal g-temp-food-cost g:< g-food-cost)		;food escrow less than unit cost
=>
(up-modify-escrow food g:= g-food-cost)
;(up-chat-data-to-self "Set Escrow: %d" g: g-food-cost)
)

(defrule
(up-object-type-count-total g: g-constant-train-unit g:< g-desired-num-constant-train-unit)
(up-compare-goal g-temp-wood-cost g:< g-wood-cost)		;wood escrow less than unit cost
=>
(up-modify-escrow wood g:= g-wood-cost)
;(up-chat-data-to-self "Set Escrow: %d" g: g-wood-cost)
)

(defrule
(up-object-type-count-total g: g-constant-train-unit g:< g-desired-num-constant-train-unit)
(up-compare-goal g-temp-stone-cost g:< g-stone-cost)	;stone escrow less than unit cost
=>
(up-modify-escrow stone g:= g-stone-cost)
;(up-chat-data-to-self "Set Escrow: %d" g: g-stone-cost)
)

(defrule
(up-object-type-count-total g: g-constant-train-unit g:< g-desired-num-constant-train-unit)
(up-compare-goal g-temp-gold-cost g:< g-gold-cost)		;gold escrow less than unit cost
=>
(up-modify-escrow gold g:= g-gold-cost)
;(up-chat-data-to-self "Set Escrow: %d" g: g-gold-cost)
)

(defrule
(true)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost g: g-constant-train-unit c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-food-needed c:max 0)	;in case max-food-needed = -1
(up-modify-goal g-max-wood-needed c:max 0)
(up-modify-goal g-max-gold-needed c:max 0)
(up-modify-goal g-max-stone-needed c:max 0)
)

(defrule
(timer-triggered t-30-sec)
=>
(up-chat-data-to-self "Food soon: %d" g: g-food-needed-soon)
(up-chat-data-to-self "Wood soon: %d" g: g-wood-needed-soon)
(up-chat-data-to-self "Gold soon: %d" g: g-gold-needed-soon)
(up-chat-data-to-self "Stone soon: %d" g: g-stone-needed-soon)
(up-chat-data-to-self "Max food: %d" g: g-max-food-needed)
(up-chat-data-to-self "Max wood: %d" g: g-max-wood-needed)
(up-chat-data-to-self "Max gold: %d" g: g-max-gold-needed)
(up-chat-data-to-self "Max stone: %d" g: g-max-stone-needed)
)