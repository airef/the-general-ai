;Technology Research.per

;========Setup Max Resources Needed

(defrule
(true)
=>
(up-reset-cost-data g-max-food-needed)
)

;====Town Center

(defrule
(building-available town-center)
(up-object-type-count-total c: town-center g:< g-desired-num-town-center)
=>
(up-modify-goal g-temp g:= g-desired-num-town-center)
(up-get-fact building-type-count-total town-center g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: town-center-foundation c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====House

(defrule
(building-available house)
(up-object-type-count-total c: house g:< g-desired-num-house)
=>
(up-modify-goal g-temp g:= g-desired-num-house)
(up-get-fact building-type-count-total house g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: house c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Mill

(defrule
(building-available mill)
(up-object-type-count-total c: mill g:< g-desired-num-mill)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: mill c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Mining Camp

(defrule
(building-available mining-camp)
(up-object-type-count-total c: mining-camp g:< g-desired-num-mining-camp)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: mining-camp c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Lumber Camp

(defrule
(building-available lumber-camp)
(up-object-type-count-total c: lumber-camp g:< g-desired-num-lumber-camp)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: lumber-camp c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Dock

(defrule
(building-available dock)
(up-object-type-count-total c: dock g:< g-desired-num-dock)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: dock c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Farm

;Add cost of new farms.
;Cost of replenishing old farms is added near the end of this file.

(defrule
(building-available farm)
(up-object-type-count-total c: farm g:< g-desired-num-farm)
=>
(up-modify-goal g-temp g:= g-desired-num-farm)
(up-get-fact building-type-count-total farm g-temp-2)
(up-modify-goal g-temp g:- g-temp-2)	;get number of desired building to be constructed
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: farm c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Blacksmith

(defrule
(building-available blacksmith)
(up-object-type-count-total c: blacksmith g:< g-desired-num-blacksmith)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: blacksmith c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Market

(defrule
(building-available market)
(up-object-type-count-total c: market g:< g-desired-num-market)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: market c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Monastery

(defrule
(building-available monastery)
(up-object-type-count-total c: monastery g:< g-desired-num-monastery)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: monastery c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====University

(defrule
(building-available university)
(up-object-type-count-total c: university g:< g-desired-num-university)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: university c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Wonder

(defrule
(building-available wonder)
(up-object-type-count-total c: wonder g:< g-desired-num-wonder)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: wonder c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Barracks

(defrule
(building-available barracks)
(up-object-type-count-total c: barracks g:< g-desired-num-barracks)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: barracks c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Archery Range

(defrule
(building-available archery-range)
(up-object-type-count-total c: archery-range g:< g-desired-num-archery-range)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: archery-range c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Stable

(defrule
(building-available stable)
(up-object-type-count-total c: stable g:< g-desired-num-stable)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: stable c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Siege Workshop

(defrule
(building-available siege-workshop)
(up-object-type-count-total c: siege-workshop g:< g-desired-num-siege-workshop)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: siege-workshop c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Watch Tower

(defrule
(current-age >= feudal-age)
(up-compare-goal g-watch-tower-line g:< g-desired-num-watch-tower)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: watch-tower c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Bombard Tower

(defrule
(building-available bombard-tower)
(up-object-type-count-total c: bombard-tower g:< g-desired-num-bombard-tower)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: bombard-tower c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Castle

(defrule
(building-available castle)
(up-object-type-count-total c: castle g:< g-desired-num-castle)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: castle c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Villagers

(defrule
(unit-available villager)
(up-object-type-count-total c: villager g:< g-desired-num-villager)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: villager c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Trade Carts

(defrule
(unit-available trade-cart)
(up-object-type-count-total c: trade-cart g:< g-desired-num-trade-cart)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: trade-cart c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Monks

(defrule
(unit-available monk)
(up-object-type-count-total c: monk-set g:< g-desired-num-monk)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: monk c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Missionary

(defrule
(unit-available missionary)
(up-object-type-count-total c: missionary g:< g-desired-num-missionary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: missionary c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Militia

(defrule
(unit-available militiaman-line)
(up-object-type-count-total c: militiaman-line g:< g-desired-num-militia)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: militiaman c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Spearmen

(defrule
(unit-available spearman-line)
(up-object-type-count-total c: spearman-line g:< g-desired-num-spearman)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: spearman c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Eagle Warriors

(defrule
(unit-available eagle-warrior)
(up-compare-goal g-eagle-scout-line g:< g-desired-num-eagle-warrior)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: eagle-warrior c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Condottieros

(defrule
(unit-available condottiero)
(up-object-type-count-total c: condottiero g:< g-desired-num-condottiero)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: condottiero c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Archers

(defrule
(unit-available archer-line)
(up-object-type-count-total c: archer-line g:< g-desired-num-archer)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: archer c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Skirmishers

(defrule
(unit-available skirmisher-line)
(up-compare-goal g-skirmisher-line g:< g-desired-num-skirmisher)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: skirmisher c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Cavalry Archers

(defrule
(unit-available cavalry-archer-line)
(up-object-type-count-total c: cavalry-archer-line g:< g-desired-num-cavalry-archer)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: cavalry-archer c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Hand Cannoneers

(defrule
(unit-available hand-cannoneer)
(up-object-type-count-total c: hand-cannoneer g:< g-desired-num-hand-cannoneer)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: hand-cannoneer c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Slingers

(defrule
(unit-available slinger)
(up-object-type-count-total c: slinger g:< g-desired-num-slinger)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: slinger c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Genitours

(defrule
(unit-available genitour)
(up-compare-goal g-genitour-line g:< g-desired-num-genitour)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: genitour c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Scout Cavalry

(defrule
(unit-available scout-cavalry-line)
(up-object-type-count-total c: scout-cavalry-line g:< g-desired-num-scout-cavalry)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: scout-cavalry c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Knights

(defrule
(unit-available knight-line)
(up-object-type-count-total c: knight-line g:< g-desired-num-knight)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: knight c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Camels

(defrule
(unit-available camel)
(up-compare-goal g-camel-line g:< g-desired-num-camel)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: camel c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Battle Elephants

(defrule
(unit-available battle-elephant)
(up-compare-goal g-battle-elephant-line g:< g-desired-num-battle-elephant)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: battle-elephant c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Battering Rams

(defrule
(unit-available battering-ram-line)
(up-object-type-count-total c: battering-ram-line g:< g-desired-num-battering-ram)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: battering-ram c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Mangonels

(defrule
(unit-available mangonel)
(up-compare-goal g-mangonel-line g:< g-desired-num-mangonel)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: mangonel c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Scorpions

(defrule
(unit-available scorpion-line)
(up-object-type-count-total c: scorpion-line g:< g-desired-num-scorpion)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: scorpion c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Bombard Cannons

(defrule
(unit-available bombard-cannon)
(up-object-type-count-total c: bombard-cannon g:< g-desired-num-bombard-cannon)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: bombard-cannon c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Unique Units

(defrule
(unit-available my-unique-unit)
(up-compare-goal g-unique-unit-line g:< g-desired-num-unique-unit)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: my-unique-unit c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Trebuchets

(defrule
(unit-available trebuchet)
(up-object-type-count-total c: trebuchet-set g:< g-desired-num-trebuchet)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: trebuchet c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Petards

(defrule
(unit-available petard)
(up-object-type-count-total c: petard g:< g-desired-num-petard)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: petard c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Fishing Ships

(defrule
(unit-available fishing-ship)
(up-object-type-count-total c: fishing-ship g:< g-desired-num-fishing-ship)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: fishing-ship c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Transport Ships

(defrule
(unit-available transport-ship)
(up-object-type-count-total c: transport-ship g:< g-desired-num-transport-ship)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: transport-ship c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Trade Cogs

(defrule
(unit-available trade-cog)
(up-object-type-count-total c: trade-cog g:< g-desired-num-trade-cog)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: trade-cog c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Galleys

(defrule
(unit-available galley-line)
(up-object-type-count-total c: galley-line g:< g-desired-num-galley)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: galley c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Fire Ships

(defrule
(unit-available fire-ship)
(up-compare-goal g-fire-galley-line g:< g-desired-num-fire-ship)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: fire-ship c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Demolition Ships

(defrule
(unit-available demolition-ship)
(up-compare-goal g-demolition-raft-line g:< g-desired-num-demolition-ship)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: demolition-ship c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Cannon Galleons

(defrule
(unit-available cannon-galleon-line)
(up-object-type-count-total c: cannon-galleon-line g:< g-desired-num-cannon-galleon)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-object-cost c: cannon-galleon c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;====Unique Ships

#load-if-defined KOREAN-CIV

	(defrule
	(unit-available turtle-ship-line)
	(up-compare-goal g-unique-ship-line g:< g-desired-num-unique-ship)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: turtle-ship c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)
	
#end-if

#load-if-defined PORTUGUESE-CIV

	(defrule
	(unit-available caravel)
	(up-compare-goal g-unique-ship-line g:< g-desired-num-unique-ship)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: caravel c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)
	
#end-if

#load-if-defined VIKING-CIV

	(defrule
	(unit-available longboat-line)
	(up-compare-goal g-unique-ship-line g:< g-desired-num-unique-ship)
	=>
	(up-setup-cost-data 1 g-food-cost)
	(up-add-object-cost c: longboat c: 1)
	(up-modify-goal g-max-food-needed g:max g-food-cost)
	(up-modify-goal g-max-wood-needed g:max g-wood-cost)
	(up-modify-goal g-max-stone-needed g:max g-stone-cost)
	(up-modify-goal g-max-gold-needed g:max g-gold-cost)
	)
	
#end-if

;================<<<<<<<<EMERGENCY TECHS - RESEARCHES>>>>>>>>================

(defrule
(up-compare-goal g-highest-tech-priority == gv-emergency)
=>
(set-goal g-use-escrow without-escrow)
)

(defrule
(up-compare-goal g-highest-tech-priority == gv-emergency)
(goal g-town-under-attack NO)
=>
(set-goal g-use-escrow with-escrow)
)

(defrule
(goal g-town-center-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-town-center-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-stable-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-barracks-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-castle-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-dock-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-mill-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-university-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-market-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-monastery-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-emergency)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-emergency)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

;================<<<<<<<<EMERGENCY TECHS - MAX NEEDED RESOURCES>>>>>>>>================

(defrule
(goal g-town-center-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-emergency)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)



;================<<<<<<<<PRIMARY TECHS - RESEARCHES>>>>>>>>================

(defrule
(up-compare-goal g-highest-tech-priority == gv-primary)
=>
(set-goal g-use-escrow without-escrow)
)

(defrule
(up-compare-goal g-highest-tech-priority == gv-primary)
(goal g-town-under-attack NO)
=>
(set-goal g-use-escrow with-escrow)
)

(defrule
(goal g-town-center-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-town-center-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-stable-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-barracks-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-castle-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-dock-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-mill-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-university-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-market-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-monastery-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-primary)
(up-compare-goal g-highest-tech-priority <= gv-primary)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

;================<<<<<<<<PRIMARY TECHS - MAX NEEDED RESOURCES>>>>>>>>================

(defrule
(goal g-town-center-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-primary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)



;================<<<<<<<<SECONDARY TECHS - RESEARCHES>>>>>>>>================

(defrule
(up-compare-goal g-highest-tech-priority == gv-secondary)
=>
(set-goal g-use-escrow without-escrow)
)

(defrule
(false)
(up-compare-goal g-highest-tech-priority == gv-secondary)
(goal g-town-under-attack NO)
=>
(set-goal g-use-escrow with-escrow)
)

(defrule
(goal g-town-center-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-town-center-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-town-center-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-town-center-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-town-center-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-stable-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-stable-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-stable-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-stable-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-archery-range-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-barracks-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-barracks-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-barracks-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-barracks-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-castle-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-castle-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-castle-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-castle-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-dock-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-dock-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-dock-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-dock-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-lumber-camp-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-blacksmith-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-siege-workshop-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-mill-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-mill-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mill-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-mill-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-university-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-university-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-university-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-university-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-market-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-market-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-market-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-market-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-monastery-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-monastery-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-monastery-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-monastery-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(goal g-use-escrow with-escrow)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-escrow food g:max g-food-cost)
(up-modify-escrow wood g:max g-wood-cost)
(up-modify-escrow stone g:max g-stone-cost)
(up-modify-escrow gold g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority <= gv-secondary)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mining-camp-tech-priority gv-secondary)
(up-compare-goal g-highest-tech-priority >= gv-primary)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-release-escrow)
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

;================<<<<<<<<SECONDARY TECHS - MAX NEEDED RESOURCES>>>>>>>>================

(defrule
(goal g-town-center-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-secondary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)



;================<<<<<<<<TERTIARY TECHS - RESEARCHES>>>>>>>>================

(defrule
(up-compare-goal g-highest-tech-priority == gv-tertiary)
=>
(set-goal g-use-escrow without-escrow)
)

(defrule
(false)
(up-compare-goal g-highest-tech-priority == gv-tertiary)
(goal g-town-under-attack NO)
=>
(set-goal g-use-escrow with-escrow)
)

(defrule
(goal g-town-center-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-town-center-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-town-center-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-town-center-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-stable-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-stable-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-stable-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-stable-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-archery-range-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-barracks-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-barracks-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-barracks-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-barracks-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-castle-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-castle-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-castle-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-castle-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-dock-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-dock-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-dock-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-dock-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-lumber-camp-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-blacksmith-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-siege-workshop-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-mill-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-mill-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mill-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-mill-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-university-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-university-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-university-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-university-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-market-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-market-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-market-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-market-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-monastery-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-monastery-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-monastery-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-monastery-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority <= gv-tertiary)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mining-camp-tech-priority gv-tertiary)
(up-compare-goal g-highest-tech-priority >= gv-secondary)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

;================<<<<<<<<TERTIARY TECHS - MAX NEEDED RESOURCES>>>>>>>>================

(defrule
(goal g-town-center-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-tertiary)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)



;================<<<<<<<<LOW PRIORITY TECHS - RESEARCHES>>>>>>>>================

(defrule
(up-compare-goal g-highest-tech-priority == gv-low)
=>
(set-goal g-use-escrow without-escrow)
)

(defrule
(false)
(up-compare-goal g-highest-tech-priority == gv-low)
(goal g-town-under-attack NO)
=>
(set-goal g-use-escrow with-escrow)
)

(defrule
(goal g-town-center-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-town-center-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-town-center-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-town-center-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-stable-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-stable-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-stable-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-stable-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-archery-range-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-barracks-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-barracks-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-barracks-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-barracks-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-castle-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-castle-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-castle-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-castle-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-dock-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-dock-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-dock-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-dock-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-lumber-camp-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-blacksmith-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-siege-workshop-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-mill-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-mill-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mill-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-mill-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-university-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-university-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-university-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-university-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-market-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-market-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-market-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-market-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-monastery-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-monastery-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-monastery-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-monastery-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority <= gv-low)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mining-camp-tech-priority gv-low)
(up-compare-goal g-highest-tech-priority >= gv-tertiary)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

;================<<<<<<<<LOW PRIORITY TECHS - MAX NEEDED RESOURCES>>>>>>>>================

(defrule
(goal g-town-center-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-low)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)



;================<<<<<<<<EXCESS ONLY TECHS - RESEARCHES>>>>>>>>================

(defrule
(up-compare-goal g-highest-tech-priority == gv-excess-only)
=>
(set-goal g-use-escrow without-escrow)
)

(defrule
(goal g-town-center-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-town-center-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-town-center-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-town-center-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-stable-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-stable-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-stable-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-stable-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-archery-range-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-barracks-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-barracks-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-barracks-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-barracks-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-castle-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-castle-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-castle-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-castle-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-dock-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-dock-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-dock-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-dock-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-lumber-camp-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-blacksmith-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-siege-workshop-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-mill-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-mill-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mill-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-mill-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-university-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-university-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-university-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-university-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-market-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-market-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-market-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-market-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-monastery-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-monastery-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-monastery-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-monastery-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-excess-only)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mining-camp-tech-priority gv-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-low)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

;================<<<<<<<<EXCESS ONLY TECHS - MAX NEEDED RESOURCES>>>>>>>>================

(defrule
(goal g-town-center-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

;================<<<<<<<<HIGH EXCESS ONLY TECHS - RESEARCHES>>>>>>>>================

(defrule
(up-compare-goal g-highest-tech-priority == gv-high-excess-only)
=>
(set-goal g-use-escrow without-escrow)
)

(defrule
(goal g-town-center-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-town-center-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-town-center-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-town-center-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-town-center-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-town-center-tech)
)

(defrule
(goal g-stable-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-stable-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-stable-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-stable-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-stable-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-stable-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-archery-range-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-archery-range-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-archery-range-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-archery-range-tech)
)

(defrule
(goal g-barracks-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-barracks-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-barracks-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-barracks-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-barracks-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-barracks-tech)
)

(defrule
(goal g-castle-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-castle-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-castle-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-castle-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-castle-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-castle-tech)
)

(defrule
(goal g-dock-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-dock-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-dock-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-dock-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-dock-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-dock-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-lumber-camp-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-lumber-camp-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-lumber-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-lumber-camp-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-blacksmith-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-blacksmith-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-blacksmith-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-blacksmith-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-siege-workshop-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-siege-workshop-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-siege-workshop-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-siege-workshop-tech)
)

(defrule
(goal g-mill-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-mill-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-mill-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mill-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-mill-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-mill-tech)
)

(defrule
(goal g-university-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-university-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-university-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-university-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-university-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-university-tech)
)

(defrule
(goal g-market-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-market-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-market-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-market-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-market-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-market-tech)
)

(defrule
(goal g-monastery-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-monastery-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-monastery-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-monastery-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-monastery-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-monastery-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority <= gv-high-excess-only)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

(defrule
(goal g-mining-camp-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-get-cost-delta g-food-delta)
)

(defrule
(goal g-mining-camp-tech-priority gv-high-excess-only)
(up-compare-goal g-highest-tech-priority >= gv-excess-only)
(up-can-research g-use-escrow g: g-next-mining-camp-tech)
(up-compare-goal g-food-delta >= 0)
(up-compare-goal g-wood-delta >= 0)
(up-compare-goal g-stone-delta >= 0)
(up-compare-goal g-gold-delta >= 0)
=>
(up-research g-use-escrow g: g-next-mining-camp-tech)
)

;================<<<<<<<<HIGH EXCESS TECHS - MAX NEEDED RESOURCES>>>>>>>>================

(defrule
(goal g-town-center-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-town-center-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mill-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mill-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-mining-camp-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-mining-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-lumber-camp-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-lumber-camp-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-dock-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-dock-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-blacksmith-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-blacksmith-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-market-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-market-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-monastery-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-monastery-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-university-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-university-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-barracks-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-barracks-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-archery-range-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-archery-range-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-stable-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-stable-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-siege-workshop-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-siege-workshop-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

(defrule
(goal g-castle-tech-priority gv-high-excess-only)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-research-cost g: g-next-castle-tech c: 1)
(up-modify-goal g-max-food-needed g:max g-food-cost)
(up-modify-goal g-max-wood-needed g:max g-wood-cost)
(up-modify-goal g-max-stone-needed g:max g-stone-cost)
(up-modify-goal g-max-gold-needed g:max g-gold-cost)
)

#load-if-defined NOT-NEEDED-ANYMORE

	(defrule
	(escrow-amount food > 0)
	=>
	(up-get-fact escrow-amount food g-temp)
	(up-chat-data-to-self "Food Escrow: %d" g: g-temp)
	)

	(defrule
	(escrow-amount wood > 0)
	=>
	(up-get-fact escrow-amount wood g-temp)
	(up-chat-data-to-self "Wood Escrow: %d" g: g-temp)
	)

	(defrule
	(escrow-amount gold > 0)
	=>
	(up-get-fact escrow-amount gold g-temp)
	(up-chat-data-to-self "Gold Escrow: %d" g: g-temp)
	)

	(defrule
	(escrow-amount stone > 0)
	=>
	(up-get-fact escrow-amount stone g-temp)
	(up-chat-data-to-self "Stone Escrow: %d" g: g-temp)
	)
	
#end-if

;================<<<<<<<<EXCESS RESOURCE TRADING>>>>>>>>================

;Sell excess food

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
=>
(up-get-fact gold-amount 0 g-temp)
(up-get-fact food-amount 0 g-temp-2)
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-gold-needed)
(up-compare-goal g-temp-2 g:> g-max-food-needed)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-modify-goal g-food-cost c:+ 100)
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-gold-needed)
(up-compare-goal g-temp-2 g:> g-max-food-needed)
(up-compare-goal g-temp-2 g:>= g-food-cost)	;food available > (max-needed-food + food sell price)
(can-sell-commodity food)
=>
(sell-commodity food)
(chat-local-to-self "sell excess food to reach needed gold amount")
(up-chat-data-to-self "Stone amount: %d" g: g-temp-2)
(up-chat-data-to-self "Max food: %d" g: g-max-food-needed)
(up-chat-data-to-self "Total food: %d" g: g-food-cost)
)

;Sell excess wood

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
=>
(up-get-fact gold-amount 0 g-temp)
(up-get-fact wood-amount 0 g-temp-2)
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-gold-needed)
(up-compare-goal g-temp-2 g:> g-max-wood-needed)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-modify-goal g-wood-cost c:+ 100)
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-gold-needed)
(up-compare-goal g-temp-2 g:> g-max-wood-needed)
(up-compare-goal g-temp-2 g:>= g-wood-cost)	;wood available > (max-needed-wood + wood sell price)
(can-sell-commodity wood)
=>
(sell-commodity wood)
(chat-local-to-self "sell excess wood to reach needed gold amount")
(up-chat-data-to-self "Wood amount: %d" g: g-temp-2)
(up-chat-data-to-self "Max wood: %d" g: g-max-wood-needed)
(up-chat-data-to-self "Total wood: %d" g: g-wood-cost)
)

;Sell excess stone

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
=>
(up-get-fact gold-amount 0 g-temp)
(up-get-fact stone-amount 0 g-temp-2)
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-gold-needed)
(up-compare-goal g-temp-2 g:> g-max-stone-needed)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-modify-goal g-stone-cost c:+ 100)
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-gold-needed)
(up-compare-goal g-temp-2 g:> g-max-stone-needed)
(up-compare-goal g-temp-2 g:>= g-stone-cost)	;stone available > (max-needed-stone + stone sell price)
(can-sell-commodity stone)
=>
(sell-commodity stone)
(chat-local-to-self "sell excess stone to reach needed gold amount")
(up-chat-data-to-self "Stone amount: %d" g: g-temp-2)
(up-chat-data-to-self "Max stone: %d" g: g-max-stone-needed)
(up-chat-data-to-self "Total stone: %d" g: g-stone-cost)
)

;Buy needed food

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
=>
(up-get-fact food-amount 0 g-temp)
(up-get-fact gold-amount 0 g-temp-2)
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-food-needed)
(up-compare-goal g-temp-2 g:> g-max-gold-needed)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-get-fact commodity-buying-price food g-temp)
(up-modify-goal g-gold-cost g:+ g-temp)	;add food buy price to max gold needed
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-food-needed)
(up-compare-goal g-temp-2 g:> g-max-gold-needed)
(up-compare-goal g-temp-2 g:>= g-gold-cost)	;gold available > (max-needed-gold + food buy price)
(can-buy-commodity food)
=>
(buy-commodity food)
(chat-local-to-self "buy needed food from excess gold")
(up-chat-data-to-self "Gold amount: %d" g: g-temp-2)
(up-chat-data-to-self "Max gold: %d" g: g-max-gold-needed)
(up-chat-data-to-self "Trade price: %d" g: g-temp)
)

;Buy needed wood

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
=>
(up-get-fact wood-amount 0 g-temp)
(up-get-fact gold-amount 0 g-temp-2)
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-wood-needed)
(up-compare-goal g-temp-2 g:> g-max-gold-needed)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-get-fact commodity-buying-price wood g-temp)
(up-modify-goal g-gold-cost g:+ g-temp)	;add wood buy price to max gold needed
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-wood-needed)
(up-compare-goal g-temp-2 g:> g-max-gold-needed)
(up-compare-goal g-temp-2 g:>= g-gold-cost)	;gold available > (max-needed-gold + wood buy price)
(can-buy-commodity wood)
=>
(buy-commodity wood)
(chat-local-to-self "buy needed wood from excess gold")
(up-chat-data-to-self "Gold amount: %d" g: g-temp-2)
(up-chat-data-to-self "Max gold: %d" g: g-max-gold-needed)
(up-chat-data-to-self "Trade price: %d" g: g-temp)
)

;Buy needed stone

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
=>
(up-get-fact stone-amount 0 g-temp)
(up-get-fact gold-amount 0 g-temp-2)
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-stone-needed)
(up-compare-goal g-temp-2 g:> g-max-gold-needed)
=>
(up-setup-cost-data 1 g-food-cost)
(up-add-cost-data g-max-food-needed c: 1)
(up-get-fact commodity-buying-price stone g-temp)
(up-modify-goal g-gold-cost g:+ g-temp)	;add food buy price to max gold needed
)

(defrule
(up-compare-goal g-highest-tech-priority >= gv-low)
(building-type-count market > 0)
(up-compare-goal g-temp g:< g-max-stone-needed)
(up-compare-goal g-temp-2 g:> g-max-gold-needed)
(up-compare-goal g-temp-2 g:>= g-stone-cost)	;gold available > (max-needed-gold + stone buy price)
(can-buy-commodity stone)
=>
(buy-commodity stone)
(chat-local-to-self "buy needed stone from excess gold")
(up-chat-data-to-self "Gold amount: %d" g: g-temp-2)
(up-chat-data-to-self "Max gold: %d" g: g-max-gold-needed)
(up-chat-data-to-self "Trade price: %d" g: g-temp)
)