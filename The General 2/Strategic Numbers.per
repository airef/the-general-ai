;Strategic Numbers.per

;====SN-SAFE-TOWN-SIZE and SN-MAXIMUM-TOWN-SIZE

(defrule
(up-compare-sn sn-safe-town-size < 10)
=>
(up-modify-sn sn-safe-town-size c:= 10)
(up-modify-sn sn-maximum-town-size s:max sn-safe-town-size)
)

(defrule
(current-age >= feudal-age)
(up-compare-sn sn-safe-town-size < 14)
(goal g-enemy-buildings-in-town 0)
=>
(up-modify-sn sn-safe-town-size c:= 14)
(up-modify-sn sn-maximum-town-size s:max sn-safe-town-size)
)

(defrule
(population > 40)
(up-compare-sn sn-safe-town-size < 18)
(goal g-enemy-buildings-in-town 0)
=>
(up-modify-sn sn-safe-town-size c:= 18)
(up-modify-sn sn-maximum-town-size s:max sn-safe-town-size)
)

(defrule
(population > 50)
(up-compare-sn sn-safe-town-size < 24)
(goal g-enemy-buildings-in-town 0)
=>
(up-modify-sn sn-safe-town-size c:= 24)
(up-modify-sn sn-maximum-town-size s:max sn-safe-town-size)
)

(defrule
(population > 100)
(goal g-enemy-buildings-in-town 0)
(up-compare-sn sn-safe-town-size < 40)
=>
(up-modify-sn sn-safe-town-size c:= 40)
(up-modify-sn sn-maximum-town-size s:max sn-safe-town-size)
)



;====SN-CAMP-MAX-DISTANCE

(defrule
(up-compare-goal g-min-forest-distance > PENDING)
(building-type-count-total lumber-camp == 0)
=>
(up-modify-sn sn-lumber-camp-max-distance g:= g-min-forest-distance)
)

(defrule
(building-type-count-total lumber-camp > 0)
=>
(up-modify-sn sn-lumber-camp-max-distance c:+ 12)
(disable-self)
)

(defrule
(strategic-number sn-mining-camp-max-distance < 30)
(building-type-count-total mining-camp > 1)
=>
(up-modify-sn sn-mining-camp-max-distance c:= 30)
)

(defrule
(up-compare-sn sn-mining-camp-max-distance g:< g-map-size-ts)
(or
	(population > 125)
	(and
		(current-age >= castle-age)
		(dropsite-min-distance gold > 5)))
(game-time > 1800)
=>
(up-modify-sn sn-lumber-camp-max-distance g:= g-map-size-ts)
(up-modify-sn sn-mining-camp-max-distance g:= g-map-size-ts)
)

(defrule
(strategic-number sn-mining-camp-max-distance < 70)
(or
	(population > 100)
	(and
		(current-age >= castle-age)
		(dropsite-min-distance gold > 5)))
=>
(up-modify-sn sn-lumber-camp-max-distance c:= 70)
(up-modify-sn sn-mining-camp-max-distance c:= 70)
)

;(defrule
;(up-timer-status t-10-sec == timer-triggered)
;(goal g-check-drop-distance PENDING)
;=>
;(up-get-fact dropsite-min-distance wood g-temp)
;(set-goal g-check-drop-distance wood)
;)

;(defrule
;(military-population > 40)
;(up-compare-goal g-temp s:> sn-lumber-camp-max-distance)
;(up-compare-goal g-temp g:< g-map-size-ts)
;(goal g-check-drop-distance wood)
;=>
;(up-modify-sn sn-lumber-camp-max-distance g:= g-temp)
;(up-modify-sn sn-lumber-camp-max-distance c:+ 5)
;(up-chat-data-to-self "Increase wood camp size to %d" s: sn-lumber-camp-max-distance)
;)

;(defrule
;(up-timer-status t-10-sec == timer-triggered)
;(goal g-check-drop-distance wood)
;=>
;(up-get-fact dropsite-min-distance gold g-temp)
;(set-goal g-check-drop-distance gold)
;)

;(defrule
;(military-population > 40)
;(up-compare-goal g-temp s:> sn-mining-camp-max-distance)
;(up-compare-goal g-temp g:< g-map-size-ts)
;(goal g-check-drop-distance gold)
;=>
;(up-modify-sn sn-mining-camp-max-distance g:= g-temp)
;(up-modify-sn sn-mining-camp-max-distance c:+ 5)
;(up-chat-data-to-self "Increase gold camp size to %d" s: sn-mining-camp-max-distance)
;)

;(defrule
;(up-timer-status t-10-sec == timer-triggered)
;(goal g-check-drop-distance gold)
;=>
;(up-get-fact dropsite-min-distance stone g-temp)
;(set-goal g-check-drop-distance stone)
;)

;(defrule
;(military-population > 40)
;(up-compare-goal g-temp s:> sn-mining-camp-max-distance)
;(up-compare-goal g-temp g:< g-map-size-ts)
;(goal g-check-drop-distance stone)
;=>
;(up-modify-sn sn-mining-camp-max-distance g:= g-temp)
;(up-modify-sn sn-mining-camp-max-distance c:+ 5)
;(up-chat-data-to-self "Increase stone camp size to %d" s: sn-mining-camp-max-distance)
;)



;====SN-RETASK-GATHER-AMOUNT

;(defrule
;(up-compare-goal g-boar-hunt-status == -1)
;=>
;(up-modify-sn sn-retask-gather-amount c:= 0)
;(up-modify-sn sn-max-retask-gather-amount c:= 0)
;)

;(defrule
;(up-compare-goal g-boar-hunt-status != -1)
;=>
;(up-modify-sn sn-retask-gather-amount c:= 100)
;(up-modify-sn sn-max-retask-gather-amount c:= 100)
;)



;====EXPLORING SNS

(defrule
(game-time == 0)
(building-type-count-total town-center > 0)
(or
	(cc-players-unit-type-count 0 livestock-class > 0)
	(cc-players-unit-type-count 0 forage-class > 0))
(unit-type-count-total livestock-class == 0)
(up-gaia-type-count c: forage-class == 0)
(strategic-number sn-percent-civilian-explorers < 100)
(unit-type-count villager-builder == 0)
=>
(set-strategic-number sn-percent-civilian-explorers 100)
(set-strategic-number sn-cap-civilian-explorers 5)
(set-strategic-number sn-total-number-explorers 6)
(chat-local-to-self "explore for food")
)

(defrule
(game-time > 90)
(game-time < 100)
(building-type-count-total town-center > 0)
(cc-players-unit-type-count 0 livestock-class > 0)
(unit-type-count-total livestock-class == 0)
(strategic-number sn-percent-civilian-explorers < 51)
=>
(set-strategic-number sn-percent-civilian-explorers 51)
(set-strategic-number sn-cap-civilian-explorers 2)
(set-strategic-number sn-total-number-explorers 4)
(chat-local-to-self "explore for livestock")
)

(defrule
(game-time > 90)
(game-time < 100)
(building-type-count-total town-center > 0)
(cc-players-unit-type-count 0 forage-class > 0)
(up-gaia-type-count c: forage-class == 0)
(building-type-count-total mill == 0)
(strategic-number sn-percent-civilian-explorers < 50)
=>
(set-strategic-number sn-percent-civilian-explorers 50)
(set-strategic-number sn-cap-civilian-explorers 2)
(set-strategic-number sn-total-number-explorers 4)
(chat-local-to-self "explore for forage")
)

(defrule
(game-time > 0)
(building-type-count-total town-center > 0)
(or
	(unit-type-count-total livestock-class > 0)
	(up-gaia-type-count c: forage-class > 0))
(strategic-number sn-percent-civilian-explorers == 100)
=>
(set-strategic-number sn-percent-civilian-explorers 0)
(set-strategic-number sn-percent-civilian-gatherers 100)
(set-strategic-number sn-cap-civilian-explorers 0)
(set-strategic-number sn-total-number-explorers 1)
(set-strategic-number sn-number-explore-groups 1)
(chat-local-to-self "found food")
)

(defrule
(game-time > 90)
(building-type-count-total town-center > 0)
(unit-type-count-total livestock-class > 0)
(strategic-number sn-percent-civilian-explorers == 51)
=>
(set-strategic-number sn-percent-civilian-explorers 0)
(set-strategic-number sn-percent-civilian-gatherers 100)
(set-strategic-number sn-cap-civilian-explorers 0)
(set-strategic-number sn-total-number-explorers 1)
(chat-local-to-self "found livestock")
)

(defrule
(game-time > 90)
(building-type-count-total town-center > 0)
(up-gaia-type-count c: forage-class > 0)
(strategic-number sn-percent-civilian-explorers == 50)
=>
(set-strategic-number sn-percent-civilian-explorers 0)
(set-strategic-number sn-percent-civilian-gatherers 100)
(set-strategic-number sn-cap-civilian-explorers 0)
(set-strategic-number sn-total-number-explorers 1)
(chat-local-to-self "found forage")
)

; (defrule
; (game-time > 240)
; (game-time < 270)
; (up-compare-goal g-boar-found < gv-all-boar-found)
; (goal g-boar-hunt-status -1)
; (strategic-number sn-percent-civilian-explorers < 49)
; =>
; (set-strategic-number sn-percent-civilian-explorers 49)
; (set-strategic-number sn-cap-civilian-explorers 3)
; (set-strategic-number sn-total-number-explorers 4)
; (chat-local-to-self "search for boar")
; )

; (defrule
; (up-compare-goal g-boar-found >= gv-all-boar-found)
; (strategic-number sn-percent-civilian-explorers == 49)
; =>
; (set-strategic-number sn-percent-civilian-explorers 0)
; (set-strategic-number sn-percent-civilian-gatherers 100)
; (set-strategic-number sn-cap-civilian-explorers 0)
; (set-strategic-number sn-total-number-explorers 1)
; (chat-local-to-self "found boar")
; )

(defrule
(game-time > 100)
(strategic-number sn-percent-civilian-explorers > 0)
=>
(set-strategic-number sn-percent-civilian-explorers 0)
(set-strategic-number sn-percent-civilian-gatherers 100)
(set-strategic-number sn-cap-civilian-explorers 0)
(set-strategic-number sn-total-number-explorers 1)
(chat-local-to-self "stop civilian explorers")
)

;Don't scout when town under attack

(defrule
(goal g-town-under-attack YES)
(strategic-number sn-number-explore-groups > 0)
=>
(set-strategic-number sn-number-explore-groups 0)
(set-strategic-number sn-total-number-explorers 0)
(set-strategic-number sn-cap-civilian-explorers 0)
(up-reset-scouts)
)

(defrule
(goal g-town-under-attack NO)
(strategic-number sn-number-explore-groups == 0)
=>
(set-strategic-number sn-number-explore-groups 1)
(set-strategic-number sn-total-number-explorers 1)
)

;Send-Scout

(defrule
(up-research-status c: castle-age == research-pending)
(up-compare-goal g-attack-status <= gv-first-attack)
=>
(up-send-scout group-type-land-explore scout-flank)
(disable-self)
)

;Offensive Priorities

;Defensive Priorities

(defrule
(goal g-attacking YES)
(or
	(military-population < 20)
	(up-compare-goal g-siege-class == 0))
=>
(up-set-defense-priority c: lumber-camp c: 1000)
(up-set-defense-priority c: mining-camp c: 1000)
(up-set-defense-priority c: mill c: 500)
(up-set-defense-priority c: town-center c: 50)
(up-set-defense-priority c: watch-tower c: 20)
(up-set-defense-priority c: guard-tower c: 20)
(up-set-defense-priority c: keep c: 20)
(up-set-defense-priority c: bombard-tower c: 10)
(up-set-defense-priority c: castle c: -1)
)

(defrule
(goal g-attacking YES)
(military-population >= 20)
(up-compare-goal g-siege-class > 0)
=>
(up-set-defense-priority c: lumber-camp c: 500)
(up-set-defense-priority c: mining-camp c: 500)
(up-set-defense-priority c: mill c: 250)
(up-set-defense-priority c: town-center c: 1000)
(up-set-defense-priority c: watch-tower c: 1000)
(up-set-defense-priority c: guard-tower c: 1000)
(up-set-defense-priority c: keep c: 1000)
(up-set-defense-priority c: bombard-tower c: 1000)
(up-set-defense-priority c: castle c: 1500)
)

(defrule
(goal g-attacking YES)
(up-compare-goal g-total-superiority > 10)
(up-compare-goal g-siege-class > 0)
=>
(up-set-defense-priority c: lumber-camp c: 50)
(up-set-defense-priority c: mining-camp c: 50)
(up-set-defense-priority c: mill c: 250)
(up-set-defense-priority c: town-center c: 3000)
(up-set-defense-priority c: watch-tower c: 1000)
(up-set-defense-priority c: guard-tower c: 1000)
(up-set-defense-priority c: keep c: 1000)
(up-set-defense-priority c: bombard-tower c: 1000)
(up-set-defense-priority c: castle c: 1500)
)

(defrule
(goal g-attacking NO)
(up-compare-goal g-siege-class == 0)
=>
(up-set-defense-priority c: lumber-camp c: 50)
(up-set-defense-priority c: mining-camp c: 50)
(up-set-defense-priority c: mill c: 50)
(up-set-defense-priority c: town-center c: 2000)
(up-set-defense-priority c: watch-tower c: 1500)
(up-set-defense-priority c: guard-tower c: 1500)
(up-set-defense-priority c: keep c: 1500)
(up-set-defense-priority c: bombard-tower c: 1000)
(up-set-defense-priority c: castle c: -1)
)

(defrule
(goal g-attacking NO)
(up-compare-goal g-siege-class > 0)
=>
(up-set-defense-priority c: lumber-camp c: 50)
(up-set-defense-priority c: mining-camp c: 50)
(up-set-defense-priority c: mill c: 50)
(up-set-defense-priority c: town-center c: 2000)
(up-set-defense-priority c: watch-tower c: 2000)
(up-set-defense-priority c: guard-tower c: 2000)
(up-set-defense-priority c: keep c: 2000)
(up-set-defense-priority c: bombard-tower c: 3000)
(up-set-defense-priority c: castle c: 5000)
)

;====SN-HOME-EXPLORATION-TIME

(defrule
(strategic-number sn-home-exploration-time > 0)
(goal g-boar-found gv-all-boar-found)
(up-gaia-type-count c: wood > 0)
(up-gaia-type-count c: forage-class > 0)
(up-gaia-type-count c: gold > 0)
(up-gaia-type-count c: stone > 0)
=>
(set-strategic-number sn-home-exploration-time 240)
)