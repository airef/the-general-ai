;Resign rules

#load-if-not-defined UP-ALLY-IN-GAME

	(load "The General 3/Functions/Reset")

	;Resign if we have < 40% of the enemy pop
	(defrule
	(goal g-resign NO)
	(game-time > 600)
	(population < TWENTY-FIVE-PERCENT-POP)
	(players-population any-enemy >= TWENTY-FIVE-PERCENT-POP)
	(up-get-fact population 0 g-temp)	;Example, say we have 30 pop. We have < 40% of enemy pop if enemy has > 75 pop.
	(up-modify-goal g-temp c:%* -150)	;Multiply 30 * 1.5 = 45. This equals the min pop difference required to resign (75 minus 30).
	(up-compare-goal g-top-enemy-pop-parity g:< g-temp)
	=>
	(set-goal g-resign DECIDE-TO-RESIGN)
	)

	; ;Impossible to get more villagers, resign.
	; (defrule
	; (unit-type-count-total villager == 0)
	; (or
	; 	(not
	; 		(can-afford-unit villager))
	; 	(building-type-count-total town-center == 0))
	; ;(building-type-count-total market == 0)
	; (goal g-resign NO)
	; =>
	; (set-goal g-resign DECIDE-TO-RESIGN)
	; )
	
	; ;Impossible to develop if wood can't be gathered
	; (defrule
	; (building-type-count-total lumber-camp == 0)
	; (building-type-count-total town-center == 0)
	; (not
	; 	(can-afford-building lumber-camp))
	; ;(building-type-count-total market == 0)
	; (goal g-resign NO)
	; =>
	; (set-goal g-resign DECIDE-TO-RESIGN)
	; )
	
#end-if

#load-if-defined UP-ALLY-IN-GAME

	;Ask for resources if out of villagers and don't have food to train them.
	(defrule
	(unit-type-count-total villager == 0)
	(not
		(can-afford-unit villager))
	(building-type-count-total town-center > 0)
	(building-type-count-total market == 0)
	(up-compare-goal g-resign < ASK-FOR-RES)
	(player-in-game any-ally)
	=>
	(chat-to-allies "3 No villagers to gather food; no food to train them.")
	(chat-to-allies "Catch-22. Food please? 11")
	(set-goal g-resign ASK-FOR-RES)
	(enable-timer t-resign 30)
	)
	
	;Impossible to develop if wood can't be gathered. Ask for wood.
	(defrule
	(building-type-count-total lumber-camp == 0)
	(building-type-count-total town-center == 0)
	(building-type-count-total market == 0)
	(not
		(can-afford-building lumber-camp))
	(up-compare-goal g-resign < ASK-FOR-RES)
	(player-in-game any-ally)
	=>
	(chat-to-allies "4 Can't build LC or TC. Out of wood and can't gather it.")
	(chat-to-allies "Catch-22. Wood please? 11")
	(set-goal g-resign ASK-FOR-RES)
	(enable-timer t-resign 30)
	)
	
	;Tribute resources away before being defeated
	(defrule
	(game-time > 600)
	(unit-type-count villager == 0)
	(not
		(can-train villager))
	(players-population any-ally > 60)
	(goal g-resign ASK-FOR-RES)
	(timer-triggered t-resign)
	=>
	(tribute-to-player this-any-ally wood 100000)
	(tribute-to-player this-any-ally food 100000)
	(tribute-to-player this-any-ally gold 100000)
	(tribute-to-player this-any-ally stone 100000)
	(chat-to-allies "I'm about to be defeated. Keep on without me!")
	)

	(load "The General 3/Functions/Reset")

	;Resign if team has < 20% pop of enemy team
	(defrule
	(population < FIFTY-PERCENT-POP)
	(not
		(player-in-game every-ally))
	(up-get-fact population 0 g-temp)
	(up-get-fact-sum any-ally population 0 g-temp-2)
	(up-modify-goal g-temp g:+ g-temp-2)
	(up-get-fact-sum any-enemy population 0 g-temp-3)
	(up-modify-goal g-temp g:%/ g-temp-3)
	(up-compare-goal g-temp < 20)
	=>
	(set-goal g-resign DECIDE-TO-RESIGN)
	)

	(defrule
	(population < FIFTY-PERCENT-POP)
	(civilian-population < FIFTEEN-PERCENT-POP)
	(players-population every-ally < TWENTY-FIVE-PERCENT-POP)
	(players-population any-enemy >= FIFTY-PERCENT-POP)
	(up-get-fact population 0 g-temp)
	(up-get-fact-sum any-ally population 0 g-temp-2)
	(up-modify-goal g-temp g:+ g-temp-2)
	(up-get-fact-sum any-enemy population 0 g-temp-3)
	(up-modify-goal g-temp g:%/ g-temp-3)
	(up-compare-goal g-temp < 20)
	=>
	(set-goal g-resign DECIDE-TO-RESIGN)
	)
	
	; (defrule
	; (up-timer-status t-resign == timer-triggered)
	; (goal g-resign ASK-FOR-RES)
	; (unit-type-count-total villager == 0)
	; (not
	; 	(can-afford-unit villager))
	; (building-type-count-total market == 0)
	; =>
	; (set-goal g-resign DECIDE-TO-RESIGN)
	; )
	
	; (defrule
	; (up-timer-status t-resign == timer-triggered)
	; (goal g-resign ASK-FOR-RES)
	; (building-type-count-total lumber-camp == 0)
	; (building-type-count-total town-center == 0)
	; ;(building-type-count-total market == 0)
	; (not
	; 	(can-afford-building lumber-camp))
	; =>
	; (set-goal g-resign DECIDE-TO-RESIGN)
	; )

	; ;Impossible to get more villagers, resign.
	; (defrule
	; (unit-type-count-total villager == 0)
	; (building-type-count-total town-center == 0)
	; (military-population < 5)
	; ;(building-type-count-total market == 0)
	; (up-compare-goal g-resign < DECIDE-TO-RESIGN)
	; =>
	; (set-goal g-resign DECIDE-TO-RESIGN)
	; )

	; ;All is lost.
	; (defrule
	; (game-time > 600)
	; (population < 5)
	; ;(building-type-count-total market == 0)
	; (up-compare-goal g-resign < DECIDE-TO-RESIGN)
	; (building-type-count-total town-center == 0)
	; (not
	; 	(can-build town-center))
	; =>
	; (set-goal g-resign DECIDE-TO-RESIGN)
	; )
	
	; (defrule
	; (game-time > 600)
	; (not
	; 	(player-in-game any-ally))
	; (unit-type-count villager < 10)
	; (up-compare-goal g-top-enemy-military-parity <= -50)
	; ;(building-type-count-total market == 0)
	; (goal g-resign NO)
	; =>
	; (set-goal g-resign DECIDE-TO-RESIGN)
	; )
	
#end-if
	
; (defrule
; (up-compare-goal g-resign >= DECIDE-TO-RESIGN)
; (or
; 	(unit-type-count trade-cart > 0)
; 	(unit-type-count villager > 0))
; =>
; (up-delete-objects c: villager-class c: 1000)
; (up-delete-objects c: trade-cart c: 1000)
; )

(defrule
(military-population > 0)
(up-compare-goal g-resign >= DECIDE-TO-RESIGN)
=>
(up-modify-sn sn-maximum-town-size c:= HUNDRED-FIFTY-PERCENT-MAP-SIZE)
(set-strategic-number sn-number-attack-groups 200)
)

(defrule
(goal g-resign DECIDE-TO-RESIGN)
=>
(chat-to-all "Well fought. We shall do battle again another day.")
(chat-to-all "gg")
(set-goal g-resign RESIGN)
(enable-timer t-resign 5)
)

(defrule
(up-timer-status t-resign == timer-triggered)
(goal g-resign RESIGN)
;(unit-type-count villager == 0)
;(unit-type-count trade-cart == 0)
=>
(resign)
)