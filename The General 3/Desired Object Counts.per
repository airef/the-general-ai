;Desired Unit Counts.per

;=========================<>=========================
;				        RESET
;=========================<>=========================

	(defrule
	(true)
	=>
	(set-goal g-desired-num-military 0)
	(set-goal g-desired-num-navy 0)
	(set-goal g-desired-num-villager 0)
	(set-goal g-desired-num-fishing-ship 0)
	(set-goal g-desired-num-trade-cart 0)
	(set-goal g-desired-num-trade-cog 0)
	(set-goal g-desired-num-militia 0)
	(set-goal g-desired-num-spearman 0)
	(set-goal g-desired-num-eagle-warrior 0)
	(set-goal g-desired-num-archer 0)
	(set-goal g-desired-num-skirmisher 0)
	(set-goal g-desired-num-cavalry-archer 0)
	(set-goal g-desired-num-hand-cannoneer 0)
	(set-goal g-desired-num-scout-cavalry 0)
	(set-goal g-desired-num-knight 0)
	)

	(defrule
	(true)
	=>
	(set-goal g-desired-num-camel 0)
	(set-goal g-desired-num-battering-ram 0)
	(set-goal g-desired-num-mangonel 0)
	(set-goal g-desired-num-scorpion 0)
	(set-goal g-desired-num-bombard-cannon 0)
	(set-goal g-desired-num-trebuchet 0)
	(set-goal g-desired-num-galley 0)
	(set-goal g-desired-num-fire-ship 0)
	(set-goal g-desired-num-demolition-ship 0)
	(set-goal g-desired-num-cannon-galleon 0)
	(set-goal g-desired-num-monk 0)
	(set-goal g-desired-num-missionary 0)
	(set-goal g-desired-num-transport-ship 0)
	(set-goal g-desired-num-unique-unit 0)
	(set-goal g-desired-num-unique-ship 0)
	)

	(defrule
	(true)
	=>
	(set-goal g-desired-num-slinger 0)
	(set-goal g-desired-num-genitour 0)
	(set-goal g-desired-num-condottiero 0)
	(set-goal g-desired-num-battle-elephant 0)
	(set-goal g-desired-num-steppe-lancer 0)
	(set-goal g-desired-num-infantry 0)
	(set-goal g-desired-num-foot-archers 0)
	(set-goal g-desired-num-cavalry-archers 0)
	(set-goal g-desired-num-cavalry 0)
	(set-goal g-desired-num-siege 0)
	(set-goal g-desired-num-hand-cannoneers 0)
	(set-goal g-desired-num-monks 0)
	(set-goal g-desired-num-town-center 0)
	(set-goal g-desired-num-house 0)
	(set-goal g-desired-num-mill 0)
	)

	(defrule
	(true)
	=>
	(set-goal g-desired-num-mining-camp 0)
	(set-goal g-desired-num-lumber-camp 0)
	(set-goal g-desired-num-dock 0)
	(set-goal g-desired-num-farm 0)
	(set-goal g-desired-num-blacksmith 0)
	(set-goal g-desired-num-market 0)
	(set-goal g-desired-num-monastery 0)
	(set-goal g-desired-num-university 0)
	(set-goal g-desired-num-wonder 0)
	(set-goal g-desired-num-barracks 0)
	(set-goal g-desired-num-archery-range 0)
	(set-goal g-desired-num-stable 0)
	(set-goal g-desired-num-siege-workshop 0)
	(set-goal g-desired-num-outpost 0)
	(set-goal g-desired-num-watch-tower 0)
	)

	(defrule
	(true)
	=>
	(set-goal g-desired-num-bombard-tower 0)
	(set-goal g-desired-num-castle 0)
	(set-goal g-desired-num-feitoria 0)
	(set-goal g-desired-num-krepost 0)
	)



;=========================<>=========================
;				 NEW UNIT LINE GOALS
;====================================================

	;-------------------
	;	g-tarkan-line
	;-------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total tarkan-line g-tarkan-line)
		)

		#load-if-defined UP-GAME-WK

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total stable-tarkan g-temp)
			(up-modify-goal g-tarkan-line g:+ g-temp)
			(up-get-fact unit-type-count-total elite-stable-tarkan g-temp)
			(up-modify-goal g-tarkan-line g:+ g-temp)
			)

		#end-if

	;---------------------
	;	g-mangonel-line
	;---------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total mangonel-line g-mangonel-line)
		)

		#load-if-defined UP-GAME-WK

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total wk-onager g-temp)
			(up-modify-goal g-mangonel-line g:+ g-temp)
			)
			
		#end-if
		
	;------------------------
	;	g-unique-ship-line
	;------------------------

		(defrule
		(true)
		=>
		(set-goal g-unique-ship-line 0)
		)

		#load-if-defined KOREAN-CIV

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total turtle-ship-line g-unique-ship-line)
			)
			
		#end-if

		#load-if-defined PORTUGUESE-CIV

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total caravel g-unique-ship-line)
			(up-get-fact unit-type-count-total elite-caravel g-temp)
			(up-modify-goal g-unique-ship-line g:+ g-temp)
			)
			
		#end-if

		#load-if-defined VIKING-CIV

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total longboat-line g-unique-ship-line)
			)
			
		#end-if
		
	;-----------------------
	;	g-skirmisher-line
	;-----------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total skirmisher-line g-skirmisher-line)
		)

		#load-if-defined UP-GAME-WK

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total imperial-skirmisher g-temp)
			(up-modify-goal g-skirmisher-line g:+ g-temp)
			)
			
		#end-if
		
	;------------------------
	;	g-eagle-scout-line
	;------------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total eagle-warrior-line g-eagle-scout-line)
		)

		#load-if-defined UP-GAME-WK

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total heavy-eagle-warrior g-temp)	;castle age eagle warrior in WK
			(up-modify-goal g-eagle-scout-line g:+ g-temp)
			)

		#end-if
		
	;---------------------
	;	g-genitour-line
	;---------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total genitour g-genitour-line)
		(up-get-fact unit-type-count-total elite-genitour g-temp)
		(up-modify-goal g-genitour-line g:+ g-temp)
		)
		
	;----------------------------
	;	g-battle-elephant-line
	;----------------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total battle-elephant g-battle-elephant-line)
		(up-get-fact unit-type-count-total elite-battle-elephant g-temp)
		(up-modify-goal g-battle-elephant-line g:+ g-temp)
		;(up-chat-data-to-self "num eles: %d" g: g-battle-elephant-line)
		)
	
	;------------------------
	;	g-fire-galley-line
	;------------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total fire-ship-line g-fire-galley-line)
		)

		#load-if-defined UP-GAME-WK

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total fire-ship-wk g-temp)
			(up-modify-goal g-fire-galley-line g:+ g-temp)
			)
			
		#end-if
		
	;----------------------------
	;	g-demolition-ship-line
	;----------------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total demolition-ship-line g-demolition-raft-line)
		)

		#load-if-defined UP-GAME-WK

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total demolition-ship-wk g-temp)
			(up-modify-goal g-demolition-raft-line g:+ g-temp)
			)
			
		#end-if
		
	;------------------------
	;	g-watch-tower-line
	;------------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total watch-tower g-watch-tower-line)
		(up-get-fact unit-type-count-total guard-tower g-temp)
		(up-modify-goal g-watch-tower-line g:+ g-temp)
		(up-get-fact unit-type-count-total keep g-temp)
		(up-modify-goal g-watch-tower-line g:+ g-temp)
		)
		
	;------------------
	;	g-camel-line
	;------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total camel-line g-camel-line)
		)

		#load-if-defined UP-GAME-WK

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total imperial-camel g-temp)
			(up-modify-goal g-camel-line g:+ g-temp)
			)
			
		#end-if

	;------------------------
	;	g-unique-unit-line
	;------------------------

		#load-if-not-defined BULGARIANS
		
			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total my-unique-unit g-unique-unit-line)
			(up-get-fact unit-type-count-total my-elite-unique-unit g-temp)
			(up-modify-goal g-unique-unit-line g:+ g-temp)
			)

		#end-if

		#load-if-defined GOTHIC-CIV

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total barracks-huskarl g-temp)
			(up-modify-goal g-unique-unit-line g:+ g-temp)
			(up-get-fact unit-type-count-total barracks-elite-huskarl g-temp)
			(up-modify-goal g-unique-unit-line g:+ g-temp)
			)

		#end-if

		#load-if-defined HUN-CIV

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total stable-tarkan g-temp)
			(up-modify-goal g-unique-unit-line g:+ g-temp)
			(up-get-fact unit-type-count-total elite-stable-tarkan g-temp)
			(up-modify-goal g-unique-unit-line g:+ g-temp)
			)

		#end-if

		#load-if-defined BULGARIANS-CIV

			(defrule
			(true)
			=>
			(up-get-fact unit-type-count-total konnik-set g-unique-unit-line)
			)

		#end-if
		
	;-------------------
	;	g-siege-class
	;-------------------

		(defrule
		(true)
		=>
		(up-get-fact unit-type-count-total siege-weapon-class g-siege-class)
		(up-get-fact unit-type-count-total scorpion-class g-temp)
		(up-modify-goal g-siege-class g:+ g-temp)
		(up-get-fact unit-type-count-total petard-class g-temp)
		(up-modify-goal g-siege-class g:+ g-temp)
		(up-modify-goal g-siege-class c:+ trebuchet-set)
		)

;=========================<>=========================
;				   	   MILITARY
;=========================<>=========================

	;---------------------
	;	Base Strategies
	;---------------------

		;-----------
		;	Reset
		;-----------

			(defrule
			(true)
			=>
			(set-goal g-primary-unit PENDING)
			(set-goal g-support-unit PENDING)
			)

		;--------------------------------
		;	Crush Strategy (FC camels)
		;--------------------------------

			(defrule
			(goal g-current-strategy FC-CRUSH)
			=>
			(set-goal g-primary-unit camel)
			)
			
			(defrule
			(goal g-current-strategy FC-CRUSH)
			(up-compare-goal g-age-status >= TO-FEUDAL)
			=>
			(set-goal g-desired-num-camel 60)
			(set-goal g-desired-num-military 60)
			)

		;-------------------------------------------------
		;	Eagles Revenge Strategy (FC Eagle Warriors)
		;-------------------------------------------------

			(defrule
			(goal g-current-strategy FC-EAGLES-REVENGE)
			=>
			(set-goal g-primary-unit eagle-warrior)
			)
			
			(defrule
			(goal g-current-strategy FC-EAGLES-REVENGE)
			(goal g-age-status SAVE-FOR-CASTLE)
			(goal g-town-under-attack YES)
			=>
			(set-goal g-desired-num-archer 30)
			(set-goal g-desired-num-military 30)
			)
			
			(defrule
			(goal g-current-strategy FC-EAGLES-REVENGE)
			(goal g-age-status TO-CASTLE)
			=>
			(set-goal g-desired-num-eagle-warrior 30)
			(set-goal g-desired-num-military 30)
			)

			(defrule
			(goal g-current-strategy FC-EAGLES-REVENGE)
			(up-compare-goal g-age-status >= EARLY-CASTLE)
			=>
			(set-goal g-desired-num-eagle-warrior 60)
			(set-goal g-desired-num-military 60)
			)

		;---------------------------------
		;	Krush Strategy (FC Knights)
		;---------------------------------

			(defrule
			(goal g-current-strategy FC-KRUSH)
			=>
			(set-goal g-primary-unit knight)
			)
		
			(defrule
			(goal g-current-strategy FC-KRUSH)
			(up-compare-goal g-age-status >= TO-FEUDAL)
			=>
			(set-goal g-desired-num-knight 60)
			(set-goal g-desired-num-military 60)
			)

		;-----------------------------------
		;	Strongbow Strategy (FC Xbows)
		;-----------------------------------

			(defrule
			(goal g-current-strategy FC-STRONGBOW)
			=>
			(set-goal g-primary-unit archer)
			)
			
			(defrule
			(goal g-current-strategy FC-STRONGBOW)
			(goal g-age-status SAVE-FOR-CASTLE)
			(goal g-town-under-attack NO)
			=>
			(set-goal g-desired-num-archer 5)
			(set-goal g-desired-num-military 5)
			)
			
			(defrule
			(goal g-current-strategy FC-STRONGBOW)
			(goal g-age-status SAVE-FOR-CASTLE)
			(goal g-town-under-attack YES)
			=>
			(set-goal g-desired-num-archer 30)
			(set-goal g-desired-num-military 30)
			)
			
			(defrule
			(goal g-current-strategy FC-STRONGBOW)
			(goal g-age-status TO-CASTLE)
			=>
			(set-goal g-desired-num-archer 30)
			(set-goal g-desired-num-military 30)
			)

			(defrule
			(goal g-current-strategy FC-STRONGBOW)
			(up-compare-goal g-age-status >= EARLY-CASTLE)
			=>
			(set-goal g-desired-num-archer 60)
			(set-goal g-desired-num-military 60)
			)

		;-------------------------------
		;	Demon Strategy (FC Monks)
		;-------------------------------

			(defrule
			(goal g-current-strategy FC-DEMON)
			=>
			(set-goal g-primary-unit monk)
			)
			
			(defrule
			(goal g-current-strategy FC-DEMON)
			(up-compare-goal g-age-status >= TO-FEUDAL)
			=>
			(set-goal g-desired-num-monk 60)
			(set-goal g-desired-num-military 0)
			)

		;--------------------------
		;	Castle Drop Strategy
		;--------------------------

			(defrule
			(goal g-current-strategy FC-CASTLE-DROP)
			=>
			(set-goal g-primary-unit my-unique-unit)
			)
			
			(defrule
			(goal g-current-strategy FC-CASTLE-DROP)
			(up-compare-goal g-age-status >= TO-FEUDAL)
			=>
			(set-goal g-desired-num-unique-unit 60)
			(set-goal g-desired-num-military 60)
			)

		;-----------------------
		;	Mid-Castle Camels
		;-----------------------

			(defrule
			(goal g-current-strategy MIDC-CAMELS)
			=>
			(set-goal g-primary-unit camel)
			)
			
			(defrule
			(goal g-current-strategy MIDC-CAMELS)
			(up-compare-goal g-age-status >= MID-CASTLE)
			=>
			(set-goal g-desired-num-military 55)
			(set-goal g-desired-num-camel 55)
			)

		;-------------------------------
		;	Mid-Castle Eagle Warriors
		;-------------------------------

			(defrule
			(goal g-current-strategy MIDC-EAGLES)
			=>
			(set-goal g-primary-unit eagle-warrior)
			)

			(defrule
			(goal g-current-strategy MIDC-EAGLES)
			(up-compare-goal g-age-status >= MID-CASTLE)
			=>
			(set-goal g-desired-num-military 55)
			(set-goal g-desired-num-eagle-warrior 55)
			)

		;------------------------
		;	Mid-Castle Knights
		;------------------------

			(defrule
			(goal g-current-strategy MIDC-KNIGHTS)
			=>
			(set-goal g-primary-unit knight)
			)

			(defrule
			(goal g-current-strategy MIDC-KNIGHTS)
			(up-compare-goal g-age-status >= MID-CASTLE)
			=>
			(set-goal g-desired-num-military 55)
			(set-goal g-desired-num-knight 55)
			)

		;----------------------
		;	Mid-Castle Xbows
		;----------------------

			(defrule
			(goal g-current-strategy MIDC-XBOWS)
			=>
			(set-goal g-primary-unit archer)
			)

			(defrule
			(goal g-current-strategy MIDC-XBOWS)
			(up-compare-goal g-age-status >= MID-CASTLE)
			=>
			(set-goal g-desired-num-military 55)
			(set-goal g-desired-num-archer 55)
			)
			
		;----------------------------
		;	Mid-Castle Cav Archers
		;----------------------------

			(defrule
			(goal g-current-strategy MIDC-CAV-ARCHERS)
			=>
			(set-goal g-primary-unit cavalry-archer)
			)

			(defrule
			(goal g-current-strategy MIDC-CAV-ARCHERS)
			(up-compare-goal g-age-status >= MID-CASTLE)
			=>
			(set-goal g-desired-num-military 55)
			(set-goal g-desired-num-cavalry-archer 55)
			)

		;-------------------------------------
		;	Mid-Castle Circus (Battle Eles)
		;-------------------------------------

			(defrule
			(goal g-current-strategy MIDC-CIRCUS)
			=>
			(set-goal g-primary-unit battle-elephant)
			)

			(defrule
			(goal g-current-strategy MIDC-CIRCUS)
			(up-compare-goal g-age-status >= MID-CASTLE)
			=>
			(set-goal g-desired-num-military 55)
			(set-goal g-desired-num-battle-elephant 55)
			)

		;-----------------------
		;	Mid-Castle Unique
		;-----------------------

			(defrule
			(goal g-current-strategy MIDC-UNIQUE)
			=>
			(set-goal g-primary-unit my-unique-unit)
			)

			(defrule
			(goal g-current-strategy MIDC-UNIQUE)
			(up-compare-goal g-age-status >= MID-CASTLE)
			=>
			(set-goal g-desired-num-military 55)
			(set-goal g-desired-num-unique-unit 55)
			)

		;-----------------------
		;	Mid-Castle Ranged
		;-----------------------

			(defrule
			(goal g-current-strategy MIDC-RANGED)
			=>
			(set-goal g-primary-unit archer)
			)

			(defrule
			(goal g-current-strategy MIDC-RANGED)
			(up-compare-goal g-age-status >= MID-CASTLE)
			=>
			(set-goal g-desired-num-military 55)
			(set-goal g-desired-num-archer 55)
			)

		;----------------------
		;	Mid-Castle Monks
		;----------------------

			(defrule
			(goal g-current-strategy MIDC-MONKS)
			=>
			(set-goal g-primary-unit monk)
			)

			(defrule
			(goal g-current-strategy MIDC-MONKS)
			(up-compare-goal g-age-status >= MID-CASTLE)
			=>
			(set-goal g-desired-num-military 0)
			(set-goal g-desired-num-monk 55)
			)

		;---------------------------------------------
		;	Sniper Strategy (Fast Imp Gunpowder)
		;---------------------------------------------

			(defrule
			(goal g-current-strategy FI-SNIPER)
			=>
			(set-goal g-primary-unit hand-cannoneer)
			)

			(defrule
			(goal g-current-strategy FI-SNIPER)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-hand-cannoneer 54)
			)
			
		;---------------------------------------------
		;	Farmertron Strategy (Fast Imp Champions)
		;---------------------------------------------

			(defrule
			(goal g-current-strategy FI-FARMERTRON)
			=>
			(set-goal g-primary-unit militiaman)
			)

			(defrule
			(goal g-current-strategy FI-FARMERTRON)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-militia 54)
			)

		;------------------------------------------------------
		;	AgeOfStoneWalls Strategy (Fast Imp Elite Eagles)
		;------------------------------------------------------

			(defrule
			(goal g-current-strategy FI-AGEOFSTONEWALLS)
			=>
			(set-goal g-primary-unit eagle-warrior)
			)

			(defrule
			(goal g-current-strategy FI-AGEOFSTONEWALLS)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-eagle-warrior 54)
			)

		;---------------------------------------------
		;	Arbinger Strategy (Early Imp Arbalests)
		;---------------------------------------------

			(defrule
			(goal g-current-strategy EARLYI-ARBINGER)
			=>
			(set-goal g-primary-unit archer)
			)

			(defrule
			(goal g-current-strategy EARLYI-ARBINGER)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-archer 54)
			)

		;--------------------------------------------------
		;	Camelstorm Strategy (Early Imp Heavy Camels)
		;--------------------------------------------------

			(defrule
			(goal g-current-strategy EARLYI-CAMELSTORM)
			=>
			(set-goal g-primary-unit camel)
			)

			(defrule
			(goal g-current-strategy EARLYI-CAMELSTORM)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-camel 54)
			)

		;-------------------------------------------------
		;	El Dorado Strategy (Early Imp Elite Eagles)
		;-------------------------------------------------

			(defrule
			(goal g-current-strategy EARLYI-EL-DORADO)
			=>
			(set-goal g-primary-unit eagle-warrior)
			)

			(defrule
			(goal g-current-strategy EARLYI-EL-DORADO)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-eagle-warrior 54)
			)

		;-----------------------------------------------------
		;	Palastorm Strategy (Early Imp Cavalier/Paladin)
		;-----------------------------------------------------

			(defrule
			(goal g-current-strategy EARLYI-PALASTORM)
			=>
			(set-goal g-primary-unit knight)
			)

			(defrule
			(goal g-current-strategy EARLYI-PALASTORM)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-knight 54)
			)

		;-----------------------------------------------
		;	Champflood Strategy (Early Imp Champions)
		;-----------------------------------------------

			(defrule
			(goal g-current-strategy EARLYI-CHAMPFLOOD)
			=>
			(set-goal g-primary-unit militiaman)
			)

			(defrule
			(goal g-current-strategy EARLYI-CHAMPFLOOD)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-militia 54)
			)

		;---------------------------------------------------
		;	Circus Stomp Strategy (Early Imp Battle Eles)
		;---------------------------------------------------

			(defrule
			(goal g-current-strategy EARLYI-CIRCUS-STOMP)
			=>
			(set-goal g-primary-unit battle-elephant)
			)

			(defrule
			(goal g-current-strategy EARLYI-CIRCUS-STOMP)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-battle-elephant 54)
			)

		;------------------------------------
		;	Early Imp Unique Unit Strategy
		;------------------------------------

			(defrule
			(goal g-current-strategy EARLYI-UNIQUE)
			=>
			(set-goal g-primary-unit my-unique-unit)
			)

			(defrule
			(goal g-current-strategy EARLYI-UNIQUE)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-unique-unit 54)
			)

		;-----------------------
		;	Mid-Imp Arbalests
		;-----------------------

			(defrule
			(goal g-current-strategy MIDI-ARBS)
			=>
			(set-goal g-primary-unit archer)
			)

			(defrule
			(goal g-current-strategy MIDI-ARBS)
			(up-compare-goal g-age-status >= MID-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-archer 54)
			)

		;--------------------------
		;	Mid-Imp Heavy Camels
		;--------------------------

			(defrule
			(goal g-current-strategy MIDI-CAMELS)
			=>
			(set-goal g-primary-unit camel)
			)

			(defrule
			(goal g-current-strategy MIDI-CAMELS)
			(up-compare-goal g-age-status >= MID-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-camel 54)
			)

		;-------------------------
		;	Mid-Imp Battle Eles
		;-------------------------

			(defrule
			(goal g-current-strategy MIDI-CIRCUS)
			=>
			(set-goal g-primary-unit battle-elephant)
			)

			(defrule
			(goal g-current-strategy MIDI-CIRCUS)
			(up-compare-goal g-age-status >= MID-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-battle-elephant 54)
			)

			(defrule
			(goal g-current-strategy MIDI-CIRCUS)
			(up-compare-goal g-age-status >= MID-IMPERIAL)
			(up-compare-const BOMBARD-CANNON-AVAILABLE == YES)
			=>
			(set-goal g-desired-num-bombard-cannon 5)
			)

			(defrule
			(goal g-current-strategy MIDI-CIRCUS)
			(up-compare-goal g-age-status >= MID-IMPERIAL)
			(up-compare-const BOMBARD-CANNON-AVAILABLE == NO)
			=>
			(set-goal g-desired-num-trebuchet 5)
			)

		;--------------------------
		;	Mid-Imp Elite Eagles
		;--------------------------

			(defrule
			(goal g-current-strategy MIDI-EAGLES)
			=>
			(set-goal g-primary-unit eagle-warrior)
			)

			(defrule
			(goal g-current-strategy MIDI-EAGLES)
			(up-compare-goal g-age-status >= MID-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-eagle-warrior 54)
			)

		;----------------------
		;	Mid-Imp Paladins
		;----------------------

			(defrule
			(goal g-current-strategy MIDI-PALADINS)
			=>
			(set-goal g-primary-unit knight)
			)

			(defrule
			(goal g-current-strategy MIDI-PALADINS)
			(up-compare-goal g-age-status >= MID-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-knight 54)
			)

		;-----------------------------
		;	Mid-Imp Hvy Cav Archers
		;-----------------------------

			(defrule
			(goal g-current-strategy MIDI-CAV-ARCHERS)
			=>
			(set-goal g-primary-unit cavalry-archer)
			)

			(defrule
			(goal g-current-strategy MIDI-CAV-ARCHERS)
			(up-compare-goal g-age-status >= MID-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-cavalry-archer 54)
			)

		;------------------------------------
		;	Mid-Imp Elite Battle Elephants
		;------------------------------------

			(defrule
			(goal g-current-strategy MIDI-CIRCUS)
			=>
			(set-goal g-primary-unit battle-elephant)
			)

			(defrule
			(goal g-current-strategy MIDI-CIRCUS)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-battle-elephant 54)
			)

		;-----------------------
		;	Mid-Imp Champions
		;-----------------------

			(defrule
			(goal g-current-strategy MIDI-CHAMPIONS)
			=>
			(set-goal g-primary-unit militiaman)
			)

			(defrule
			(goal g-current-strategy MIDI-CHAMPIONS)
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-militia 54)
			)
			
		;--------------------------
		;	Mid-Imp Unique Units
		;--------------------------

			(defrule
			(goal g-current-strategy MIDI-UNIQUE)
			=>
			(set-goal g-primary-unit my-unique-unit)
			)

			(defrule
			(goal g-current-strategy MIDI-UNIQUE)
			(up-compare-goal g-age-status >= MID-IMPERIAL)
			=>
			(set-goal g-desired-num-military 54)
			(set-goal g-desired-num-unique-unit 54)
			)

		;------------------
		;	Boom Knights
		;------------------

			(defrule
			(goal g-current-strategy BOOM-KNIGHTS)
			=>
			(set-goal g-primary-unit knight)
			)

			(defrule
			(goal g-current-strategy BOOM-KNIGHTS)
			(up-compare-goal g-age-status >= TO-FEUDAL)
			=>
			(set-goal g-desired-num-military 30)
			(set-goal g-desired-num-knight 30)
			)

		;-----------------
		;	Boom Camels
		;-----------------

			(defrule
			(goal g-current-strategy BOOM-CAMELS)
			=>
			(set-goal g-primary-unit camel)
			)

			(defrule
			(goal g-current-strategy BOOM-CAMELS)
			(up-compare-goal g-age-status >= TO-FEUDAL)
			=>
			(set-goal g-desired-num-military 30)
			(set-goal g-desired-num-camel 30)
			)

		;----------------
		;	Boom Xbows
		;----------------

			(defrule
			(goal g-current-strategy BOOM-XBOWS)
			=>
			(set-goal g-primary-unit archer)
			)

			(defrule
			(goal g-current-strategy BOOM-XBOWS)
			(up-compare-goal g-age-status >= TO-CASTLE)
			=>
			(set-goal g-desired-num-military 30)
			(set-goal g-desired-num-archer 30)
			)

		;-----------------
		;	Boom Eagles
		;-----------------

			(defrule
			(goal g-current-strategy BOOM-EAGLES)
			=>
			(set-goal g-primary-unit eagle-warrior)
			)

			(defrule
			(goal g-current-strategy BOOM-EAGLES)
			(up-compare-goal g-age-status >= TO-CASTLE)
			=>
			(set-goal g-desired-num-military 30)
			(set-goal g-desired-num-eagle-warrior 30)
			(set-goal g-desired-num-monk 2)
			)

		;-------------------
		;	Boom Imperial
		;-------------------

			(defrule
			(goal g-current-strategy BOOM-IMPERIAL)
			=>
			(set-goal g-primary-unit spearman)
			)

			(defrule
			(goal g-current-strategy BOOM-IMPERIAL)
			(up-compare-goal g-age-status >= TO-CASTLE)
			=>
			(set-goal g-desired-num-military 10)
			(set-goal g-desired-num-spearman 10)
			(set-goal g-desired-num-monk 2)
			)

		;-------------------------
		;	Late Game Champions
		;-------------------------

			(defrule
			(goal g-current-strategy LATEI-CHAMPIONS)
			=>
			(set-goal g-primary-unit militiaman)
			)

			(defrule
			(goal g-current-strategy LATEI-CHAMPIONS)
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			=>
			(set-goal g-desired-num-military 57)
			(set-goal g-desired-num-militia 57)
			)

		;--------------------------
		;	Late Game Trash Army
		;--------------------------

			(defrule
			(goal g-current-strategy LATEI-TRASH)
			=>
			(set-goal g-primary-unit militiaman)
			)

			(defrule
			(goal g-current-strategy LATEI-TRASH)
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			=>
			(set-goal g-desired-num-military 57)
			(set-goal g-desired-num-skirmisher 57)
			)

		;-----------------------------
		;	Late Game Persian Xbows
		;-----------------------------

			(defrule
			(goal g-current-strategy LATEI-TRASHBOWS)
			=>
			(set-goal g-primary-unit archer)
			)

			(defrule
			(goal g-current-strategy LATEI-TRASHBOWS)
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			=>
			(set-goal g-desired-num-military 57)
			(set-goal g-desired-num-archer 57)
			)

		;---------------------------------
		;	Late Game Unique Units Army
		;---------------------------------

			(defrule
			(goal g-current-strategy LATEI-UNIQUE)
			=>
			(set-goal g-primary-unit my-unique-unit)
			)

			(defrule
			(goal g-current-strategy LATEI-UNIQUE)
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			=>
			(set-goal g-desired-num-military 57)
			(set-goal g-desired-num-unique-unit 57)
			)

		;---------------------------
		;	Late Game Hussar Army
		;---------------------------

			(defrule
			(goal g-current-strategy LATEI-HUSSAR)
			=>
			(set-goal g-primary-unit scout-cavalry)
			)

			(defrule
			(goal g-current-strategy LATEI-HUSSAR)
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			=>
			(set-goal g-desired-num-military 57)
			(set-goal g-desired-num-scout-cavalry 57)
			)

	;----------------
	;	Countering
	;----------------

		;---------------------
		;	Enemy Swordsmen
		;---------------------

			(defrule
			(goal g-primary-enemy-threat g-enemy-swordsmen-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(goal g-primary-unit eagle-warrior))
			(research-completed ri-man-at-arms)
			=>
			(up-modify-goal g-desired-num-militia g:max g-desired-num-military)
			(set-goal g-support-unit militiaman)
			)

			(defrule
			(goal g-primary-enemy-threat g-enemy-swordsmen-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(goal g-primary-unit eagle-warrior))
			(up-research-status c: ri-man-at-arms < research-complete)
			(building-type-count archery-range > 0)
			=>
			(up-modify-goal g-desired-num-archer g:max g-desired-num-military)
			(set-goal g-support-unit archer)
			)

			(defrule
			(goal g-primary-enemy-threat g-enemy-swordsmen-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(goal g-primary-unit spearman)
			(up-research-status c: ri-man-at-arms < research-complete)
			(building-type-count archery-range == 0)
			(building-type-count stable > 0)
			=>
			(up-modify-goal g-desired-num-scout-cavalry g:max g-desired-num-military)
			(set-goal g-support-unit scout-cavalry)
			)

			(defrule
			(goal g-primary-enemy-threat g-enemy-swordsmen-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(goal g-primary-unit skirmisher)
			=>
			(up-modify-goal g-desired-num-archer g:max g-desired-num-military)
			(set-goal g-support-unit archer)
			)

		;--------------------
		;	Enemy Spearmen
		;--------------------

			(defrule
			(goal g-primary-enemy-threat g-enemy-spearmen-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(goal g-primary-unit scout-cavalry)
			=>
			(up-modify-goal g-desired-num-skirmisher g:max g-desired-num-military)
			(set-goal g-support-unit skirmisher)
			)

		;--------------------------
		;	Enemy Eagle Warriors
		;--------------------------

			(defrule
			(goal g-primary-enemy-threat g-enemy-eagle-warrior-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(goal g-primary-unit skirmisher))
			=>
			(up-modify-goal g-desired-num-militia g:max g-desired-num-military)
			(set-goal g-support-unit militiaman)
			)

			(defrule
			(goal g-primary-enemy-threat g-enemy-eagle-warrior-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(up-compare-goal g-target-military-parity < 0)
			(or
				(goal g-primary-unit eagle-warrior)
				(goal g-primary-unit archer))
			(or
				(research-completed ri-man-at-arms)
				(up-compare-const EAGLE-SCOUT-AVAILABLE == NO))
			=>
			(up-modify-goal g-desired-num-militia g:max g-desired-num-military)
			(set-goal g-support-unit militiaman)
			)

			(defrule
			(goal g-primary-enemy-threat g-enemy-eagle-warrior-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(and
					(up-compare-goal g-target-military-parity < 0)
					(goal g-primary-unit archer)))
			(up-research-status c: ri-man-at-arms < research-complete)
			(up-compare-const EAGLE-SCOUT-AVAILABLE == YES)
			=>
			(up-modify-goal g-desired-num-eagle-warrior g:max g-desired-num-military)
			(set-goal g-support-unit eagle-warrior)
			)

		;------------------------
		;	Enemy Foot Archers
		;------------------------

			(defrule
			(goal g-primary-enemy-threat g-enemy-foot-archers-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(or
					(goal g-primary-unit archer)
					(and
						(up-compare-goal g-target-military-parity < 0)
						(or
							(goal g-primary-unit militiaman)
							(goal g-primary-unit eagle-warrior)))))
			(building-type-count archery-range > 0)
			=>
			(up-modify-goal g-desired-num-skirmisher g:max g-desired-num-military)
			(set-goal g-support-unit skirmisher)
			)

			(defrule
			(goal g-primary-enemy-threat g-enemy-foot-archers-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(or
					(goal g-primary-unit archer)
					(and
						(up-compare-goal g-target-military-parity < 0)
						(goal g-primary-unit militiaman))))
			(building-type-count archery-range == 0)
			(building-type-count stable > 0)
			=>
			(up-modify-goal g-desired-num-scout-cavalry g:max g-desired-num-military)
			(set-goal g-support-unit scout-cavalry)
			)

			(defrule
			(goal g-primary-enemy-threat g-enemy-foot-archers-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(or
					(goal g-primary-unit archer)
					(and
						(up-compare-goal g-target-military-parity < 0)
						(goal g-primary-unit militiaman))))
			(building-type-count archery-range == 0)
			(up-compare-const EAGLE-SCOUT-AVAILABLE == YES)
			=>
			(up-modify-goal g-desired-num-eagle-warrior g:max g-desired-num-military)
			(set-goal g-support-unit eagle-warrior)
			)

		;-----------------------
		;	Enemy Skirmishers
		;-----------------------

			(defrule
			(goal g-primary-enemy-threat g-enemy-skirmishers-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(or
					(goal g-primary-unit archer)
					(and
						(up-compare-goal g-target-military-parity < 0)
						(or
							(goal g-primary-unit militiaman)
							(goal g-primary-unit skirmisher)))))
			(building-type-count stable > 0)
			=>
			(up-modify-goal g-desired-num-scout-cavalry g:max g-desired-num-military)
			(set-goal g-support-unit scout-cavalry)
			)

			(defrule
			(goal g-primary-enemy-threat g-enemy-skirmishers-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(or
					(goal g-primary-unit archer)
					(and
						(up-compare-goal g-target-military-parity < 0)
						(or
							(goal g-primary-unit militiaman)
							(goal g-primary-unit skirmisher)))))
			(up-compare-const EAGLE-SCOUT-AVAILABLE == YES)
			=>
			(up-modify-goal g-desired-num-eagle-warrior g:max g-desired-num-military)
			(set-goal g-support-unit eagle-warrior)
			)

			(defrule
			(goal g-primary-enemy-threat g-enemy-skirmishers-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit spearman)
				(or
					(goal g-primary-unit archer)
					(and
						(up-compare-goal g-target-military-parity < 0)
						(goal g-primary-unit militiaman))))
			(or
				(building-type-count stable == 0)
				(up-compare-const EAGLE-SCOUT-AVAILABLE == NO))
			=>
			(up-modify-goal g-desired-num-skirmisher g:max g-desired-num-military)
			(set-goal g-support-unit skirmisher)
			)

		;---------------------
		;	Enemy Light Cav
		;---------------------

			(defrule
			(goal g-primary-enemy-threat g-enemy-light-cavalry-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit skirmisher)
				(and
					(up-compare-goal g-target-military-parity < 0)
					(up-compare-goal g-primary-unit != spearman)))
			(building-type-count barracks > 0)
			=>
			(up-modify-goal g-desired-num-spearman g:max g-desired-num-military)
			(set-goal g-support-unit spearman)
			)

		;---------------------
		;	Enemy Heavy Cav
		;---------------------

			(defrule
			(goal g-primary-enemy-threat g-enemy-heavy-cavalry-count)
			(current-age == feudal-age)
			(up-compare-goal g-desired-num-military > 0)
			(or
				(goal g-primary-unit skirmisher)
				(or
					(goal g-primary-unit archer)
					(and
						(up-compare-goal g-target-military-parity < 0)
						(up-compare-goal g-primary-unit != spearman))))
			(building-type-count barracks > 0)
			=>
			(up-modify-goal g-desired-num-spearman g:max g-desired-num-military)
			(set-goal g-support-unit spearman)
			)

		;--------------
		;	Swordsmen
		;--------------

			#load-if-defined AZTEC-CIV

				(defrule
				(or
					(goal g-primary-unit eagle-warrior)
					(goal g-primary-unit spearman))
				(goal g-primary-enemy-threat g-enemy-swordsmen-count)
				(building-type-count castle > 0)
				=>
				(up-modify-goal g-desired-num-unique-unit g:max g-desired-num-military)
				(set-goal g-support-unit my-unique-unit)
				)

				(defrule
				(or
					(goal g-primary-unit eagle-warrior)
					(goal g-primary-unit spearman))
				(goal g-primary-enemy-threat g-enemy-swordsmen-count)
				(building-type-count castle == 0)
				=>
				(up-modify-goal g-desired-num-castle c:max 1)
				)

				(defrule
				(or
					(goal g-primary-unit eagle-warrior)
					(goal g-primary-unit spearman))
				(goal g-primary-enemy-threat g-enemy-swordsmen-count)
				(building-type-count castle == 0)
				(research-completed ri-man-at-arms)
				=>
				(up-modify-goal g-desired-num-militia g:max g-desired-num-military)
				(set-goal g-support-unit militiaman)
				)

				(defrule
				(or
					(goal g-primary-unit eagle-warrior)
					(goal g-primary-unit spearman))
				(goal g-primary-enemy-threat g-enemy-swordsmen-count)
				(building-type-count castle == 0)
				(up-research-status c: ri-man-at-arms < research-complete)
				=>
				(up-modify-goal g-desired-num-archer g:max g-desired-num-military)
				(set-goal g-support-unit archer)
				)

			#end-if

			#load-if-defined INCAN-CIV

				(defrule
				(or
					(goal g-primary-unit eagle-warrior)
					(goal g-primary-unit spearman))
				(goal g-primary-enemy-threat g-enemy-swordsmen-count)
				=>
				(up-modify-goal g-desired-num-slinger g:max g-desired-num-military)
				(set-goal g-support-unit slinger)
				)

			#end-if

			#load-if-defined MAYAN-CIV

				(defrule
				(or
					(goal g-primary-unit eagle-warrior)
					(goal g-primary-unit spearman))
				(goal g-primary-enemy-threat g-enemy-swordsmen-count)
				(building-type-count castle > 0)
				=>
				(up-modify-goal g-desired-num-unique-unit g:max g-desired-num-military)
				(set-goal g-support-unit my-unique-unit)
				)

				(defrule
				(or
					(goal g-primary-unit eagle-warrior)
					(goal g-primary-unit spearman))
				(goal g-primary-enemy-threat g-enemy-swordsmen-count)
				(building-type-count castle == 0)
				=>
				(up-modify-goal g-desired-num-castle c:max 1)
				)

				(defrule
				(or
					(goal g-primary-unit eagle-warrior)
					(goal g-primary-unit spearman))
				(goal g-primary-enemy-threat g-enemy-swordsmen-count)
				(building-type-count castle == 0)
				=>
				(up-modify-goal g-desired-num-archer g:max g-desired-num-military)
				(set-goal g-support-unit archer)
				)

			#end-if

			(defrule
			(or
				(goal g-primary-unit scout-cavalry)
				(goal g-primary-unit camel))
			(goal g-primary-enemy-threat g-enemy-swordsmen-count)
			(or
				(up-research-status c: ri-two-handed-swordsman < research-pending)
				(up-compare-const CHAMPION-AVAILABLE == NO))
			=>
			(up-modify-goal g-desired-num-cavalry-archer g:max g-desired-num-military)
			(set-goal g-support-unit cavalry-archer)
			)

			(defrule
			(or
				(goal g-primary-unit scout-cavalry)
				(goal g-primary-unit camel))
			(goal g-primary-enemy-threat g-enemy-swordsmen-count)
			(up-research-status c: ri-two-handed-swordsman >= research-pending)
			(up-compare-const CHAMPION-AVAILABLE == YES)
			=>
			(up-modify-goal g-desired-num-militia g:max g-desired-num-military)
			(set-goal g-support-unit militiaman)
			)

		;--------------
		;	Spearmen
		;--------------

			;Castle Age
			#load-if-not-defined BULGARIANS-CIV
			#load-if-not-defined CELTIC-CIV
			#load-if-not-defined SPANISH-CIV

				(defrule
				(or
					(goal g-primary-unit-class cavalry-class)
					(or
						(goal g-primary-unit-class cavalry-archer-class)
						(goal g-primary-unit-class cavalry-cannon-class)))
				(goal g-primary-enemy-threat g-enemy-spearmen-count)
				(current-age == castle-age)
				(or
					(up-research-status c: ri-elite-skirmisher < research-complete)
					(research-completed ri-crossbow))
				=>
				(up-modify-goal g-desired-num-archer g:max g-desired-num-military)
				(set-goal g-support-unit archer)
				)

				(defrule
				(or
					(goal g-primary-unit-class cavalry-class)
					(or
						(goal g-primary-unit-class cavalry-archer-class)
						(goal g-primary-unit-class cavalry-cannon-class)))
				(goal g-primary-enemy-threat g-enemy-spearmen-count)
				(current-age == castle-age)
				(up-research-status c: ri-crossbow < research-complete)
				(research-completed ri-elite-skirmisher)
				=>
				(up-modify-goal g-desired-num-skirmisher g:max g-desired-num-military)
				(set-goal g-support-unit skirmisher)
				)

			#end-if
			#end-if
			#end-if

				(defrule
				(or
					(civ-selected bulgarians)
					(civ-selected spanish))
				(or
					(goal g-primary-unit-class cavalry-class)
					(or
						(goal g-primary-unit-class cavalry-archer-class)
						(goal g-primary-unit-class cavalry-cannon-class)))
				(goal g-primary-enemy-threat g-enemy-spearmen-count)
				(current-age == castle-age)
				=>
				(up-modify-goal g-desired-num-skirmisher g:max g-desired-num-military)
				(set-goal g-support-unit skirmisher)
				)

			#load-if-defined CELTIC-CIV

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(goal g-primary-enemy-threat g-enemy-spearmen-count)
				(up-compare-goal g-enemy-spearmen-count < 6)
				(up-compare-goal g-enemy-light-cavalry-count < 4)
				(up-compare-goal g-enemy-heavy-cavalry-count < 4)
				(current-age == castle-age)
				(building-type-count siege-workshop > 0)
				=>
				(up-modify-goal g-desired-num-scorpion c:max 8)
				(set-goal g-support-unit scorpion)
				)

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(goal g-primary-enemy-threat g-enemy-spearmen-count)
				(current-age == castle-age)
				(or
					(building-type-count siege-workshop == 0)
					(or
						(up-compare-goal g-enemy-light-cavalry-count >= 4)
						(or
							(up-compare-goal g-enemy-heavy-cavalry-count >= 4)
							(up-compare-goal g-enemy-spearmen-count >= 6))))
				(or
					(up-research-status c: ri-elite-skirmisher < research-complete)
					(research-completed ri-crossbow))
				=>
				(up-modify-goal g-desired-num-archer g:max g-desired-num-military)
				(set-goal g-support-unit archer)
				)

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(goal g-primary-enemy-threat g-enemy-spearmen-count)
				(current-age == castle-age)
				(or
					(building-type-count siege-workshop == 0)
					(or
						(up-compare-goal g-enemy-light-cavalry-count >= 4)
						(or
							(up-compare-goal g-enemy-heavy-cavalry-count >= 4)
							(up-compare-goal g-enemy-spearmen-count >= 6))))
				(up-research-status c: ri-crossbow < research-complete)
				(research-completed ri-elite-skirmisher)
				=>
				(up-modify-goal g-desired-num-skirmisher g:max g-desired-num-military)
				(set-goal g-support-unit skirmisher)
				)

			#end-if

			;Imperial Age
			(defrule
			(or
				(goal g-primary-unit-class cavalry-class)
				(or
					(goal g-primary-unit-class cavalry-archer-class)
					(goal g-primary-unit-class cavalry-cannon-class)))
			(goal g-primary-enemy-threat g-enemy-spearmen-count)
			(current-age == imperial-age)
			(research-completed ri-chemistry)
			(up-compare-const HAND-CANNONEER-AVAILABLE == YES)
			=>
			(up-modify-goal g-desired-num-hand-cannoneer g:max g-desired-num-military)
			(set-goal g-support-unit hand-cannoneer)
			)

			(defrule
			(or
				(goal g-primary-unit-class cavalry-class)
				(or
					(goal g-primary-unit-class cavalry-archer-class)
					(goal g-primary-unit-class cavalry-cannon-class)))
			(goal g-primary-enemy-threat g-enemy-spearmen-count)
			(current-age == imperial-age)
			(or
				(up-research-status c: ri-chemistry < research-complete)
				(up-compare-const HAND-CANNONEER-AVAILABLE == NO))
			(research-completed ri-crossbow)
			=>
			(up-modify-goal g-desired-num-archer g:max g-desired-num-military)
			(set-goal g-support-unit archer)
			)

			(defrule
			(or
				(goal g-primary-unit-class cavalry-class)
				(or
					(goal g-primary-unit-class cavalry-archer-class)
					(goal g-primary-unit-class cavalry-cannon-class)))
			(goal g-primary-enemy-threat g-enemy-spearmen-count)
			(current-age == imperial-age)
			(or
				(up-research-status c: ri-chemistry < research-complete)
				(up-compare-const HAND-CANNONEER-AVAILABLE == NO))
			(up-research-status c: ri-crossbow < research-complete)
			(up-compare-const CHAMPION-AVAILABLE == YES)
			=>
			(up-modify-goal g-desired-num-militia g:max g-desired-num-military)
			(set-goal g-support-unit militiaman)
			)

			(defrule
			(or
				(goal g-primary-unit-class cavalry-class)
				(or
					(goal g-primary-unit-class cavalry-archer-class)
					(goal g-primary-unit-class cavalry-cannon-class)))
			(goal g-primary-enemy-threat g-enemy-spearmen-count)
			(current-age == imperial-age)
			(or
				(up-research-status c: ri-chemistry < research-complete)
				(up-compare-const HAND-CANNONEER-AVAILABLE == NO))
			(up-research-status c: ri-crossbow < research-complete)
			(up-compare-const CHAMPION-AVAILABLE == NO)
			(up-compare-const ELITE-SKIRMISHER-AVAILABLE == YES)
			=>
			(up-modify-goal g-desired-num-skirmisher g:max g-desired-num-military)
			(set-goal g-support-unit skirmisher)
			)

		;-----------------
		;	Skirmishers
		;-----------------

			#load-if-not-defined TURKISH-CIV

				(defrule
				(or
					(goal g-primary-unit-class archery-class)
					(or
						(goal g-primary-unit-class cavalry-archer-class)
						(goal g-primary-unit-class archery-cannon-class)))
				(goal g-primary-enemy-threat g-enemy-skirmishers-count)
				(building-type-count stable == 0)
				(up-compare-const EAGLE-WARRIOR-AVAILABLE == NO)
				=>
				(up-modify-goal g-desired-num-skirmisher g:max g-desired-num-military)
				(set-goal g-support-unit skirmisher)
				)

				(defrule
				(goal g-primary-unit archer)
				(goal g-primary-enemy-threat g-enemy-skirmishers-count)
				(building-type-count stable == 0)
				(up-compare-const EAGLE-WARRIOR-AVAILABLE == YES)
				=>
				(up-modify-goal g-desired-num-eagle-warrior g:max g-desired-num-military)
				(set-goal g-support-unit eagle-warrior)
				)

				(defrule
				(or
					(goal g-primary-unit-class archery-class)
					(or
						(goal g-primary-unit-class cavalry-archer-class)
						(goal g-primary-unit-class archery-cannon-class)))
				(goal g-primary-enemy-threat g-enemy-skirmishers-count)
				(building-type-count stable > 0)
				(or
					(current-age == feudal-age)
					(research-completed ri-light-cavalry))
				=>
				(up-modify-goal g-desired-num-scout-cavalry g:max g-desired-num-military)
				(set-goal g-support-unit scout-cavalry)
				)

				(defrule
				(or
					(goal g-primary-unit-class archery-class)
					(or
						(goal g-primary-unit-class cavalry-archer-class)
						(goal g-primary-unit-class archery-cannon-class)))
				(goal g-primary-enemy-threat g-enemy-skirmishers-count)
				(building-type-count stable > 0)
				(current-age >= castle-age)
				(up-research-status c: ri-light-cavalry < research-complete)
				=>
				(up-modify-goal g-desired-num-knight g:max g-desired-num-military)
				(set-goal g-support-unit knight)
				)

			#else

				(defrule
				(or
					(goal g-primary-unit-class archery-class)
					(or
						(goal g-primary-unit-class cavalry-archer-class)
						(goal g-primary-unit-class archery-cannon-class)))
				(goal g-primary-enemy-threat g-enemy-skirmishers-count)
				=>
				(up-modify-goal g-desired-num-scout-cavalry g:max g-desired-num-military)
				(set-goal g-support-unit scout-cavalry)
				)

			#end-if
			
		;---------------------
		;	Hand Cannoneers
		;---------------------

			(defrule
			(goal g-primary-unit-class infantry-class)
			(up-compare-goal g-primary-unit != condottiero)
			(goal g-primary-enemy-threat g-enemy-hand-cannoneer-slinger-count)
			(unit-available condottiero)
			(not
				(players-civ target-player incan))
			=>
			(up-modify-goal g-desired-num-condottiero g:max g-desired-num-military)
			(set-goal g-support-unit condottiero)
			)

			(defrule
			(goal g-primary-unit-class infantry-class)
			(goal g-primary-enemy-threat g-enemy-hand-cannoneer-slinger-count)
			(or
				(not
					(unit-available condottiero))
				(players-civ target-player incan))
			=>
			(up-modify-goal g-desired-num-skirmisher g:max g-desired-num-military)
			(set-goal g-support-unit skirmisher)
			)

		;------------
		;	Camels
		;------------

			;Castle Age
			#load-if-not-defined TURKISH-CIV
			#load-if-not-defined BYZANTINE-CIV

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(up-compare-goal g-primary-unit != camel)
				(goal g-primary-enemy-threat g-enemy-camel-count)
				(or
					(current-age == castle-age)
					(or
						(up-compare-const HALBERDIER-AVAILABLE == YES)
						(up-research-status c: ri-two-handed-swordsman < research-pending)))
				=>
				(up-modify-goal g-desired-num-spearman g:max g-desired-num-military)
				(set-goal g-support-unit spearman)
				)

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(up-compare-goal g-primary-unit != camel)
				(goal g-primary-enemy-threat g-enemy-camel-count)
				(current-age == imperial-age)
				(up-compare-const HALBERDIER-AVAILABLE == NO)
				(up-research-status c: ri-two-handed-swordsman >= research-pending)
				=>
				(up-modify-goal g-desired-num-militia g:max g-desired-num-military)
				(set-goal g-support-unit militiaman)
				)

			#end-if
			#end-if

			#load-if-defined BYZANTINE-CIV

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(up-compare-goal g-primary-unit != camel)
				(up-compare-goal g-primary-unit != my-unique-unit)
				(goal g-primary-enemy-threat g-enemy-camel-count)
				(or
					(current-age == castle-age)
					(or
						(up-compare-const HALBERDIER-AVAILABLE == YES)
						(up-research-status c: ri-two-handed-swordsman < research-pending)))
				=>
				(up-modify-goal g-desired-num-spearman g:max g-desired-num-military)
				(set-goal g-support-unit spearman)
				)

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(up-compare-goal g-primary-unit != camel)
				(up-compare-goal g-primary-unit != my-unique-unit)
				(goal g-primary-enemy-threat g-enemy-camel-count)
				(current-age == imperial-age)
				(up-compare-const HALBERDIER-AVAILABLE == NO)
				(up-research-status c: ri-two-handed-swordsman >= research-pending)
				=>
				(up-modify-goal g-desired-num-militia g:max g-desired-num-military)
				(set-goal g-support-unit militiaman)
				)

			#end-if

			#load-if-defined TURKISH-CIV

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(up-compare-goal g-primary-unit != camel)
				(goal g-primary-enemy-threat g-enemy-camel-count)
				(building-type-count castle > 0)
				=>
				(up-modify-goal g-desired-num-unique-unit g:max g-desired-num-military)
				(set-goal g-support-unit my-unique-unit)
				)

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(up-compare-goal g-primary-unit != camel)
				(goal g-primary-enemy-threat g-enemy-camel-count)
				(building-type-count castle == 0)
				(current-age == castle-age)
				=>
				(up-modify-goal g-desired-num-archer g:max g-desired-num-military)
				(set-goal g-support-unit archer)
				)

				(defrule
				(goal g-primary-unit-class cavalry-class)
				(up-compare-goal g-primary-unit != camel)
				(goal g-primary-enemy-threat g-enemy-camel-count)
				(building-type-count castle == 0)
				(current-age == imperial-age)
				=>
				(up-modify-goal g-desired-num-militia g:max g-desired-num-military)
				(set-goal g-support-unit militiaman)
				)

			#end-if

		;-----------------
		;	Field Siege
		;-----------------

			#load-if-not-defined MONGOL-CIV

				(defrule
				(or
					(goal g-primary-unit-class archery-class)
					(or
						(goal g-primary-unit-class cavalry-archer-class)
						(or
							(goal g-primary-unit-class archery-cannon-class)
							(goal g-primary-unit-class cavalry-cannon-class))))
				(goal g-primary-enemy-threat g-enemy-field-siege-count)
				(up-compare-const SCOUT-CAVALRY-AVAILABLE == YES)
				=>
				(up-modify-goal g-desired-num-scout-cavalry g:max g-desired-num-military)
				(set-goal g-support-unit scout-cavalry)
				)

				(defrule
				(goal g-primary-unit archery-class)
				(goal g-primary-enemy-threat g-enemy-field-siege-count)
				(up-compare-const SCOUT-CAVALRY-AVAILABLE == NO)
				=>
				(up-modify-goal g-desired-num-eagle-warrior g:max g-desired-num-military)
				(set-goal g-support-unit eagle-warrior)
				)

			#else

				(defrule
				(or
					(goal g-primary-unit-class archery-class)
					(goal g-primary-unit-class cavalry-archer-class))
				(up-compare-goal g-primary-unit != my-unique-unit)
				(goal g-primary-enemy-threat g-enemy-field-siege-count)
				(up-compare-const SCOUT-CAVALRY-AVAILABLE == YES)
				=>
				(up-modify-goal g-desired-num-scout-cavalry g:max g-desired-num-military)
				(set-goal g-support-unit scout-cavalry)
				)

			#end-if

		;----------------------------------
		;	Adding Default Counter Units
		;----------------------------------

			;----------------
			;	Feudal Age
			;----------------

				;Spearmen
				(defrule
				(current-age <= feudal-age)
				(up-compare-goal g-primary-unit != spearman)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(or
					(up-compare-goal g-enemy-light-cavalry-count >= 4)
					(or
						(up-compare-goal g-enemy-heavy-cavalry-count >= 2)
						(or
							(up-compare-goal g-enemy-camel-count >= 6)
							(up-compare-goal g-enemy-elephants-count > 0))))
				(up-compare-goal g-primary-enemy-threat != g-enemy-foot-archers-count)
				=>
				(up-modify-goal g-desired-num-spearman c:max 30)
				(set-goal g-support-unit spearman)
				)

				;Skirms
				(defrule
				(current-age <= feudal-age)
				(up-compare-goal g-primary-unit != skirmisher)
				(up-compare-goal g-primary-unit != eagle-warrior)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(or
					(up-compare-goal g-enemy-foot-archers-count >= 2)
					(or
						(up-compare-goal g-enemy-cavalry-archers-count >= 2)
						(up-compare-goal g-enemy-hand-cannoneer-slinger-count >= 2)))
				(up-compare-goal g-primary-enemy-threat != g-enemy-light-cavalry-count)
				=>
				(up-modify-goal g-desired-num-skirmisher c:max 30)
				(set-goal g-support-unit skirmisher)
				)

				(defrule
				(current-age <= feudal-age)
				(up-compare-goal g-primary-unit != skirmisher)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(up-compare-goal g-enemy-skirmishers-count >= 3)
				(up-compare-goal g-primary-enemy-threat != g-enemy-light-cavalry-count)
				(or
					(building-type-count stable == 0)
					(up-compare-const LIGHT-CAVALRY-AVAILABLE == NO))
				(up-compare-const EAGLE-WARRIOR-AVAILABLE == NO)
				=>
				(up-modify-goal g-desired-num-skirmisher c:max 30)
				(set-goal g-support-unit skirmisher)
				)

				;Scout Cav
				(defrule
				(current-age <= feudal-age)
				(up-compare-const SCOUT-CAVALRY-AVAILABLE == YES)
				(up-compare-goal g-primary-unit != scout-cavalry)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(or
					(up-compare-goal g-enemy-skirmishers-count >= 4)
					(or
						(up-compare-goal g-enemy-field-siege-count >= 2)
						(up-compare-goal g-enemy-monks-count >= 3)))
				(building-type-count stable > 0)
				=>
				(up-modify-goal g-desired-num-scout-cavalry c:max 20)
				(set-goal g-support-unit scout-cavalry)
				)

				(defrule
				(current-age <= feudal-age)
				(up-compare-const SCOUT-CAVALRY-AVAILABLE == YES)
				(up-compare-goal g-primary-unit != scout-cavalry)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(or
					(up-compare-goal g-enemy-skirmishers-count >= 4)
					(or
						(up-compare-goal g-enemy-field-siege-count >= 2)
						(up-compare-goal g-enemy-monks-count >= 3)))
				(building-type-count stable == 0)
				=>
				(up-modify-goal g-desired-num-stable c:min 1)
				)

				;Eagle Warriors
				(defrule
				(current-age <= feudal-age)
				(up-compare-goal g-primary-unit != skirmisher)
				(up-compare-goal g-primary-unit != eagle-warrior)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(up-compare-goal g-enemy-skirmishers-count >= 3)
				(up-compare-goal g-primary-enemy-threat != g-enemy-swordsmen-count)
				(up-compare-const EAGLE-WARRIOR-AVAILABLE == YES)
				=>
				(up-modify-goal g-desired-num-eagle-warrior c:max 30)
				(set-goal g-support-unit eagle-warrior)
				)

				;Swordsmen
				(defrule
				(current-age <= feudal-age)
				(up-compare-goal g-primary-unit != militiaman)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(up-compare-goal g-enemy-eagle-warrior-count >= 2)
				(up-compare-goal g-primary-enemy-threat != g-enemy-foot-archers-count)
				(up-compare-goal g-primary-enemy-threat != g-enemy-hand-cannoneer-slinger-count)
				=>
				(up-modify-goal g-desired-num-militia c:max 30)
				(set-goal g-support-unit militiaman)
				)

			;-------------------------
			;	Castle/Imperial Age
			;-------------------------

				;Camels
				(defrule
				(current-age >= castle-age)
				(or
					(goal g-primary-unit scout-cavalry)
					(or
						(goal g-primary-unit knight)
						(goal g-primary-unit steppe-lancer)))
				(up-compare-const CAMEL-AVAILABLE == YES)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(or
					(up-compare-goal g-enemy-light-cavalry-count > 3)
					(up-compare-goal g-enemy-heavy-cavalry-count > 3))
				(up-compare-goal g-primary-enemy-threat != g-enemy-foot-archers-count)
				(up-compare-goal g-primary-enemy-threat != g-enemy-spearmen-count)
				=>
				(up-modify-goal g-desired-num-camel c:max 30)
				(set-goal g-support-unit camel)
				)

				(defrule
				(current-age >= castle-age)
				(or
					(goal g-primary-unit scout-cavalry)
					(or
						(goal g-primary-unit knight)
						(goal g-primary-unit steppe-lancer)))
				(up-compare-const CAMEL-AVAILABLE == YES)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(or
					(up-compare-goal g-enemy-camel-count >= 3)
					(up-compare-goal g-enemy-elephants-count > 1))
				(up-compare-goal g-primary-enemy-threat != g-enemy-foot-archers-count)
				(up-compare-goal g-primary-enemy-threat != g-enemy-spearmen-count)
				=>
				(up-modify-goal g-desired-num-camel c:max 30)
				(set-goal g-support-unit camel)
				)

				;Pikemen
				(defrule
				(current-age >= castle-age)
				(up-compare-goal g-primary-unit != spearman)
				(up-compare-goal g-primary-unit != camel)
				(up-compare-const PIKEMAN-AVAILABLE == YES)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(or
					(up-compare-goal g-enemy-light-cavalry-count >= 6)
					(or
						(up-compare-goal g-enemy-heavy-cavalry-count >= 3)
						(or
							(up-compare-goal g-enemy-camel-count >= 8)
							(up-compare-goal g-enemy-elephants-count > 0))))
				(up-compare-goal g-primary-enemy-threat != g-enemy-foot-archers-count)
				=>
				(up-modify-goal g-desired-num-spearman c:max 30)
				(set-goal g-support-unit spearman)
				)

				;Skirms/Genitours
				#load-if-not-defined TURKISH-CIV

					(defrule
					(current-age >= castle-age)
					(up-compare-goal g-primary-unit != skirmisher)
					(up-compare-goal g-primary-unit != eagle-warrior)
					(goal g-support-unit PENDING)
					(goal g-position FLANK)
					(or
						(up-compare-goal g-enemy-foot-archers-count >= 3)
						(up-compare-goal g-enemy-cavalry-archers-count >= 3))
					(up-compare-goal g-primary-enemy-threat != g-enemy-light-cavalry-count)
					=>
					(up-modify-goal g-desired-num-skirmisher c:max 30)
					(set-goal g-support-unit skirmisher)
					)

					(defrule
					(current-age >= castle-age)
					(up-compare-goal g-primary-unit != skirmisher)
					(goal g-support-unit PENDING)
					(goal g-position FLANK)
					(up-compare-goal g-enemy-hand-cannoneer-slinger-count >= 3)
					(up-compare-goal g-primary-enemy-threat != g-enemy-light-cavalry-count)
					=>
					(up-modify-goal g-desired-num-skirmisher c:max 30)
					(set-goal g-support-unit skirmisher)
					)

					(defrule
					(current-age >= castle-age)
					(up-compare-goal g-primary-unit != skirmisher)
					(goal g-support-unit PENDING)
					(goal g-position FLANK)
					(up-compare-goal g-enemy-skirmishers-count >= 3)
					(up-compare-goal g-primary-enemy-threat != g-enemy-light-cavalry-count)
					(or
						(building-type-count stable == 0)
						(up-compare-const LIGHT-CAVALRY-AVAILABLE == NO))
					(up-compare-const EAGLE-WARRIOR-AVAILABLE == NO)
					=>
					(up-modify-goal g-desired-num-skirmisher c:max 30)
					(set-goal g-support-unit skirmisher)
					)

				#else

					(defrule
					(current-age >= castle-age)
					(unit-available genitour)
					(up-compare-goal g-primary-unit != genitour)
					(goal g-support-unit PENDING)
					(goal g-position FLANK)
					(or
						(up-compare-goal g-enemy-foot-archers-count >= 3)
						(or
							(up-compare-goal g-enemy-cavalry-archers-count >= 3)
							(or
								(up-compare-goal g-enemy-hand-cannoneer-slinger-count >= 3)
								(up-compare-goal g-enemy-skirmishers-count >= 3))))
					(up-compare-goal g-primary-enemy-threat != g-enemy-light-cavalry-count)
					=>
					(up-modify-goal g-desired-num-genitour c:max 30)
					(set-goal g-support-unit genitour)
					)

					(defrule
					(current-age >= castle-age)
					(not
						(unit-available genitour))
					(up-compare-goal g-primary-unit != scout-cavalry)
					(up-compare-goal g-primary-unit != skirmisher)
					(goal g-support-unit PENDING)
					(goal g-position FLANK)
					(or
						(up-compare-goal g-enemy-foot-archers-count >= 6)
						(up-compare-goal g-enemy-cavalry-archers-count >= 6))
					(up-compare-goal g-primary-enemy-threat != g-enemy-spearmen-count)
					=>
					(up-modify-goal g-desired-num-scout-cavalry c:max 20)
					(set-goal g-support-unit scout-cavalry)
					)

					(defrule
					(current-age >= castle-age)
					(not
						(unit-available genitour))
					(up-compare-goal g-primary-unit != scout-cavalry)
					(up-compare-goal g-primary-unit != skirmisher)
					(goal g-support-unit PENDING)
					(goal g-position FLANK)
					(or
						(up-compare-goal g-enemy-hand-cannoneer-slinger-count >= 6)
						(up-compare-goal g-enemy-skirmishers-count >= 6))
					(up-compare-goal g-primary-enemy-threat != g-enemy-spearmen-count)
					=>
					(up-modify-goal g-desired-num-scout-cavalry c:max 20)
					(set-goal g-support-unit scout-cavalry)
					)

				#end-if

				;Light Cav
				(defrule
				(current-age >= castle-age)
				(up-compare-const SCOUT-CAVALRY-AVAILABLE == YES)
				(up-compare-goal g-primary-unit != scout-cavalry)
				(up-compare-goal g-primary-unit != knight)
				(up-compare-goal g-primary-unit != steppe-lancer)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(or
					(up-compare-goal g-enemy-skirmishers-count >= 6)
					(up-compare-goal g-enemy-field-siege-count >= 5))
				(up-compare-const LIGHT-CAVALRY-AVAILABLE == YES)
				=>
				(up-modify-goal g-desired-num-scout-cavalry c:max 20)
				(set-goal g-support-unit scout-cavalry)
				)

				(defrule
				(current-age >= castle-age)
				(up-compare-const SCOUT-CAVALRY-AVAILABLE == YES)
				(up-compare-goal g-primary-unit != scout-cavalry)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(up-compare-goal g-enemy-monks-count >= 3)
				(up-compare-const LIGHT-CAVALRY-AVAILABLE == YES)
				=>
				(up-modify-goal g-desired-num-scout-cavalry c:max 20)
				(set-goal g-support-unit scout-cavalry)
				)

				;Eagle Warriors
				(defrule
				(current-age >= castle-age)
				(up-compare-goal g-primary-unit != skirmisher)
				(up-compare-goal g-primary-unit != eagle-warrior)
				(goal g-support-unit PENDING)
				(goal g-position FLANK)
				(up-compare-goal g-enemy-skirmishers-count >= 3)
				(up-compare-goal g-primary-enemy-threat != g-enemy-swordsmen-count)
				(up-compare-const EAGLE-WARRIOR-AVAILABLE == YES)
				=>
				(up-modify-goal g-desired-num-eagle-warrior c:max 30)
				(set-goal g-support-unit eagle-warrior)
				)

				;Swordsmen
				#load-if-not-defined PERSIAN-CIV

					(defrule
					(current-age >= castle-age)
					(up-compare-goal g-primary-unit != militiaman)
					(goal g-support-unit PENDING)
					(goal g-position FLANK)
					(up-compare-goal g-enemy-eagle-warrior-count >= 3)
					(up-compare-goal g-primary-enemy-threat != g-enemy-foot-archers-count)
					(up-compare-goal g-primary-enemy-threat != g-enemy-hand-cannoneer-slinger-count)
					=>
					(up-modify-goal g-desired-num-militia c:max 30)
					(set-goal g-support-unit militiaman)
					)

				#else

					(defrule
					(current-age == castle-age)
					(up-compare-goal g-primary-unit != militiaman)
					(goal g-support-unit PENDING)
					(goal g-position FLANK)
					(up-compare-goal g-enemy-eagle-warrior-count >= 3)
					(up-compare-goal g-primary-enemy-threat != g-enemy-foot-archers-count)
					(up-compare-goal g-primary-enemy-threat != g-enemy-hand-cannoneer-slinger-count)
					=>
					(up-modify-goal g-desired-num-militia c:max 30)
					(set-goal g-support-unit militiaman)
					)

					(defrule
					(current-age == imperial-age)
					(up-compare-goal g-primary-unit != hand-cannoneer)
					(up-compare-goal g-primary-unit != militiaman)
					(goal g-support-unit PENDING)
					(goal g-position FLANK)
					(up-compare-goal g-enemy-eagle-warrior-count >= 3)
					(up-compare-goal g-primary-enemy-threat != g-enemy-skirmishers-count)
					=>
					(up-modify-goal g-desired-num-hand-cannoneer c:max 30)
					(set-goal g-support-unit hand-cannoneer)
					)

				#end-if

	;------------------
	;	Support Unit
	;------------------

		;--------------------------------------
		;	Set Counter Unit as Support Unit
		;--------------------------------------

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-unique-unit > 0)
			(up-compare-goal g-primary-unit != my-unique-unit)
			=>
			(set-goal g-support-unit my-unique-unit)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-cavalry-archer > 0)
			(up-compare-goal g-primary-unit != cavalry-archer)
			=>
			(set-goal g-support-unit cavalry-archer)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-spearman > 0)
			(up-compare-goal g-primary-unit != spearman)
			=>
			(set-goal g-support-unit spearman)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-archer > 0)
			(up-compare-goal g-primary-unit != archer)
			=>
			(set-goal g-support-unit archer)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-scout-cavalry > 0)
			(up-compare-goal g-primary-unit != scout-cavalry)
			=>
			(set-goal g-support-unit scout-cavalry)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-skirmisher > 0)
			(up-compare-goal g-primary-unit != skirmisher)
			=>
			(set-goal g-support-unit skirmisher)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-militia > 0)
			(up-compare-goal g-primary-unit != militiaman)
			=>
			(set-goal g-support-unit militiaman)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-eagle-warrior > 0)
			(up-compare-goal g-primary-unit != eagle-warrior)
			=>
			(set-goal g-support-unit eagle-warrior)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-knight > 0)
			(up-compare-goal g-primary-unit != knight)
			=>
			(set-goal g-support-unit knight)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-genitour > 0)
			(up-compare-goal g-primary-unit != genitour)
			=>
			(set-goal g-support-unit genitour)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-steppe-lancer > 0)
			(up-compare-goal g-primary-unit != steppe-lancer)
			=>
			(set-goal g-support-unit steppe-lancer)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-camel > 0)
			(up-compare-goal g-primary-unit != camel)
			=>
			(set-goal g-support-unit camel)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-battle-elephant > 0)
			(up-compare-goal g-primary-unit != battle-elephant)
			=>
			(set-goal g-support-unit battle-elephant)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-slinger > 0)
			(up-compare-goal g-primary-unit != slinger)
			=>
			(set-goal g-support-unit slinger)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-condottiero > 0)
			(up-compare-goal g-primary-unit != condottiero)
			=>
			(set-goal g-support-unit condottiero)
			)

			(defrule
			(goal g-support-unit PENDING)
			(up-compare-goal g-desired-num-hand-cannoneer > 0)
			(up-compare-goal g-primary-unit != hand-cannoneer)
			=>
			(set-goal g-support-unit hand-cannoneer)
			)

		;--------------------------------------------
		;	Set Complementary Unit as Support Unit
		;--------------------------------------------

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy FC-STRONGBOW)
			(military-population > 8)
			=>
			(up-modify-goal g-desired-num-skirmisher c:max 5)
			)
			
			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy MIDC-CAMELS)
			=>
			(set-goal g-support-unit skirmisher)
			(up-modify-goal g-desired-num-skirmisher c:max 31)
			)

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy MIDC-EAGLES)
			=>
			(set-goal g-support-unit archer)
			(up-modify-goal g-desired-num-archer c:max 27)
			)

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy MIDC-XBOWS)
			=>
			(set-goal g-support-unit skirmisher)
			(up-modify-goal g-desired-num-skirmisher c:max 26)
			)

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy EARLYI-ARBINGER)
			=>
			(set-goal g-support-unit skirmisher)
			(up-modify-goal g-desired-num-skirmisher c:max 16)
			)

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy EARLYI-CIRCUS-STOMP)
			=>
			(set-goal g-support-unit archer)
			(up-modify-goal g-desired-num-archer c:max 18)
			)

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy MIDI-ARBS)
			=>
			(set-goal g-support-unit skirmisher)
			(up-modify-goal g-desired-num-skirmisher c:max 27)
			)

			(defrule
			(goal g-support-unit PENDING)
			(or
				(goal g-current-strategy MIDI-CAMELS)
				(goal g-current-strategy MIDI-CIRCUS))
			(up-compare-const HAND-CANNONEER-AVAILABLE == YES)
			=>
			(set-goal g-support-unit hand-cannoneer)
			(up-modify-goal g-desired-num-hand-cannoneer c:max 26)
			)

			(defrule
			(goal g-support-unit PENDING)
			(or
				(goal g-current-strategy MIDI-CAMELS)
				(goal g-current-strategy MIDI-CIRCUS))
			(up-compare-const HAND-CANNONEER-AVAILABLE == NO)
			=>
			(set-goal g-support-unit archer)
			(up-modify-goal g-desired-num-archer c:max 26)
			)

			#load-if-defined AZTEC-CIV

				(defrule
				(goal g-support-unit PENDING)
				(goal g-current-strategy MIDI-EAGLES)
				=>
				(set-goal g-support-unit archer)
				(up-modify-goal g-desired-num-archer c:max 29)
				)

			#end-if

			#load-if-defined INCAN-CIV

				(defrule
				(goal g-support-unit PENDING)
				(goal g-current-strategy MIDI-EAGLES)
				=>
				(set-goal g-support-unit slinger)
				(up-modify-goal g-desired-num-slinger c:max 29)
				)

			#end-if

			#load-if-defined MAYAN-CIV

				(defrule
				(goal g-support-unit PENDING)
				(goal g-current-strategy MIDI-EAGLES)
				=>
				(set-goal g-support-unit my-unique-unit)
				(up-modify-goal g-desired-num-unique-unit c:max 29)
				)

			#end-if

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy LATEI-CHAMPIONS)
			(up-compare-const LIGHT-CAVALRY-AVAILABLE == YES)
			=>
			(set-goal g-support-unit skirmisher)
			(up-modify-goal g-desired-num-skirmisher c:max 30)
			(up-modify-goal g-desired-num-scout-cavalry c:max 12)
			)

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy LATEI-CHAMPIONS)
			(up-compare-const LIGHT-CAVALRY-AVAILABLE == NO)
			=>
			(set-goal g-support-unit skirmisher)
			(up-modify-goal g-desired-num-skirmisher c:max 37)
			(up-modify-goal g-desired-num-spearman c:max 12)
			)

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy LATEI-TRASH)
			(up-compare-const LIGHT-CAVALRY-AVAILABLE == YES)
			=>
			(set-goal g-support-unit spearman)
			(up-modify-goal g-desired-num-spearman c:max 28)
			(up-modify-goal g-desired-num-scout-cavalry c:max 22)
			)

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy LATEI-TRASH)
			(up-compare-const LIGHT-CAVALRY-AVAILABLE == NO)
			=>
			(set-goal g-support-unit spearman)
			(up-modify-goal g-desired-num-spearman c:max 38)
			)

			(defrule
			(goal g-support-unit PENDING)
			(goal g-current-strategy LATEI-TRASHBOWS)
			=>
			(set-goal g-support-unit scout-cavalry)
			(up-modify-goal g-desired-num-scout-cavalry c:max 30)
			)

			(defrule
			(goal g-current-strategy LATEI-UNIQUE)
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			(up-compare-const LIGHT-CAVALRY-AVAILABLE == YES)
			=>
			(set-goal g-support-unit skirmisher)
			(up-modify-goal g-desired-num-skirmisher c:max 30)
			(up-modify-goal g-desired-num-scout-cavalry c:max 12)
			)

			(defrule
			(goal g-current-strategy LATEI-UNIQUE)
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			(up-compare-const LIGHT-CAVALRY-AVAILABLE == NO)
			=>
			(set-goal g-support-unit skirmisher)
			(up-modify-goal g-desired-num-skirmisher c:max 30)
			(up-modify-goal g-desired-num-spearman c:max 12)
			)

	;-----------
	;	Monks
	;-----------

		(defrule
		(current-age == castle-age)
		(up-compare-goal g-age-status >= MID-CASTLE)
		=>
		(up-modify-goal g-desired-num-monk c:max 2)
		)

		(defrule
		(current-age == imperial-age)
		=>
		(up-modify-goal g-desired-num-monk c:max 1)
		)

	;-------------------
	;	Trebs/Cannons
	;-------------------

		(defrule
		(up-compare-goal g-age-status >= TO-IMPERIAL)
		(up-compare-goal g-age-status < LATE-IMPERIAL)
		(up-compare-const BOMBARD-CANNON-AVAILABLE == YES)
		=>
		(set-goal g-desired-num-bombard-cannon 5)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-IMPERIAL)
		(up-compare-goal g-age-status < LATE-IMPERIAL)
		(or
			(up-compare-const BOMBARD-CANNON-AVAILABLE == NO)
			(and
				(unit-available bombard-cannon)
				(building-type-count siege-workshop > 0)))
		=>
		(set-goal g-desired-num-trebuchet 5)
		)

		(defrule
		(up-compare-goal g-age-status >= LATE-IMPERIAL)
		(up-compare-const BOMBARD-CANNON-AVAILABLE == YES)
		=>
		(set-goal g-desired-num-bombard-cannon 1)
		)

		(defrule
		(up-compare-goal g-age-status >= LATE-IMPERIAL)
		(or
			(up-compare-const BOMBARD-CANNON-AVAILABLE == NO)
			(and
				(unit-available bombard-cannon)
				(building-type-count siege-workshop > 0)))
		=>
		(set-goal g-desired-num-trebuchet 1)
		)

	;--------------------
	;	Battering Rams
	;--------------------

		(defrule
		(current-age == castle-age)
		(up-compare-goal g-age-status >= MID-CASTLE)
		(up-compare-goal g-primary-unit-class != archery-class)
		(up-compare-goal g-primary-unit-class != archery-cannon-class)
		(or
			(up-compare-goal g-target-pop-parity >= 5)
			(or
				(military-population >= 20)
				(and
					(up-compare-goal g-game-focus != BOOM)
					(military-population >= 12))))
		(or
			(goal g-town-under-attack NO)
			(up-compare-goal g-enemy-buildings-in-town > 0))
		=>
		(set-goal g-desired-num-battering-ram 3)
		)

		(defrule
		(current-age == castle-age)
		(up-compare-goal g-age-status >= MID-CASTLE)
		(or
			(goal g-primary-unit-class archery-class)
			(goal g-primary-unit-class archery-cannon-class))
		(or
			(up-compare-goal g-target-pop-parity >= 5)
			(or
				(military-population >= 20)
				(and
					(up-compare-goal g-game-focus != BOOM)
					(military-population >= 12))))
		(or
			(goal g-town-under-attack NO)
			(up-compare-goal g-enemy-buildings-in-town > 0))
		=>
		(set-goal g-desired-num-battering-ram 1)
		)

		(defrule
		(current-age == imperial-age)
		(or
			(building-type-count castle < 2)
			(or
				(unit-type-count trebuchet-set < 2)
				(goal g-age-status LATE-IMPERIAL)))
		(or
			(up-compare-goal g-target-pop-parity >= 5)
			(military-population >= 20))
		(or
			(goal g-town-under-attack NO)
			(up-compare-goal g-enemy-buildings-in-town > 0))
		=>
		(set-goal g-desired-num-battering-ram 5)
		)

	;---------------
	;	Mangonels
	;---------------

		(defrule
		(current-age >= castle-age)
		(or
			(goal g-game-focus DEFENSIVE)
			(goal g-game-focus REBUILD))
		(up-compare-goal g-enemy-heavy-cavalry-count < 5)
		(up-compare-goal g-enemy-light-cavalry-count < 5)
		(up-compare-goal g-enemy-eagle-warrior-count < 5)
		=>
		(up-modify-goal g-desired-num-mangonel c:max 1)
		)

		(defrule
		(current-age >= castle-age)
		(or
			(goal g-primary-unit-class archery-class)
			(or
				(goal g-primary-unit-class archery-cannon-class)
				(goal g-primary-unit-class monastery-class)))
		(up-compare-goal g-enemy-heavy-cavalry-count < 8)
		(up-compare-goal g-enemy-light-cavalry-count < 8)
		(up-compare-goal g-enemy-eagle-warrior-count < 8)
		=>
		(up-modify-goal g-desired-num-mangonel c:max 2)
		)

	;----------------------------------------------------------------
	;	Increase military pop when we've completed important techs
	;----------------------------------------------------------------

		(defrule
		(up-compare-goal g-primary-unit-tech-progress >= ALL-IMPERIAL-COMPLETE)
		(up-compare-goal g-support-unit-tech-progress >= ALL-IMPERIAL-COMPLETE)
		(up-compare-goal g-eco-tech-progress >= ALL-IMPERIAL-COMPLETE)
		=>
		(up-modify-goal g-desired-num-military c:+ 15)
		)

	;---------------------------------------------
	;	Stop Training Primary Unit If Necessary
	;---------------------------------------------

		;Countered by Swordsmen
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit eagle-warrior)
		(goal g-primary-enemy-threat g-enemy-swordsmen-count)
		(up-compare-goal g-enemy-swordsmen-count >= 7)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-eagle-warrior 0)
		; (up-modify-goal g-primary-unit g:= g-support-unit)
		; (set-goal g-support-unit PENDING)
		)

		;Countered by Spearmen
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit knight)
		(goal g-primary-enemy-threat g-enemy-spearmen-count)
		(up-compare-goal g-enemy-spearmen-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-knight 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit camel)
		(goal g-primary-enemy-threat g-enemy-spearmen-count)
		(up-compare-goal g-enemy-spearmen-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-camel 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit battle-elephant)
		(goal g-primary-enemy-threat g-enemy-spearmen-count)
		(up-compare-goal g-enemy-spearmen-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-battle-elephant 0)
		)
		
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit steppe-lancer)
		(goal g-primary-enemy-threat g-enemy-spearmen-count)
		(up-compare-goal g-enemy-spearmen-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-steppe-lancer 0)
		)
		
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit cavalry-archer)
		(goal g-primary-enemy-threat g-enemy-spearmen-count)
		(up-compare-goal g-enemy-spearmen-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-cavalry-archer 0)
		)
		
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit genitour)
		(goal g-primary-enemy-threat g-enemy-spearmen-count)
		(up-compare-goal g-enemy-spearmen-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-genitour 0)
		)

		;Countered by eagle warriors
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit spearman)
		(goal g-primary-enemy-threat g-enemy-eagle-warrior-count)
		(up-compare-goal g-enemy-eagle-warrior-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-spearman 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit archer)
		(goal g-primary-enemy-threat g-enemy-eagle-warrior-count)
		(up-compare-goal g-enemy-eagle-warrior-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-archer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit cavalry-archer)
		(goal g-primary-enemy-threat g-enemy-eagle-warrior-count)
		(up-compare-goal g-enemy-eagle-warrior-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-hand-cannoneer > 0)
		=>
		(set-goal g-desired-num-cavalry-archer 0)
		)
		
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit skirmisher)
		(goal g-primary-enemy-threat g-enemy-eagle-warrior-count)
		(up-compare-goal g-enemy-eagle-warrior-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-skirmisher 0)
		)
		
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit monk)
		(goal g-primary-enemy-threat g-enemy-eagle-warrior-count)
		(up-compare-goal g-enemy-eagle-warrior-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-monk 0)
		)

		;Countered by Condottieri
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit hand-cannoneer)
		(goal g-primary-enemy-threat g-enemy-condottiero-count)
		(up-compare-goal g-enemy-condottiero-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-hand-cannoneer 0)
		)

		;Countered by Foot Archers
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit militiaman)
		(goal g-primary-enemy-threat g-enemy-foot-archers-count)
		(up-compare-goal g-enemy-foot-archers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-militia 0)
		)
		
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit spearman)
		(goal g-primary-enemy-threat g-enemy-foot-archers-count)
		(up-compare-goal g-enemy-foot-archers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-spearman 0)
		)
		
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit archer)
		(goal g-primary-enemy-threat g-enemy-foot-archers-count)
		(up-compare-goal g-enemy-foot-archers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(or
			(up-compare-goal g-desired-num-skirmisher > 0)
			(up-compare-goal g-desired-num-genitour > 0))
		=>
		(set-goal g-desired-num-archer 0)
		)
		
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit camel)
		(goal g-primary-enemy-threat g-enemy-foot-archers-count)
		(up-compare-goal g-enemy-foot-archers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-camel 0)
		)
		
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit battle-elephant)
		(goal g-primary-enemy-threat g-enemy-foot-archers-count)
		(up-compare-goal g-enemy-foot-archers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(or
			(up-compare-goal g-desired-num-scout-cavalry > 0)
			(up-compare-goal g-desired-num-knight > 0))
		=>
		(set-goal g-desired-num-battle-elephant 0)
		)

		;Countered by Skirmishers
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit militiaman)
		(goal g-primary-enemy-threat g-enemy-skirmishers-count)
		(up-compare-goal g-enemy-skirmishers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-eagle-warrior > 0)
		=>
		(set-goal g-desired-num-militia 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit spearman)
		(goal g-primary-enemy-threat g-enemy-skirmishers-count)
		(up-compare-goal g-enemy-skirmishers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-spearman 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit archer)
		(goal g-primary-enemy-threat g-enemy-skirmishers-count)
		(up-compare-goal g-enemy-skirmishers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-archer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit cavalry-archer)
		(goal g-primary-enemy-threat g-enemy-skirmishers-count)
		(up-compare-goal g-enemy-skirmishers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-cavalry-archer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit hand-cannoneer)
		(goal g-primary-enemy-threat g-enemy-skirmishers-count)
		(up-compare-goal g-enemy-skirmishers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-hand-cannoneer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit slinger)
		(goal g-primary-enemy-threat g-enemy-skirmishers-count)
		(up-compare-goal g-enemy-skirmishers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-slinger 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit camel)
		(goal g-primary-enemy-threat g-enemy-skirmishers-count)
		(up-compare-goal g-enemy-skirmishers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(or
			(up-compare-goal g-desired-num-scout-cavalry > 0)
			(up-compare-goal g-desired-num-knight > 0))
		=>
		(set-goal g-desired-num-camel 0)
		)

		;Countered by Cavalry Archers
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit militiaman)
		(goal g-primary-enemy-threat g-enemy-cavalry-archers-count)
		(up-compare-goal g-enemy-cavalry-archers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-militia 0)
		)

		(defrule		;spearmen don't counter cav archers if they are in small numbers
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit spearman)
		(goal g-primary-enemy-threat g-enemy-cavalry-archers-count)
		(up-compare-goal g-enemy-cavalry-archers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-spearman 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit archer)
		(goal g-primary-enemy-threat g-enemy-cavalry-archers-count)
		(up-compare-goal g-enemy-cavalry-archers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(or
			(up-compare-goal g-desired-num-skirmisher > 0)
			(up-compare-goal g-desired-num-genitour > 0))
		=>
		(set-goal g-desired-num-archer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit battle-elephant)
		(goal g-primary-enemy-threat g-enemy-cavalry-archers-count)
		(up-compare-goal g-enemy-cavalry-archers-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-battle-elephant 0)
		)

		;Countered by Hand Cannoneers or Slingers
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit militiaman)
		(goal g-primary-enemy-threat g-enemy-hand-cannoneer-slinger-count)
		(up-compare-goal g-enemy-hand-cannoneer-slinger-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-militia 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit spearman)
		(goal g-primary-enemy-threat g-enemy-hand-cannoneer-slinger-count)
		(up-compare-goal g-enemy-hand-cannoneer-slinger-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-spearman 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit eagle-warrior)
		(goal g-primary-enemy-threat g-enemy-hand-cannoneer-slinger-count)
		(up-compare-goal g-enemy-hand-cannoneer-slinger-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-eagle-warrior 0)
		)

		;Countered by Light Cavalry
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit militiaman)
		(goal g-primary-enemy-threat g-enemy-light-cavalry-count)
		(up-compare-goal g-enemy-light-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-spearman > 0)
		=>
		(set-goal g-desired-num-militia 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit archer)
		(goal g-primary-enemy-threat g-enemy-light-cavalry-count)
		(up-compare-goal g-enemy-light-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-archer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit skirmisher)
		(goal g-primary-enemy-threat g-enemy-light-cavalry-count)
		(up-compare-goal g-enemy-light-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-skirmisher 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit hand-cannoneer)
		(goal g-primary-enemy-threat g-enemy-light-cavalry-count)
		(up-compare-goal g-enemy-light-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-hand-cannoneer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit monk)
		(goal g-primary-enemy-threat g-enemy-light-cavalry-count)
		(up-compare-goal g-enemy-light-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-monk 0)
		)

		;Countered by Heavy Cavalry
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit militiaman)
		(goal g-primary-enemy-threat g-enemy-heavy-cavalry-count)
		(up-compare-goal g-enemy-heavy-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-spearman > 0)
		=>
		(set-goal g-desired-num-militia 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit archer)
		(goal g-primary-enemy-threat g-enemy-heavy-cavalry-count)
		(up-compare-goal g-enemy-heavy-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-archer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit skirmisher)
		(goal g-primary-enemy-threat g-enemy-heavy-cavalry-count)
		(up-compare-goal g-enemy-heavy-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-skirmisher 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit hand-cannoneer)
		(goal g-primary-enemy-threat g-enemy-heavy-cavalry-count)
		(up-compare-goal g-enemy-heavy-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-hand-cannoneer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit scout-cavalry)
		(goal g-primary-enemy-threat g-enemy-heavy-cavalry-count)
		(up-compare-goal g-enemy-heavy-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-scout-cavalry 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit knight)
		(goal g-primary-enemy-threat g-enemy-heavy-cavalry-count)
		(up-compare-goal g-enemy-heavy-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-camel > 0)
		=>
		(set-goal g-desired-num-knight 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit steppe-lancer)
		(goal g-primary-enemy-threat g-enemy-heavy-cavalry-count)
		(up-compare-goal g-enemy-heavy-cavalry-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-camel > 0)
		=>
		(set-goal g-desired-num-steppe-lancer 0)
		)

		;Countered by Camels
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit condottiero)
		(goal g-primary-enemy-threat g-enemy-camel-count)
		(up-compare-goal g-enemy-camel-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-spearman > 0)
		=>
		(set-goal g-desired-num-condottiero 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit skirmisher)
		(goal g-primary-enemy-threat g-enemy-camel-count)
		(up-compare-goal g-enemy-camel-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-skirmisher 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit cavalry-archer)
		(goal g-primary-enemy-threat g-enemy-camel-count)
		(up-compare-goal g-enemy-camel-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-cavalry-archer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit genitour)
		(goal g-primary-enemy-threat g-enemy-camel-count)
		(up-compare-goal g-enemy-camel-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-genitour 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit scout-cavalry)
		(goal g-primary-enemy-threat g-enemy-camel-count)
		(up-compare-goal g-enemy-camel-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-scout-cavalry 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit knight)
		(goal g-primary-enemy-threat g-enemy-camel-count)
		(up-compare-goal g-enemy-camel-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-knight 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit battle-elephant)
		(goal g-primary-enemy-threat g-enemy-camel-count)
		(up-compare-goal g-enemy-camel-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-battle-elephant 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit steppe-lancer)
		(goal g-primary-enemy-threat g-enemy-camel-count)
		(up-compare-goal g-enemy-camel-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-steppe-lancer 0)
		)

		;Countered by Elephants
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit militiaman)
		(goal g-primary-enemy-threat g-enemy-elephants-count)
		(up-compare-goal g-enemy-elephants-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-spearman > 0)
		=>
		(set-goal g-desired-num-militia 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit eagle-warrior)
		(goal g-primary-enemy-threat g-enemy-elephants-count)
		(up-compare-goal g-enemy-elephants-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-spearman > 0)
		=>
		(set-goal g-desired-num-eagle-warrior 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit condottiero)
		(goal g-primary-enemy-threat g-enemy-elephants-count)
		(up-compare-goal g-enemy-elephants-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-spearman > 0)
		=>
		(set-goal g-desired-num-condottiero 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit scout-cavalry)
		(goal g-primary-enemy-threat g-enemy-elephants-count)
		(up-compare-goal g-enemy-elephants-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-camel > 0)
		=>
		(set-goal g-desired-num-scout-cavalry 0)
		)

		;Countered by Field Siege
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit spearman)
		(goal g-primary-enemy-threat g-enemy-field-siege-count)
		(up-compare-goal g-enemy-field-siege-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-eagle-warrior > 0)
		=>
		(set-goal g-desired-num-spearman 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit archer)
		(goal g-primary-enemy-threat g-enemy-field-siege-count)
		(up-compare-goal g-enemy-field-siege-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-archer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit skirmisher)
		(goal g-primary-enemy-threat g-enemy-field-siege-count)
		(up-compare-goal g-enemy-field-siege-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-skirmisher 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit hand-cannoneer)
		(goal g-primary-enemy-threat g-enemy-field-siege-count)
		(up-compare-goal g-enemy-field-siege-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-hand-cannoneer 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit battle-elephant)
		(goal g-primary-enemy-threat g-enemy-field-siege-count)
		(up-compare-goal g-enemy-field-siege-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-scout-cavalry > 0)
		=>
		(set-goal g-desired-num-battle-elephant 0)
		)

		;Countered by Monks
		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit militiaman)
		(goal g-primary-enemy-threat g-enemy-monks-count)
		(up-compare-goal g-enemy-monks-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-eagle-warrior > 0)
		=>
		(set-goal g-desired-num-militia 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit spearman)
		(goal g-primary-enemy-threat g-enemy-monks-count)
		(up-compare-goal g-enemy-monks-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-eagle-warrior > 0)
		=>
		(set-goal g-desired-num-spearman 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit knight)
		(goal g-primary-enemy-threat g-enemy-monks-count)
		(up-compare-goal g-enemy-monks-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-knight 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit camel)
		(goal g-primary-enemy-threat g-enemy-monks-count)
		(up-compare-goal g-enemy-monks-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-camel 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit battle-elephant)
		(goal g-primary-enemy-threat g-enemy-monks-count)
		(up-compare-goal g-enemy-monks-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		=>
		(set-goal g-desired-num-battle-elephant 0)
		)

		(defrule
		; (goal g-game-focus DEFENSIVE)
		(military-population < 15)
		(goal g-primary-unit steppe-lancer)
		(goal g-primary-enemy-threat g-enemy-monks-count)
		(up-compare-goal g-enemy-monks-count >= 5)
		(up-compare-goal g-support-unit != PENDING)
		(up-compare-goal g-desired-num-scout-cavalry > 0)
		=>
		(set-goal g-desired-num-steppe-lancer 0)
		)

	;-----------------------------
	;	Adjust Military Numbers
	;-----------------------------
	
		(load "The General 3/Functions/Reset")

		(defrule
		(current-age >= castle-age)
		=>
		(up-modify-goal g-temp g:= g-desired-num-militia)
		(up-modify-goal g-temp g:+ g-desired-num-spearman)
		(up-modify-goal g-temp g:+ g-desired-num-eagle-warrior)
		(up-modify-goal g-temp g:+ g-desired-num-archer)
		(up-modify-goal g-temp g:+ g-desired-num-skirmisher)
		(up-modify-goal g-temp g:+ g-desired-num-cavalry-archer)
		(up-modify-goal g-temp g:+ g-desired-num-hand-cannoneer)
		(up-modify-goal g-temp g:+ g-desired-num-scout-cavalry)
		(up-modify-goal g-temp g:+ g-desired-num-knight)
		(up-modify-goal g-temp g:+ g-desired-num-camel)
		(up-modify-goal g-temp g:+ g-desired-num-unique-unit)
		(up-modify-goal g-temp g:+ g-desired-num-genitour)
		(up-modify-goal g-temp g:+ g-desired-num-slinger)
		(up-modify-goal g-temp g:+ g-desired-num-condottiero)
		(up-modify-goal g-temp g:+ g-desired-num-battle-elephant)
		)

		(defrule
		(current-age >= castle-age)
		=>
		(up-modify-goal g-temp g:+ g-desired-num-steppe-lancer)
		(up-modify-goal g-temp-2 g:= g-desired-num-military)
		(up-modify-goal g-temp-2 g:%/ g-temp)
		(up-modify-goal g-desired-num-militia g:%* g-temp-2)
		(up-modify-goal g-desired-num-spearman g:%* g-temp-2)
		(up-modify-goal g-desired-num-eagle-warrior g:%* g-temp-2)
		(up-modify-goal g-desired-num-archer g:%* g-temp-2)
		(up-modify-goal g-desired-num-skirmisher g:%* g-temp-2)
		(up-modify-goal g-desired-num-cavalry-archer g:%* g-temp-2)
		(up-modify-goal g-desired-num-hand-cannoneer g:%* g-temp-2)
		(up-modify-goal g-desired-num-scout-cavalry g:%* g-temp-2)
		(up-modify-goal g-desired-num-knight g:%* g-temp-2)
		(up-modify-goal g-desired-num-camel g:%* g-temp-2)
		)

		(defrule
		(current-age >= castle-age)
		=>
		(up-modify-goal g-desired-num-unique-unit g:%* g-temp-2)
		(up-modify-goal g-desired-num-genitour g:%* g-temp-2)
		(up-modify-goal g-desired-num-slinger g:%* g-temp-2)
		(up-modify-goal g-desired-num-condottiero g:%* g-temp-2)
		(up-modify-goal g-desired-num-battle-elephant g:%* g-temp-2)
		(up-modify-goal g-desired-num-steppe-lancer g:%* g-temp-2)
		)

		#load-if-defined MALAY-CIV

			(defrule
			(up-compare-goal g-desired-num-unique-unit > 0)
			=>
			(up-modify-goal g-desired-num-unique-unit c:* 2)
			)

		#end-if

;=========================<>=========================
;		   PRIMARY AND SUPPORT UNIT NUMBERS
;=========================<>=========================

	(defrule
	(goal g-primary-unit militiaman)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-militia)
	)

	(defrule
	(goal g-primary-unit spearman)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-spearman)
	)

	(defrule
	(goal g-primary-unit eagle-warrior)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-eagle-warrior)
	)

	(defrule
	(goal g-primary-unit condottiero)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-condottiero)
	)

	(defrule
	(goal g-primary-unit archer)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-archer)
	)

	(defrule
	(goal g-primary-unit skirmisher)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-skirmisher)
	)

	(defrule
	(goal g-primary-unit cavalry-archer)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-cavalry-archer)
	)

	(defrule
	(goal g-primary-unit hand-cannoneer)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-hand-cannoneer)
	)

	(defrule
	(goal g-primary-unit slinger)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-slinger)
	)

	(defrule
	(goal g-primary-unit genitour)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-genitour)
	)

	(defrule
	(goal g-primary-unit scout-cavalry)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-scout-cavalry)
	)

	(defrule
	(goal g-primary-unit knight)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-knight)
	)

	(defrule
	(goal g-primary-unit camel)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-camel)
	)

	(defrule
	(goal g-primary-unit battle-elephant)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-battle-elephant)
	)

	(defrule
	(goal g-primary-unit steppe-lancer)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-steppe-lancer)
	)

	(defrule
	(goal g-primary-unit my-unique-unit)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-unique-unit)
	)

	(defrule
	(goal g-primary-unit monk)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-monk)
	)

	(defrule
	(goal g-primary-unit missionary)
	=>
	(up-modify-goal g-desired-num-primary-unit g:= g-desired-num-missionary)
	)

	(defrule
	(goal g-support-unit militiaman)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-militia)
	)

	(defrule
	(goal g-support-unit spearman)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-spearman)
	)

	(defrule
	(goal g-support-unit eagle-warrior)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-eagle-warrior)
	)

	(defrule
	(goal g-support-unit condottiero)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-condottiero)
	)

	(defrule
	(goal g-support-unit archer)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-archer)
	)

	(defrule
	(goal g-support-unit skirmisher)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-skirmisher)
	)

	(defrule
	(goal g-support-unit cavalry-archer)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-cavalry-archer)
	)

	(defrule
	(goal g-support-unit hand-cannoneer)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-hand-cannoneer)
	)

	(defrule
	(goal g-support-unit slinger)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-slinger)
	)

	(defrule
	(goal g-support-unit genitour)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-genitour)
	)

	(defrule
	(goal g-support-unit scout-cavalry)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-scout-cavalry)
	)

	(defrule
	(goal g-support-unit knight)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-knight)
	)

	(defrule
	(goal g-support-unit camel)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-camel)
	)

	(defrule
	(goal g-support-unit battle-elephant)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-battle-elephant)
	)

	(defrule
	(goal g-support-unit steppe-lancer)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-steppe-lancer)
	)

	(defrule
	(goal g-support-unit my-unique-unit)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-unique-unit)
	)

	(defrule
	(goal g-support-unit monk)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-monk)
	)

	(defrule
	(goal g-support-unit missionary)
	=>
	(up-modify-goal g-desired-num-support-unit g:= g-desired-num-missionary)
	)

;=========================<>=========================
;				   MILITARY GROUPS
;=========================<>=========================

	;----------------------------------
	;	GOAL: g-desired-num-infantry
	;----------------------------------

		(defrule
		(true)
		=>
		(up-modify-goal g-desired-num-infantry g:= g-desired-num-militia)
		(up-modify-goal g-desired-num-infantry g:+ g-desired-num-spearman)
		(up-modify-goal g-desired-num-infantry g:+ g-desired-num-eagle-warrior)
		(up-modify-goal g-desired-num-infantry g:+ g-desired-num-condottiero)
		)

		(defrule
		(or
			(civ-selected aztec)
			(or
				(civ-selected celtic)
				(or
					(civ-selected frankish)
					(or
						(civ-selected gothic)
						(or
							(civ-selected japanese)
							(civ-selected teutonic))))))
		=>
		(up-modify-goal g-desired-num-infantry g:+ g-desired-num-unique-unit)
		)

		(defrule
		(or
			(civ-selected viking)
			(or
				(civ-selected incan)
				(or
					(civ-selected ethiopian)
					(or
						(civ-selected malian)
						(civ-selected malay)))))
		=>
		(up-modify-goal g-desired-num-infantry g:+ g-desired-num-unique-unit)
		)

	;----------------------------------
	;	GOAL: g-desired-num-foot-archers
	;----------------------------------

		(defrule
		(true)
		=>
		(up-modify-goal g-desired-num-foot-archers g:= g-desired-num-archer)
		(up-modify-goal g-desired-num-foot-archers g:+ g-desired-num-skirmisher)
		(up-modify-goal g-desired-num-foot-archers g:+ g-desired-num-slinger)
		)

		(defrule
		(or
			(civ-selected briton)
			(or
				(civ-selected chinese)
				(or
					(civ-selected mayan)
					(or
						(civ-selected italian)
						(civ-selected vietnamese)))))
		=>
		(up-modify-goal g-desired-num-foot-archers g:+ g-desired-num-unique-unit)
		)

	;----------------------------------
	;	GOAL: g-desired-num-cavalry-archers
	;----------------------------------

		(defrule
		(true)
		=>
		(up-modify-goal g-desired-num-cavalry-archers g:= g-desired-num-cavalry-archer)
		(up-modify-goal g-desired-num-cavalry-archers g:+ g-desired-num-genitour)
		)

		(defrule
		(or
			(civ-selected korean)
			(or
				(civ-selected mongol)
				(or
					(civ-selected spanish)
					(or
						(civ-selected indian)
						(or
							(civ-selected berbers)
							(or
								(civ-selected burmese)
								(civ-selected cumans)))))))
		=>
		(up-modify-goal g-desired-num-cavalry-archers g:+ g-desired-num-unique-unit)
		)

	;----------------------------------
	;	GOAL: g-desired-num-cavalry
	;----------------------------------

		(defrule
		(true)
		=>
		(up-modify-goal g-desired-num-cavalry g:= g-desired-num-scout-cavalry)
		(up-modify-goal g-desired-num-cavalry g:+ g-desired-num-knight)
		(up-modify-goal g-desired-num-cavalry g:+ g-desired-num-camel)
		(up-modify-goal g-desired-num-cavalry g:+ g-desired-num-battle-elephant)
		(up-modify-goal g-desired-num-cavalry g:+ g-desired-num-steppe-lancer)
		)

		(defrule
		(or
			(civ-selected byzantine)
			(or
				(civ-selected hun)
				(or
					(civ-selected persian)
					(or
						(civ-selected saracen)
						(or
							(civ-selected magyar)
							(civ-selected slavic))))))
		=>
		(up-modify-goal g-desired-num-cavalry g:+ g-desired-num-unique-unit)
		)

		(defrule
		(or
			(civ-selected bulgarians)
			(or
				(civ-selected lithuanians)
				(civ-selected tatars)))
		=>
		(up-modify-goal g-desired-num-cavalry g:+ g-desired-num-unique-unit)
		)

	;----------------------------------
	;	GOAL: g-desired-num-siege
	;----------------------------------

		(defrule
		(true)
		=>
		(up-modify-goal g-desired-num-siege g:= g-desired-num-battering-ram)
		(up-modify-goal g-desired-num-siege g:+ g-desired-num-mangonel)
		(up-modify-goal g-desired-num-siege g:+ g-desired-num-scorpion)
		(up-modify-goal g-desired-num-siege g:+ g-desired-num-bombard-cannon)
		(up-modify-goal g-desired-num-siege g:+ g-desired-num-trebuchet)
		)

		(defrule
		(civ-selected portuguese)
		=>
		(up-modify-goal g-desired-num-siege g:+ g-desired-num-unique-unit)
		)

	;----------------------------------
	;	GOAL: g-desired-num-hand-cannoneers
	;----------------------------------

		(defrule
		(true)
		=>
		(up-modify-goal g-desired-num-hand-cannoneers g:= g-desired-num-hand-cannoneer)
		)

		(defrule
		(or
			(civ-selected turkish)
			(or
				(civ-selected spanish)
				(civ-selected burmese)))
		=>
		(up-modify-goal g-desired-num-hand-cannoneers g:+ g-desired-num-unique-unit)
		)

	;----------------------------------
	;	GOAL: g-desired-num-monks
	;----------------------------------

		(defrule
		(true)
		=>
		(up-modify-goal g-desired-num-monks g:= g-desired-num-monk)
		(up-modify-goal g-desired-num-monks g:+ g-desired-num-missionary)
		)

;=========================<>=========================
;				      CIVILIANS
;=========================<>=========================

	;---------------
	;	Villagers
	;---------------

		(defrule
		(or
			(up-compare-goal g-primary-unit-tech-progress < ALL-IMPERIAL-COMPLETE)
			(or
				(up-compare-goal g-support-unit-tech-progress < ALL-IMPERIAL-COMPLETE)
				(up-compare-goal g-eco-tech-progress < ALL-IMPERIAL-COMPLETE)))
		=>
		(set-goal g-desired-num-villager 140)
		)

		(defrule
		(up-compare-goal g-primary-unit-tech-progress >= ALL-IMPERIAL-COMPLETE)
		(up-compare-goal g-support-unit-tech-progress >= ALL-IMPERIAL-COMPLETE)
		(up-compare-goal g-eco-tech-progress >= ALL-IMPERIAL-COMPLETE)
		=>
		(set-goal g-desired-num-villager 125)
		)

		(defrule
		(current-age >= castle-age)
		(or
			(goal g-game-focus BOOM)
			(or
				(goal g-game-focus REBUILD)
				(goal g-game-focus DEFENSIVE)))
		=>
		(set-goal g-required-num-villager 100)
		)

		(defrule
		(current-age >= castle-age)
		(or
			(goal g-game-focus BALANCED)
			(goal g-game-focus AGGRESSIVE))
		=>
		(set-goal g-required-num-villager 120)
		)

		(defrule
		(current-age == dark-age)
		; (goal g-strategy-type FAST-CASTLE)
		=>
		(set-goal g-required-num-villager 28)
		)

		(defrule
		(current-age == feudal-age)
		; (goal g-strategy-type FAST-CASTLE)
		=>
		(set-goal g-required-num-villager 30)
		)

		;Krush/Crush
		(defrule
		(current-age <= feudal-age)
		(or
			(goal g-current-strategy FC-KRUSH)
			(goal g-current-strategy FC-CRUSH))
		=>
		(up-modify-goal g-required-num-villager c:+ 1)
		)

	;-----------------
	;	Trade Carts
	;-----------------

		(defrule
		(up-compare-goal g-desired-num-trade-cart < 20)
		(up-compare-goal g-age-status >= MID-IMPERIAL)
		(player-in-game any-ally)
		(players-building-type-count any-ally market > 0)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		=>
		(set-goal g-desired-num-trade-cart 20)
		(up-get-fact population-cap 0 g-desired-num-villager)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-military)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-trade-cart)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-monks)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-siege)
		)

		(defrule
		(up-compare-goal g-desired-num-trade-cart < 20)
		(or
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			(game-time >= 2400))
		(game-time < 3000)
		(player-in-game any-ally)
		(players-building-type-count any-ally market > 0)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		=>
		(set-goal g-desired-num-trade-cart 20)
		(up-get-fact population-cap 0 g-desired-num-villager)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-military)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-trade-cart)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-monks)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-siege)
		)

		(defrule
		(up-compare-goal g-desired-num-trade-cart < 45)
		(or
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			(game-time >= 3000))
		(player-in-game any-ally)
		(players-building-type-count any-ally market > 0)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		=>
		(set-goal g-desired-num-trade-cart 45)
		(up-get-fact population-cap 0 g-desired-num-villager)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-military)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-trade-cart)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-monks)
		(up-modify-goal g-desired-num-villager g:- g-desired-num-siege)
		)

		(defrule
		(up-object-type-count c: villager-class g:> g-desired-num-villager)
		(or
			(and
				(military-population <= 15)
				(population > EIGHTY-PERCENT-POP))
			(population > NINETY-FIVE-PERCENT-POP))
		=>
		(delete-unit villager)
		)

		(defrule
		(up-object-type-count c: trade-cart g:> g-desired-num-trade-cart)
		(or
			(and
				(military-population <= 15)
				(population > EIGHTY-PERCENT-POP))
			(population > NINETY-FIVE-PERCENT-POP))
		=>
		(delete-unit trade-cart)
		)

;=========================<>=========================
;				      BUILDINGS
;=========================<>=========================

	(load "The General 3/Functions/Reset")

	;------------------
	;	Town Centers
	;------------------

		(load "The General 3/Functions/Reset")

		;Rebuild
		(defrule
		(up-compare-goal g-desired-num-town-center < 1)
		=>
		(set-goal g-desired-num-town-center 1)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(civilian-population >= 10)
		(up-compare-goal g-desired-num-town-center < 2)
		=>
		(set-goal g-desired-num-town-center 2)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(civilian-population >= 20)
		(up-compare-goal g-desired-num-town-center < 3)
		=>
		(set-goal g-desired-num-town-center 3)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(civilian-population >= 40)
		(up-compare-goal g-desired-num-town-center < 4)
		=>
		(set-goal g-desired-num-town-center 4)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(civilian-population >= 60)
		(up-compare-goal g-desired-num-town-center < 5)
		=>
		(set-goal g-desired-num-town-center 5)
		)

		;Defend
		(defrule
		(goal g-game-focus DEFENSIVE)
		(civilian-population >= 10)
		(up-compare-goal g-desired-num-town-center < 2)
		=>
		(set-goal g-desired-num-town-center 2)
		)

		(defrule
		(goal g-game-focus DEFENSIVE)
		(civilian-population >= 40)
		(building-type-count town-center == 2)
		(up-compare-goal g-desired-num-town-center < 3)
		=>
		(set-goal g-desired-num-town-center 3)
		)

		;Boom
		(defrule
		(goal g-game-focus BOOM)
		(current-age >= castle-age)
		(up-compare-goal g-desired-num-town-center < 3)
		=>
		(set-goal g-desired-num-town-center 3)
		)

		(defrule
		(goal g-game-focus BOOM)
		(current-age >= castle-age)
		(civilian-population >= 80)
		(up-compare-goal g-desired-num-town-center < 4)
		(up-modify-goal g-temp g:= g-desired-num-villager)
		(up-modify-goal g-temp c:- 20)
		(population g:< g-temp)		;not within 20 pop of the number of vils we want
		=>
		(set-goal g-desired-num-town-center 4)
		)

		(defrule
		(goal g-game-focus BOOM)
		(current-age >= castle-age)
		(or
			(civilian-population >= 120)
			(and
				(current-age == imperial-age)
				(civilian-population >= 100)))
		(up-compare-goal g-desired-num-town-center < 5)
		(up-modify-goal g-temp g:= g-desired-num-villager)
		(up-modify-goal g-temp c:- 20)
		(population g:< g-temp)		;not within 20 pop of the number of vils we want
		=>
		(set-goal g-desired-num-town-center 5)
		)

		;Balanced
		(defrule
		(goal g-game-focus BALANCED)
		(current-age >= castle-age)
		(up-compare-goal g-attack-status >= FIRST-CASTLE-ATTACK)
		(or
			(wood-amount > 400)
			(or
				(up-object-type-count c: siege-workshop g:>= g-desired-num-siege-workshop)
				(up-compare-goal g-age-status >= TO-IMPERIAL)))
		(up-compare-goal g-desired-num-town-center < 2)
		=>
		(set-goal g-desired-num-town-center 2)
		)

		(defrule
		(goal g-game-focus BALANCED)
		(current-age >= castle-age)
		(building-type-count-total town-center >= 2)
		(unit-type-count-total villager >= 42)
		(military-population g:>= g-min-military-pop)
		(up-compare-goal g-attack-status >= FIRST-CASTLE-ATTACK)
		(or
			(wood-amount > 400)
			(or
				(up-object-type-count c: siege-workshop g:>= g-desired-num-siege-workshop)
				(up-compare-goal g-age-status >= TO-IMPERIAL)))
		(up-compare-goal g-desired-num-town-center < 3)
		=>
		(set-goal g-desired-num-town-center 3)
		)

		(defrule
		(goal g-game-focus BALANCED)
		(up-compare-goal g-age-status < TO-IMPERIAL)
		(building-type-count-total town-center >= 3)
		(unit-type-count-total villager >= 100)
		(military-population g:>= g-min-military-pop)
		(up-compare-goal g-attack-status >= FIRST-CASTLE-ATTACK)
		(or
			(wood-amount > 400)
			(up-object-type-count c: siege-workshop g:>= g-desired-num-siege-workshop))
		(up-compare-goal g-desired-num-town-center < 4)
		(up-modify-goal g-temp g:= g-desired-num-villager)
		(up-modify-goal g-temp c:- 20)
		(population g:< g-temp)		;not within 20 pop of the number of vils we want
		=>
		(set-goal g-desired-num-town-center 4)
		)
		
		(defrule
		(goal g-game-focus BALANCED)
		(up-compare-goal g-age-status >= TO-IMPERIAL)
		(building-type-count-total town-center >= 3)
		(unit-type-count-total villager >= 100)
		(up-compare-goal g-desired-num-town-center < 4)
		(up-modify-goal g-temp c:= HUNDRED-PERCENT-POP)
		(up-modify-goal g-temp c:- 20)
		(population g:< g-temp)		;not within 20 pop of max population
		=>
		(set-goal g-desired-num-town-center 4)
		)

		(defrule
		(goal g-game-focus BALANCED)
		(current-age == imperial-age)
		(building-type-count-total town-center >= 4)
		(up-compare-goal g-attack-status >= FIRST-IMPERIAL-ATTACK)
		(unit-type-count-total villager >= 120)
		(up-compare-goal g-desired-num-town-center < 5)
		(up-modify-goal g-temp g:= g-desired-num-villager)
		(up-modify-goal g-temp c:- 20)
		(population g:< g-temp)		;not within 20 pop of the number of vils we want
		=>
		(set-goal g-desired-num-town-center 5)
		)

		;Aggressive
		(defrule
		(goal g-game-focus AGGRESSIVE)
		(current-age >= castle-age)
		(up-compare-goal g-attack-status >= FIRST-CASTLE-ATTACK)
		(or
			(up-object-type-count c: siege-workshop g:>= g-desired-num-siege-workshop)
			(unit-type-count-total villager >= 50))
		(up-compare-goal g-desired-num-town-center < 2)
		=>
		(set-goal g-desired-num-town-center 2)
		)

		(defrule
		(goal g-game-focus AGGRESSIVE)
		(current-age >= castle-age)
		(up-compare-goal g-attack-status >= FIRST-CASTLE-ATTACK)
		(or
			(unit-type-count-total villager >= 70)
			(or
				(up-compare-goal g-target-military-parity > 0)
				(up-compare-goal g-target-pop-parity > 0)))
		(up-object-type-count c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-compare-goal g-desired-num-town-center < 3)
		=>
		(set-goal g-desired-num-town-center 3)
		)

		(defrule
		(goal g-game-focus AGGRESSIVE)
		(current-age == castle-age)
		(building-type-count-total town-center >= 3)
		(up-compare-goal g-attack-status >= FIRST-CASTLE-ATTACK)
		(unit-type-count-total villager >= 100)
		(up-compare-goal g-desired-num-town-center < 4)
		(up-modify-goal g-temp g:= g-desired-num-villager)
		(up-modify-goal g-temp c:- 20)
		(population g:< g-temp)		;not within 20 pop of the number of vils we want
		=>
		(set-goal g-desired-num-town-center 4)
		)
		
		(defrule
		(goal g-game-focus AGGRESSIVE)
		(current-age == imperial-age)
		(building-type-count-total town-center >= 3)
		(up-compare-goal g-attack-status >= FIRST-IMPERIAL-ATTACK)
		(unit-type-count-total villager >= 120)
		(up-compare-goal g-desired-num-town-center < 4)
		(up-modify-goal g-temp g:= g-desired-num-villager)
		(up-modify-goal g-temp c:- 20)
		(population g:< g-temp)		;not within 20 pop of the number of vils we want
		=>
		(set-goal g-desired-num-town-center 4)
		)

	;------------
	;	Houses
	;------------

		(load "The General 3/Functions/Reset")

		(defrule
		(true)
		=>
		(up-get-fact building-type-count-total house g-desired-num-house)
		)

		#load-if-not-defined HUN-CIV
		#load-if-not-defined CHINESE-CIV

			(defrule
			(building-type-count-total house < 1)
			=>
			(set-goal g-desired-num-house 1)
			)
			
		#end-if
		#end-if

		#load-if-not-defined INCAN-CIV
			#load-if-not-defined CHINESE-CIV
				;Figure out how many houses are needed and add it
				;to g-desired-num-house
				(defrule
				(current-age == dark-age)
				(up-compare-goal g-true-housing-headroom < 2)
				(population-headroom > 0)
				(building-type-count-total house >= 1)
				(up-pending-objects c: house == 0)
				=>
				(up-modify-goal g-temp g:= g-true-housing-headroom)
				(up-modify-goal g-temp c:- 1)	;matches number in condition above
				(up-modify-goal g-temp c:z/ -5)	;use negative 5 because g-temp is zero or negative at this point
				(up-modify-goal g-temp c:+ 1)
				(up-modify-goal g-desired-num-house g:+ g-temp)
				;(up-chat-data-to-self "Num house: %d" g: g-desired-num-house)
				)
			#else 	;Chinese civ
				;Figure out how many houses are needed and add it
				;to g-desired-num-house
				(defrule
				(game-time > 2)
				(current-age == dark-age)
				(up-compare-goal g-true-housing-headroom < 2)
				(population-headroom > 0)
				(up-pending-objects c: house == 0)
				=>
				(up-modify-goal g-temp g:= g-true-housing-headroom)
				(up-modify-goal g-temp c:- 1)	;matches number in condition above
				(up-modify-goal g-temp c:z/ -5)	;use negative 5 because g-temp is zero or negative at this point
				(up-modify-goal g-temp c:+ 1)
				(up-modify-goal g-desired-num-house g:+ g-temp)
				;(up-chat-data-to-self "Num house: %d" g: g-desired-num-house)
				)
			#end-if

			(defrule
			(current-age == feudal-age)
			(up-compare-goal g-true-housing-headroom < 5)
			(population-headroom > 0)
			(up-pending-objects c: house == 0)
			=>
			(up-modify-goal g-temp g:= g-true-housing-headroom)
			(up-modify-goal g-temp c:- 3)	;matches number in condition above
			(up-modify-goal g-temp c:z/ -5)	;use negative 5 because g-temp is zero or negative at this point
			(up-modify-goal g-temp c:+ 1)
			(up-modify-goal g-desired-num-house g:+ g-temp)
			;(up-chat-data-to-all "Num house: %d" g: g-desired-num-house)
			)

			(defrule
			(current-age >= castle-age)
			(up-compare-goal g-true-housing-headroom < 10)
			(population-headroom > 0)
			(up-pending-objects c: house == 0)
			=>
			(up-modify-goal g-temp g:= g-true-housing-headroom)
			(up-modify-goal g-temp c:- 5)	;matches number in condition above
			(up-modify-goal g-temp c:z/ -5)	;use negative 5 because g-temp is zero or negative at this point
			(up-modify-goal g-temp c:+ 1)
			(up-modify-goal g-desired-num-house g:+ g-temp)
			;(up-chat-data-to-all "Num house: %d" g: g-desired-num-house)
			)

			(defrule
			(current-age >= castle-age)
			(up-compare-goal g-true-housing-headroom < 5)
			(population-headroom > 0)
			(up-pending-objects c: house <= 1)
			=>
			(up-modify-goal g-desired-num-house c:+ 1)
			;(up-chat-data-to-all "Num house: %d" g: g-desired-num-house)
			)
			
		#else	;Incan Civ

			;Figure out how many houses are needed and add it
			;to g-desired-num-house
			(defrule
			(current-age == dark-age)
			(up-compare-goal g-true-housing-headroom < 2)
			(population-headroom > 0)
			(building-type-count-total house >= 1)
			(up-pending-objects c: house == 0)
			=>
			(up-modify-goal g-temp g:= g-true-housing-headroom)
			(up-modify-goal g-temp c:- 1)	;matches number in condition above
			(up-modify-goal g-temp c:z/ -10)	;use negative 10 because g-temp is zero or negative at this point
			(up-modify-goal g-temp c:+ 1)
			(up-modify-goal g-desired-num-house g:+ g-temp)
			;(up-chat-data-to-all "Num house: %d" g: g-desired-num-house)
			)

			(defrule
			(current-age == feudal-age)
			(up-compare-goal g-true-housing-headroom < 5)
			(population-headroom > 0)
			(up-pending-objects c: house == 0)
			=>
			(up-modify-goal g-temp g:= g-true-housing-headroom)
			(up-modify-goal g-temp c:- 3)	;matches number in condition above
			(up-modify-goal g-temp c:z/ -10)	;use negative 10 because g-temp is zero or negative at this point
			(up-modify-goal g-temp c:+ 1)
			(up-modify-goal g-desired-num-house g:+ g-temp)
			;(up-chat-data-to-all "Num house: %d" g: g-desired-num-house)
			)

			(defrule
			(current-age >= castle-age)
			(up-compare-goal g-true-housing-headroom < 10)
			(population-headroom > 0)
			(up-pending-objects c: house == 0)
			=>
			(up-modify-goal g-temp g:= g-true-housing-headroom)
			(up-modify-goal g-temp c:- 5)	;matches number in condition above
			(up-modify-goal g-temp c:z/ -10)	;use negative 10 because g-temp is zero or negative at this point
			(up-modify-goal g-temp c:+ 1)
			(up-modify-goal g-desired-num-house g:+ g-temp)
			;(up-chat-data-to-all "Num house: %d" g: g-desired-num-house)
			)
			
		#end-if

	;-----------
	;	Mills
	;-----------

		(load "The General 3/Functions/Reset")

		;We want mill if we have a lumber camp or we have excess wood and it's time to gather berries
		#load-if-defined JAPANESE-CIV

			(defrule
			(or
				(building-type-count-total lumber-camp > 0)
				(wood-amount > 100))
			(up-gaia-type-count c: forage-class > 0)
			(building-type-count-total mill == 0)
			(or
				(unit-type-count villager >= 14)
				(or
					(and
						(game-time > 180)
						(unit-type-count villager-food == 0))
					(unit-type-count villager-forager > 0)))
			=>
			(up-modify-goal g-desired-num-mill c:max 1)
			)

		#else
		
			(defrule
			(or
				(building-type-count-total lumber-camp > 0)
				(wood-amount > 200))
			(up-gaia-type-count c: forage-class > 0)
			(building-type-count-total mill == 0)
			(or
				(unit-type-count villager >= 14)
				(or
					(and
						(game-time > 180)
						(unit-type-count villager-food == 0))
					(unit-type-count villager-forager > 0)))
			=>
			(up-modify-goal g-desired-num-mill c:max 1)
			)

		#end-if

		;We want a mill if we have foragers and no sheep and initial houses are done
		#load-if-defined HUN-CIV

			(defrule
			(game-time > 2)
			(or
				(unit-type-count villager-forager > 3)
				(goal g-sheep-current-count 0))
			(up-gaia-type-count c: forage-class > 0)
			(building-type-count-total mill == 0)
			=>
			(up-modify-goal g-desired-num-mill c:max 1)
			)

		#else
		
			(defrule
			(game-time > 2)
			(building-type-count house >= 1)
			(or
				(unit-type-count villager-forager > 3)
				(goal g-sheep-current-count 0))
			(up-gaia-type-count c: forage-class > 0)
			(building-type-count-total mill == 0)
			=>
			(up-modify-goal g-desired-num-mill c:max 1)
			)

		#end-if

		(load "The General 3/Functions/Reset")

		;We want second mill if we have extra berries
		(defrule
		(unit-type-count villager-forager > 0)
		(unit-type-count villager >= 22)
		(building-type-count-total mill == 1)
		(up-compare-goal g-desired-num-mill < 2)
		=>
		(set-strategic-number sn-focus-player-number 0)
		(up-full-reset-search)
		(up-set-target-point g-position-self-x)
		(up-filter-distance c: -1 c: 20)
		(up-find-remote c: forage-bush c: 40)
		(up-get-search-state g-local-total)
		)

		(defrule
		(unit-type-count villager-forager > 0)
		(unit-type-count villager >= 22)
		(building-type-count-total mill == 1)
		(up-compare-goal g-desired-num-mill < 2)
		(up-compare-goal g-remote-total > 6)	;more than standard berries
		=>
		(set-goal g-desired-num-mill 2)
		)

		;We want second mill if we have leftover deer

		#load-if-defined WAIT-UNTIL-DUC-MILLS

			(defrule
			;(unit-type-count villager-hunter > 0)
			(unit-type-count villager >= 22)
			(building-type-count-total mill == 1)
			(up-compare-goal g-desired-num-mill < 2)
			(up-compare-goal g-deer-current-count >= 2)
			(dropsite-min-distance deer-hunting >= 5)
			(dropsite-min-distance deer-hunting <= 20)
			(up-compare-goal g-scouting-status >= FIND-ENEMY)
			=>
			(set-goal g-desired-num-mill 2)
			(set-strategic-number sn-preferred-mill-placement 1)	;for deer
			)
			
		#end-if

		;Backup in case we never built a mill after 5 minutes
		(defrule
		(game-time >= 300)
		(building-type-count-total mill == 0)
		(up-compare-goal g-desired-num-mill < 1)
		=>
		(set-goal g-desired-num-mill 1)
		)

	;------------------
	;	Mining Camps
	;------------------

		(defrule
		(game-time > 30)
		(up-gaia-type-count-total c: gold > 0)
		(building-type-count-total lumber-camp > 0)
		(building-type-count-total mining-camp == 0)
		(or
			(and
				(unit-type-count villager-gold > 1)
				(dropsite-min-distance gold > 4))
			(up-compare-goal g-desired-num-gold-vils > 0))
		(dropsite-min-distance gold < 30)
		=>
		(set-goal g-need-gold-camp YES)
		(up-modify-goal g-desired-num-mining-camp c:max 1)
		)


		(defrule
		(game-time > 30)
		(up-gaia-type-count-total c: stone > 0)
		(building-type-count-total lumber-camp > 0)
		(building-type-count-total mining-camp <= 2)
		(or
			(and
				(unit-type-count villager-stone > 1)
				(dropsite-min-distance stone > 4))
			(up-compare-goal g-desired-num-stone-vils > 0))
		(dropsite-min-distance stone < 30)
		=>
		(set-goal g-need-stone-camp YES)
		(up-modify-goal g-desired-num-mining-camp c:+ 1)
		(up-modify-goal g-desired-num-mining-camp c:max 2)
		)

		(load "The General 3/Functions/Reset")

		;Request enough mining camps to ensure max 7 gold miners per mining camp or TC
		;First find how many TCs and mining camps are close to gold, stored in g-temp
		(defrule
		(unit-type-count villager-gold > 7)
		(building-type-count town-center > 0)
		(dropsite-min-distance gold < 255)	;still gold on the map
		(or
			(building-type-count-total town-center >= 2)
			(unit-type-count villager >= 50))
		=>
		(up-full-reset-search)
		(up-find-local c: town-center c: 20)
		(up-find-local c: mining-camp c: 20)
		(up-filter-status c: status-pending c: list-active)
		(up-find-status-local c: town-center-foundation c: 5)
		(up-find-status-local c: mining-camp c: 5)
		(up-get-search-state g-local-total)
		;(up-chat-data-to-self "Total TCs and MCs: %d" g: g-local-total)
		(set-goal i 0)
		(set-goal g-temp 0)
		)

			(defrule
			(up-compare-goal i g:< g-local-total)
			(unit-type-count villager-gold > 7)
			(building-type-count town-center > 0)
			(dropsite-min-distance gold < 255)	;still gold on the map
			(or
				(building-type-count-total town-center >= 2)
				(unit-type-count villager >= 50))
			(up-set-target-object search-local g: i)
			=>
			(up-get-point position-object g-point-x)
			(up-set-target-point g-point-x)
			(up-reset-search 0 0 1 1)
			(up-reset-filters)
			(up-filter-distance c: -1 c: 6)
			(up-filter-status c: status-resource c: list-active)
			(up-find-resource c: gold c: 1)
			(up-get-search-state g-local-total)
			)

			(defrule
			(up-compare-goal i g:< g-local-total)
			(unit-type-count villager-gold > 7)
			(building-type-count town-center > 0)
			(dropsite-min-distance gold < 255)	;still gold on the map
			(or
				(building-type-count-total town-center >= 2)
				(unit-type-count villager >= 50))
			(up-set-target-object search-local g: i)
			(up-compare-goal g-remote-total > 0)            ;gold mines found
			=>
			(up-modify-goal i c:+ 1)
			(up-modify-goal g-temp c:+ 1)
			(up-jump-rule -2)
			)

			(defrule
			(up-compare-goal i g:< g-local-total)
			(unit-type-count villager-gold > 7)
			(building-type-count town-center > 0)
			(dropsite-min-distance gold < 255)	;still gold on the map
			(or
				(building-type-count-total town-center >= 2)
				(unit-type-count villager >= 50))
			(up-set-target-object search-local g: i)
			(goal g-remote-total 0)            ;no gold found
			=>
			(up-modify-goal i c:+ 1)
			(up-jump-rule -3)
			)

		;Calculate number of mining camps needed
		;Formula = Num miners / 7 (rounded up), minus the number of TCs and mining camps close to gold
		(defrule
		(unit-type-count villager-gold > 7)
		(building-type-count town-center > 0)
		(dropsite-min-distance gold < 255)	;still gold on the map
		(or
			(building-type-count-total town-center >= 2)
			(unit-type-count villager >= 50))
		(up-get-fact unit-type-count villager-gold g-temp-2)
		(up-modify-goal g-temp-2 c:z/ 7)
		(up-modify-goal g-temp-2 c:+ 1)
		(up-modify-goal g-temp-2 g:- g-temp)		;g-temp = number of TCs and mining camps close to gold
		(up-compare-goal g-temp-2 > 0)
		=>
		(set-goal g-need-gold-camp YES)
		(up-get-fact building-type-count-total mining-camp g-desired-num-mining-camp)
		(up-modify-goal g-desired-num-mining-camp c:+ 1)
		;(up-chat-data-to-self "Need new gold camp #%d" g: g-desired-num-mining-camp)
		)

		(load "The General 3/Functions/Reset")

		;Request enough mining camps to ensure max 7 stone miners per mining camp or TC
		;First find how many TCs are close to stone, stored in g-temp
		(defrule
		(unit-type-count villager-stone > 7)
		(building-type-count town-center > 0)
		(dropsite-min-distance stone < 255)	;still stone on the map
		(or
			(building-type-count-total town-center >= 2)
			(unit-type-count villager >= 50))
		=>
		(up-full-reset-search)
		(up-find-local c: town-center c: 20)
		(up-find-local c: mining-camp c: 20)
		(up-filter-status c: status-pending c: list-active)
		(up-find-status-local c: town-center-foundation c: 5)
		(up-find-status-local c: mining-camp c: 5)
		(up-get-search-state g-local-total)
		(set-goal i 0)
		(set-goal g-temp 0)
		)

			(defrule
			(up-compare-goal i g:< g-local-total)
			(unit-type-count villager-stone > 7)
			(building-type-count town-center > 0)
			(dropsite-min-distance stone < 255)	;still stone on the map
			(or
				(building-type-count-total town-center >= 2)
				(unit-type-count villager >= 50))
			(up-set-target-object search-local g: i)
			=>
			(up-get-point position-object g-point-x)
			(up-set-target-point g-point-x)
			(up-reset-search 0 0 1 1)
			(up-reset-filters)
			(up-filter-distance c: -1 c: 6)
			(up-filter-status c: status-resource c: list-active)
			(up-find-resource c: stone c: 1)
			(up-get-search-state g-local-total)
			)

			(defrule
			(up-compare-goal i g:< g-local-total)
			(unit-type-count villager-stone > 7)
			(building-type-count town-center > 0)
			(dropsite-min-distance stone < 255)	;still stone on the map
			(or
				(building-type-count-total town-center >= 2)
				(unit-type-count villager >= 50))
			(up-set-target-object search-local g: i)
			(up-compare-goal g-remote-total > 0)            ;stone mines found
			=>
			(up-modify-goal i c:+ 1)
			(up-modify-goal g-temp c:+ 1)
			(up-jump-rule -2)
			)

			(defrule
			(up-compare-goal i g:< g-local-total)
			(unit-type-count villager-stone > 7)
			(building-type-count town-center > 0)
			(dropsite-min-distance stone < 255)	;still stone on the map
			(or
				(building-type-count-total town-center >= 2)
				(unit-type-count villager >= 50))
			(up-set-target-object search-local g: i)
			(goal g-remote-total 0)            ;no stone found
			=>
			(up-modify-goal i c:+ 1)
			(up-jump-rule -3)
			)

		;Calculate number of mining camps needed
		;Formula = Num stone miners / 7 (rounded up), minus the number of TCs and mining camps close to stone
		(defrule
		(unit-type-count villager-stone > 7)
		(building-type-count town-center > 0)
		(dropsite-min-distance stone < 255)	;still stone on the map
		(or
			(building-type-count-total town-center >= 2)
			(unit-type-count villager >= 50))
		(up-get-fact unit-type-count villager-stone g-temp-2)
		(up-modify-goal g-temp-2 c:z/ 7)
		(up-modify-goal g-temp-2 c:+ 1)
		(up-modify-goal g-temp-2 g:- g-temp)		;g-temp = number of TCs and mining camps close to stone
		(up-compare-goal g-temp-2 > 0)
		=>
		(set-goal g-need-stone-camp YES)
		(up-get-fact building-type-count-total mining-camp g-desired-num-mining-camp)
		(up-modify-goal g-desired-num-mining-camp c:+ 1)
		;(up-chat-data-to-self "Need new stone camp #%d" g: g-desired-num-mining-camp)
		)

		;No close mining camps, request additional mining camp
		(defrule
		(timer-triggered t-5-sec)
		;(up-compare-goal g-desired-num-mining-camp >= 2)
		(or
			(building-type-count mining-camp > 1)
			(game-time > 900))
		(game-time > 300)
		(dropsite-min-distance gold >= 5)
		(dropsite-min-distance gold < 255)
		(or
			(unit-type-count villager-gold > 0)
			(up-compare-goal g-desired-num-gold-vils > 0))
		(or
			(building-type-count-total town-center >= 2)
			(unit-type-count villager >= 50))
		;(resource-found gold)
		=>
		(up-get-fact building-type-count-total mining-camp g-temp)
		(up-modify-goal g-temp c:+ 1)
		(up-modify-goal g-desired-num-mining-camp g:max g-temp)
		;(up-chat-data-to-self "Desired mining camps (gold): %d" g: g-desired-num-mining-camp)
		)

		(defrule
		(timer-triggered t-5-sec)
		;(up-compare-goal g-desired-num-mining-camp >= 2)
		(or
			(building-type-count mining-camp > 1)
			(game-time > 1200))
		(game-time > 300)
		(dropsite-min-distance stone >= 5)
		(dropsite-min-distance stone < 255)
		(or
			(unit-type-count villager-stone > 0)
			(up-compare-goal g-desired-num-stone-vils > 0))
		(or
			(building-type-count-total town-center >= 2)
			(unit-type-count villager >= 50))
		;(resource-found stone)
		=>
		(up-get-fact building-type-count-total mining-camp g-temp)
		(up-modify-goal g-temp c:+ 1)
		(up-modify-goal g-desired-num-mining-camp g:max g-temp)
		;(up-chat-data-to-self "Desired mining camps (stone): %d" g: g-desired-num-mining-camp)
		)

		(defrule
		(or
			(goal g-town-under-attack YES)
			(or
				(unit-type-count 229 > 0)	;dead male gold miner
				(unit-type-count 221 > 0)))	;dead female gold miner
		=>
		(up-modify-goal g-desired-num-mining-camp c:+ 1)
		;(up-chat-data-to-self "Relocate gold camp: %d" g: g-desired-num-mining-camp)
		)

	;------------------
	;	Lumber Camps
	;------------------

		(load "The General 3/Functions/Reset")

		(defrule
		(game-time > 30)
		(up-gaia-type-count-total c: wood > 10)
		(or
			(and
				(unit-type-count villager-wood > 3)
				(dropsite-min-distance wood > 3))
			(up-compare-goal g-desired-num-wood-vils > 0))
		(building-type-count lumber-camp == 0)
		(up-pending-objects c: lumber-camp == 0)
		(up-compare-goal g-min-forest-distance > PENDING)
		(resource-found wood)
		=>
		(up-modify-goal g-desired-num-lumber-camp c:max 1)
		)

		(defrule
		(building-type-count lumber-camp == 1)
		(game-time > 300)
		(or
			(and
				(unit-type-count villager-wood > 6)
				(dropsite-min-distance wood > 3))
			(up-compare-goal g-desired-num-wood-vils > 5))
		(up-pending-objects c: lumber-camp == 0)
		(resource-found wood)
		=>
		(up-modify-goal g-desired-num-lumber-camp c:max 2)
		)

		(load "The General 3/Functions/Reset")

		;Request enough lumber camps to ensure max 8 lumberjacks per lumber camp or TC
		;First find how many TCs are close to wood, stored in g-temp
		(defrule
		(unit-type-count villager-wood > 16)
		(building-type-count town-center > 0)
		(dropsite-min-distance wood < 255)	;still wood on the map
		=>
		(up-full-reset-search)
		(up-find-local c: town-center c: 20)
		(up-filter-status c: status-pending c: list-active)
		(up-find-status-local c: town-center c: 5)
		(up-get-search-state g-local-total)
		(set-goal i 0)
		(set-goal g-temp 0)
		)

			(defrule
			(up-compare-goal i g:< g-local-total)
			(unit-type-count villager-wood > 16)
			(building-type-count town-center > 0)
			(dropsite-min-distance wood < 255)	;still wood on the map
			(up-set-target-object search-local g: i)
			=>
			(up-get-point position-object g-point-x)
			(up-set-target-point g-point-x)
			(up-reset-search 0 0 1 1)
			(up-reset-filters)
			(up-filter-distance c: -1 c: 6)
			(up-find-resource c: wood c: 6)
			(up-filter-status c: status-resource c: list-active)
			(up-find-resource c: wood c: 6)
			(up-get-search-state g-local-total)
			)

			(defrule
			(up-compare-goal i g:< g-local-total)
			(unit-type-count villager-wood > 16)
			(building-type-count town-center > 0)
			(dropsite-min-distance wood < 255)	;still wood on the map
			(up-set-target-object search-local g: i)
			(up-compare-goal g-remote-total >= 6)            ;6+ trees found
			=>
			(up-modify-goal i c:+ 1)
			(up-modify-goal g-temp c:+ 1)
			(up-jump-rule -2)
			)

			(defrule
			(up-compare-goal i g:< g-local-total)
			(unit-type-count villager-wood > 16)
			(building-type-count town-center > 0)
			(dropsite-min-distance wood < 255)	;still wood on the map
			(up-set-target-object search-local g: i)
			(up-compare-goal g-remote-total < 6)            ;6+ trees found
			=>
			(up-modify-goal i c:+ 1)
			(up-jump-rule -3)
			)

		;Calculate number of lumber camps needed
		;Formula = Num lumberjacks / 8 (rounded up), minus the number of TCs close to wood
		(defrule
		(unit-type-count villager-wood > 16)
		(building-type-count town-center > 0)
		(dropsite-min-distance wood < 255)	;still wood on the map
		=>
		(up-get-fact unit-type-count villager-wood g-temp-2)
		(up-modify-goal g-temp-2 c:z/ 8)
		(up-modify-goal g-temp-2 c:+ 1)
		(up-modify-goal g-temp-2 g:- g-temp)		;g-temp = number of TCs close to wood
		(up-modify-goal g-desired-num-lumber-camp g:max g-temp-2)
		;(up-chat-data-to-self "Desired LC %d" g: g-desired-num-lumber-camp)
		)

		;No close lumber camps, request additional lumber camp
		(defrule
		(timer-triggered t-5-sec)
		;(up-compare-goal g-desired-num-lumber-camp >= 2)
		(or
			(building-type-count lumber-camp > 1)
			(game-time > 600))
		(game-time > 300)
		(dropsite-min-distance wood > 3)
		(dropsite-min-distance wood < 255)	;still wood on the map
		(or
			(unit-type-count villager-wood > 0)
			(up-compare-goal g-desired-num-wood-vils > 0))
		(resource-found wood)
		=>
		(up-get-fact building-type-count-total lumber-camp g-temp)
		(up-modify-goal g-temp c:+ 1)
		(up-modify-goal g-desired-num-lumber-camp g:max g-temp)
		;(up-chat-data-to-self "Desired lumber camps: %d" g: g-desired-num-lumber-camp)
		)

		(defrule
		(or
			(goal g-town-under-attack YES)
			(or
				(unit-type-count 228 > 0)	;dead male lumberjack
				(unit-type-count 219 > 0)))	;dead female lumberjack
		=>
		(up-modify-goal g-desired-num-lumber-camp c:+ 1)
		;(up-chat-data-to-self "Relocate LC: %d" g: g-desired-num-lumber-camp)
		)

	;-----------
	;	Farms
	;-----------

		(load "The General 3/Functions/Reset")

		;Start with total food vils and reduce if we have shepherds, foragers, or hunters
		(defrule
		(building-available farm)
		=>
		(up-modify-goal g-desired-num-farm g:= g-desired-num-food-vils)
		)

		;Subtract needed farms if we have shepherds
		(defrule
		(up-compare-goal g-desired-num-farm > 0)
		(building-available farm)
		(or
			(up-set-target-by-id g: g-current-sheep-id)
			(unit-type-count villager-shepherd > 0))
		=>
		(up-modify-goal g-desired-num-farm c:- 6)
		(up-modify-goal g-desired-num-farm c:max 0)
		;(chat-local-to-self "reduce farms for sheep")
		)

		;Subtract needed farms if we have forage bushes near mill or have foragers
		(load "The General 3/Functions/Reset")

		(defrule
		(up-compare-goal g-desired-num-farm > 0)
		(building-available farm)
		=>
		(up-full-reset-search)
		(up-find-local c: mill c: 1)
		)

		(defrule
		(up-compare-goal g-desired-num-farm > 0)
		(building-available farm)
		(up-set-target-object search-local c: 0)
		; (up-object-data object-data-type == mill)
		=>
		(up-get-point position-object g-point-x)
		(up-set-target-point g-point-x)
		(up-full-reset-search)
		(up-filter-distance c: -1 c: 4)
		(up-filter-status c: status-resource c: list-active)
		(up-find-resource c: forage-class c: 1)
		(up-get-search-state g-local-total)
		)

		(defrule
		(up-compare-goal g-desired-num-farm > 0)
		(building-available farm)
		(or
			(unit-type-count villager-forager > 0)
			(up-compare-goal g-remote-total > 0))
		=>
		;(chat-local-to-self "reduce farms for forage")
		(up-modify-goal g-desired-num-farm c:- 6)
		(up-modify-goal g-desired-num-farm c:max 0)
		)

		;Subtract needed farms if we are gathering boar
		(defrule
		(up-compare-goal g-desired-num-farm > 0)
		(building-available farm)
		(up-set-target-by-id g: g-current-boar-id)
		=>
		(up-modify-goal g-desired-num-farm c:- 6)
		(up-modify-goal g-desired-num-farm c:max 0)
		;(chat-local-to-self "reduce farms for boar")
		)

		;Subtract needed farms if we are gathering deer
		(defrule
		(up-compare-goal g-desired-num-farm > 0)
		(building-available farm)
		(unit-type-count villager-hunter > 0)
		(or
			(up-set-target-by-id g: g-current-deer-id)
			(dropsite-min-distance deer-hunting < 4))
		=>
		(up-modify-goal g-desired-num-farm c:- 3)
		(up-modify-goal g-desired-num-farm c:max 0)
		;(chat-local-to-self "reduce farms for deer")
		)

		;cap dark age farms
		(defrule
		(or
			(up-compare-const MIN-SHEEP > 0)
			(or
				(up-compare-const FORAGE-PILE-1 > 0)
				(up-compare-const MIN-BOAR > 0)))
		(current-age == dark-age)
		=>
		(up-modify-goal g-desired-num-farm c:min 6)
		)

		(load "The General 3/Functions/Reset")

		;Build more mills if we need a lot of farms
		;First, find how many farms our TCs and mills can support
		(defrule
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(unit-type-count villager >= 40)
		=>
		(up-full-reset-search)
		(up-find-local c: town-center c: 40)
		(up-filter-status c: status-pending c: list-active)
		(up-find-status-local c: town-center c: 3)
		(up-get-search-state g-local-total)
		(up-modify-goal g-temp g:= g-local-total)
		(up-modify-goal g-temp c:* 12)						;prefer max 12 farms per TC
		(up-full-reset-search)
		(up-find-local c: mill c: 40)
		(up-filter-status c: status-pending c: list-active)
		(up-find-status-local c: mill c: 3)
		(up-get-search-state g-local-total)
		(up-modify-goal g-temp-2 g:= g-local-total)
		(up-modify-goal g-temp-2 c:* 8)						;prefer max 8 farms per mill
		)

		(defrule
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(unit-type-count villager >= 40)
		(up-modify-goal g-temp g:+ g-temp-2)				;get total number of farms our TCs and mills can support
		(or	
			(up-object-type-count-total c: farm g:> g-temp)
			(up-compare-goal g-desired-num-farm g:> g-temp))
		=>
		(up-get-fact unit-type-count-total mill g-temp-3)
		(up-modify-goal g-desired-num-mill g:max g-temp-3)
		(up-modify-goal g-desired-num-mill c:+ 1)
		; (up-chat-data-to-self "Build mill #%d for farms" g: g-desired-num-mill)
		)

	;-------------------
	;	Archery Range
	;-------------------

		(defrule
		(up-compare-goal g-age-status >= TO-FEUDAL)
		(or
			(up-compare-goal g-desired-num-archer > 0)
			(or
				(up-compare-goal g-desired-num-skirmisher > 0)
				(or
					(up-compare-goal g-desired-num-cavalry-archer > 0)
					(or
						(up-compare-goal g-desired-num-hand-cannoneer > 0)
						(or
							(up-compare-goal g-desired-num-slinger > 0)
							(up-compare-goal g-desired-num-genitour > 0))))))
		=>
		(up-modify-goal g-desired-num-archery-range c:max 1)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-FEUDAL)
		(or
			(goal g-primary-unit archer)
			(or
				(goal g-primary-unit skirmisher)
				(or
					(goal g-primary-unit cavalry-archer)
					(or
						(goal g-primary-unit hand-cannoneer)
						(or
							(goal g-primary-unit slinger)
							(goal g-primary-unit genitour))))))
		=>
		(up-modify-goal g-desired-num-archery-range c:max 1)
		)

		(defrule
		(current-age >= feudal-age)
		(or
			(goal g-current-strategy FL-RANGER)
			(or
				(goal g-current-strategy FL-GUERILLA)
				(or
					(goal g-current-strategy FL-SKIRMMETA)
					(or
						(goal g-current-strategy MIDF-FULL-ARCHERS)
						(or
							(goal g-current-strategy MIDF-FULL-RANGED)
							(goal g-current-strategy MIDF-FULL-SKIRMS))))))
		=>
		(up-modify-goal g-desired-num-archery-range c:max 2)
		)

		(defrule
		(current-age == feudal-age)
		(goal g-current-strategy FC-STRONGBOW)
		(or
			(building-type-count-total blacksmith > 0)
			(or
				(building-type-count-total market > 0)
				(building-type-count-total stable > 0)))
		=>
		(up-modify-goal g-desired-num-archery-range c:max 2)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-CASTLE)
		(goal g-current-strategy EARLYC-XBOWS)
		=>
		(up-modify-goal g-desired-num-archery-range c:max 2)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-CASTLE)
		(or
			(goal g-current-strategy FC-STRONGBOW)
			(or
				(goal g-current-strategy MIDC-XBOWS)
				(or
					(goal g-current-strategy MIDC-CAV-ARCHERS)
					(goal g-current-strategy MIDC-RANGED))))
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		=>
		(up-modify-goal g-desired-num-archery-range c:max 3)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-IMPERIAL)
		(or
			(goal g-current-strategy FI-SNIPER)
			(or
				(goal g-current-strategy EARLYI-ARBINGER)
				(or
					(goal g-current-strategy MIDI-ARBS)
					(or
						(goal g-current-strategy MIDI-CAV-ARCHERS)
						(goal g-current-strategy LATEI-TRASHBOWS)))))
		=>
		(up-modify-goal g-desired-num-archery-range c:max 4)
		)

		(defrule
		(current-age >= castle-age)
		(goal g-current-strategy BOOM-XBOWS)
		(or
			(unit-type-count villager >= 50)
			(or
				(goal g-game-focus DEFENSIVE)
				(goal g-game-focus AGGRESSIVE)))
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		=>
		(up-modify-goal g-desired-num-archery-range c:max 2)
		)

		(defrule
		(current-age >= castle-age)
		=>
		(up-modify-goal g-temp g:= g-desired-num-archer)
		(up-modify-goal g-temp g:+ g-desired-num-skirmisher)
		(up-modify-goal g-temp g:+ g-desired-num-cavalry-archer)
		(up-modify-goal g-temp g:+ g-desired-num-hand-cannoneer)
		(up-modify-goal g-temp g:+ g-desired-num-slinger)
		(up-modify-goal g-temp g:+ g-desired-num-genitour)
		)

		(defrule
		(up-compare-goal g-temp > 35)
		(up-compare-goal g-desired-num-archery-range < 2)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class archery-class)
			(or
				(goal g-primary-unit cavalry-archer)
				(or
					(goal g-support-unit-class archery-class)
					(goal g-support-unit cavalry-archer))))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-archery-range c:max 2)
		)

		(defrule
		(civilian-population >= 60)
		(up-compare-goal g-temp > 12)
		(up-compare-goal g-desired-num-archery-range < 2)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class archery-class)
			(goal g-primary-unit cavalry-archer))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-archery-range c:max 2)
		)

		(defrule
		(or
			(civilian-population >= 80)
			(current-age == imperial-age))
		(up-compare-goal g-temp > 12)
		(up-compare-goal g-desired-num-archery-range < 3)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class archery-class)
			(or
				(goal g-primary-unit cavalry-archer)
				(goal g-primary-unit hand-cannoneer)))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-archery-range c:max 3)
		)

		(defrule
		(civilian-population >= 100)
		(up-compare-goal g-temp > 25)
		(up-compare-goal g-desired-num-archery-range < 4)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class archery-class)
			(or
				(goal g-primary-unit cavalry-archer)
				(goal g-primary-unit hand-cannoneer)))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-archery-range c:max 4)
		)

		(defrule
		(current-age == imperial-age)
		(up-compare-goal g-temp > 25)
		(up-compare-goal g-desired-num-archery-range < 5)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class archery-class)
			(or
				(goal g-primary-unit cavalry-archer)
				(goal g-primary-unit hand-cannoneer)))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-archery-range c:max 5)
		)

		(defrule
		(or
			(civilian-population >= 100)
			(current-age == imperial-age))
		(up-compare-goal g-temp > 38)
		(up-compare-goal g-desired-num-archery-range < 6)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class archery-class)
			(or
				(goal g-primary-unit cavalry-archer)
				(goal g-primary-unit hand-cannoneer)))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-archery-range c:max 6)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(or
			(civilian-population < 20)
			(building-type-count-total town-center == 0))
		=>
		(set-goal g-desired-num-archery-range 0)
		)

		(defrule
		(goal g-game-focus DEFENSIVE)
		(civilian-population >= 50)
		(up-compare-goal g-desired-num-archery-range > 0)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class archery-class)
			(or
				(goal g-primary-unit cavalry-archer)
				(goal g-primary-unit hand-cannoneer)))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-archery-range c:+ 1)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(current-age >= castle-age)
		(civilian-population >= 80)
		(goal g-desired-num-archery-range 0)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		=>
		(set-goal g-desired-num-archery-range 1)
		)

		(defrule
		(goal g-game-focus BOOM)
		(up-compare-goal g-desired-num-archery-range > 1)
		(up-compare-goal g-desired-num-archery-range <= 3)
		=>
		(up-modify-goal g-desired-num-archery-range c:- 1)
		)

		(defrule
		(goal g-game-focus BOOM)
		(up-compare-goal g-desired-num-archery-range > 3)
		=>
		(set-goal g-desired-num-archery-range 3)
		)

		(defrule
		(goal g-game-focus AGGRESSIVE)
		(civilian-population >= 70)
		(up-compare-goal g-desired-num-archery-range > 1)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class archery-class)
			(or
				(goal g-primary-unit cavalry-archer)
				(goal g-primary-unit hand-cannoneer)))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-archery-range c:+ 1)
		)

		(defrule
		(goal g-game-focus AGGRESSIVE)
		(civilian-population >= 100)
		(up-compare-goal g-desired-num-archery-range > 3)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class archery-class)
			(or
				(goal g-primary-unit cavalry-archer)
				(goal g-primary-unit hand-cannoneer)))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-archery-range c:+ 1)
		)

	;------------
	;	Stable
	;------------

		(defrule
		(up-compare-goal g-age-status >= TO-FEUDAL)
		(or
			(up-compare-goal g-desired-num-scout-cavalry > 0)
			(or
				(up-compare-goal g-desired-num-knight > 0)
				(or
					(up-compare-goal g-desired-num-camel > 0)
					(or
						(up-compare-goal g-desired-num-battle-elephant > 0)
						(up-compare-goal g-desired-num-steppe-lancer > 0)))))
		=>
		(up-modify-goal g-desired-num-stable c:max 1)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-FEUDAL)
		(or
			(goal g-primary-unit scout-cavalry)
			(or
				(goal g-primary-unit knight)
				(or
					(goal g-primary-unit camel)
					(or
						(goal g-primary-unit battle-elephant)
						(goal g-primary-unit steppe-lancer)))))
		=>
		(up-modify-goal g-desired-num-stable c:max 1)
		)

		(defrule
		(current-age == feudal-age)
		(goal g-current-strategy MIDF-FULL-SCOUTS)
		(unit-type-count villager >= 32)
		=>
		(up-modify-goal g-desired-num-stable c:max 2)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-CASTLE)
		(or
			(goal g-current-strategy FC-KRUSH)
			(or
				(goal g-current-strategy FC-CRUSH)
				(or
					(goal g-current-strategy EARLYC-KNIGHTS)
					(or
						(goal g-current-strategy EARLYC-CAMELS)
						(or
							(goal g-current-strategy MIDC-KNIGHTS)
							(or
								(goal g-current-strategy MIDC-CAMELS)
								(goal g-current-strategy MIDC-CIRCUS)))))))
		=>
		(up-modify-goal g-desired-num-stable c:max 2)
		)
		
		(defrule
		(current-age >= castle-age)
		(or
			(goal g-current-strategy BOOM-KNIGHTS)
			(goal g-current-strategy BOOM-CAMELS))
		(or
			(unit-type-count villager >= 55)
			(or
				(goal g-game-focus DEFENSIVE)
				(goal g-game-focus AGGRESSIVE)))
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		=>
		(up-modify-goal g-desired-num-stable c:max 2)
		)

		(defrule
		(current-age == castle-age)
		(or
			(goal g-current-strategy MIDC-KNIGHTS)
			(or
				(goal g-current-strategy MIDC-CAMELS)
				(goal g-current-strategy MIDC-CIRCUS)))
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(unit-type-count villager >= 60)
		=>
		(up-modify-goal g-desired-num-stable c:max 3)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-IMPERIAL)
		(or
			(goal g-current-strategy EARLYI-PALASTORM)
			(or
				(goal g-current-strategy EARLYI-CAMELSTORM)
				(or
					(goal g-current-strategy EARLYI-CIRCUS-STOMP)
					(or
						(goal g-current-strategy MIDI-PALADINS)
						(or
							(goal g-current-strategy MIDI-CAMELS)
							(goal g-current-strategy MIDI-CIRCUS))))))
		=>
		(up-modify-goal g-desired-num-stable c:max 4)
		)

		(defrule
		(current-age >= castle-age)
		=>
		(up-modify-goal g-temp g:= g-desired-num-scout-cavalry)
		(up-modify-goal g-temp g:+ g-desired-num-knight)
		(up-modify-goal g-temp g:+ g-desired-num-camel)
		(up-modify-goal g-temp g:+ g-desired-num-battle-elephant)
		(up-modify-goal g-temp g:+ g-desired-num-steppe-lancer)
		)

		#load-if-defined HUN-CIV

			(defrule
			(current-age >= castle-age)
			(research-completed my-second-unique-research)
			=>
			(up-modify-goal g-temp g:+ g-desired-num-unique-unit)
			)
			
		#end-if

		(defrule
		(up-compare-goal g-temp > 35)
		(up-compare-goal g-desired-num-stable < 2)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class cavalry-class)
			(goal g-support-unit-class cavalry-class))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)
		=>
		(up-modify-goal g-desired-num-stable c:max 2)
		)

		(defrule
		(current-age >= castle-age)
		(civilian-population >= 50)
		(up-compare-goal g-temp >= 12)
		(up-compare-goal g-desired-num-stable < 2)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class cavalry-class)
			(and
				(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-stable c:max 2)
		)

		(defrule
		(or
			(civilian-population >= 80)
			(current-age == imperial-age))
		(up-compare-goal g-temp > 12)
		(up-compare-goal g-desired-num-stable < 3)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class cavalry-class)
			(and
				(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-stable c:max 3)
		)

		(defrule
		(civilian-population >= 100)
		(up-compare-goal g-temp > 25)
		(up-compare-goal g-desired-num-stable < 4)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class cavalry-class)
			(and
				(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-stable c:max 4)
		)

		(defrule
		(or
			(civilian-population >= 100)
			(current-age == imperial-age))
		(up-compare-goal g-temp > 38)
		(up-compare-goal g-desired-num-stable < 6)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class cavalry-class)
			(and
				(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-stable c:max 6)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(or
			(civilian-population < 20)
			(building-type-count-total town-center == 0))
		=>
		(set-goal g-desired-num-stable 0)
		)

		(defrule
		(goal g-game-focus DEFENSIVE)
		(civilian-population >= 50)
		(up-compare-goal g-desired-num-stable > 0)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class cavalry-class)
			(and
				(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-stable c:+ 1)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(current-age >= castle-age)
		(civilian-population >= 80)
		(goal g-desired-num-stable 0)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		=>
		(set-goal g-desired-num-stable 1)
		)

		(defrule
		(goal g-game-focus BOOM)
		(up-compare-goal g-desired-num-stable > 1)
		(up-compare-goal g-desired-num-stable <= 3)
		=>
		(up-modify-goal g-desired-num-stable c:- 1)
		)

		(defrule
		(goal g-game-focus BOOM)
		(up-compare-goal g-desired-num-stable > 3)
		=>
		(set-goal g-desired-num-stable 3)
		)

		(defrule
		(goal g-game-focus AGGRESSIVE)
		(civilian-population >= 70)
		(up-compare-goal g-desired-num-stable > 1)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class cavalry-class)
			(and
				(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-stable c:+ 1)
		)

		(defrule
		(goal g-game-focus AGGRESSIVE)
		(civilian-population >= 100)
		(up-compare-goal g-desired-num-stable > 3)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class cavalry-class)
			(and
				(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-stable c:+ 1)
		)

	;--------------
	;	Barracks
	;--------------

		(defrule
		(up-compare-goal g-age-status >= TO-FEUDAL)
		(or
			(building-type-count-total mining-camp > 0)
			(and
				(up-compare-goal g-desired-num-gold-vils == 0)
				(up-compare-goal g-desired-num-stone-vils == 0)))
		(up-compare-goal g-current-strategy < 1201)		;not doing a boom imp strategy
		=>
		(up-modify-goal g-desired-num-barracks c:max 1)
		)

		(defrule
		(current-age >= feudal-age)
		(or
			(up-compare-goal g-desired-num-militia > 0)
			(or
				(up-compare-goal g-desired-num-spearman > 0)
				(or
					(up-compare-goal g-desired-num-eagle-warrior > 0)
					(up-compare-goal g-desired-num-condottiero > 0))))
		=>
		(up-modify-goal g-desired-num-barracks c:max 1)
		)
	
		(defrule
		(up-compare-goal g-age-status >= TO-FEUDAL)
		(or
			(up-compare-goal g-desired-num-stable > 0)
			(up-compare-goal g-desired-num-archery-range > 0))
		(up-compare-goal g-desired-num-barracks < 1)
		=>
		(up-modify-goal g-desired-num-barracks c:max 1)
		)

		#load-if-defined GOTHIC-CIV

			(defrule
			(research-completed my-second-unique-research)
			(up-compare-goal g-desired-num-unique-unit > 0)
			=>
			(up-modify-goal g-desired-num-barracks c:max 1)
			)
			
		#end-if

		(defrule
		(current-age == feudal-age)
		(goal g-current-strategy MIDF-FULL-MAA)
		=>
		(up-modify-goal g-desired-num-barracks c:max 2)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-CASTLE)
		(goal g-current-strategy EARLYC-EAGLES)
		=>
		(up-modify-goal g-desired-num-barracks c:max 2)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-CASTLE)
		(or
			(goal g-current-strategy FC-EAGLES-REVENGE)
			(goal g-current-strategy MIDC-EAGLES))
		=>
		(up-modify-goal g-desired-num-barracks c:max 3)
		)

		(defrule
		(current-age == castle-age)
		(goal g-current-strategy BOOM-EAGLES)
		(or
			(unit-type-count villager >= 50)
			(or
				(goal g-game-focus DEFENSIVE)
				(goal g-game-focus AGGRESSIVE)))
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		=>
		(up-modify-goal g-desired-num-barracks c:max 2)
		)

		(defrule
		(current-age >= castle-age)
		(goal g-current-strategy BOOM-IMPERIAL)
		(or
			(goal g-game-focus DEFENSIVE)
			(goal g-game-focus AGGRESSIVE))
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		=>
		(up-modify-goal g-desired-num-barracks c:max 2)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-IMPERIAL)
		(or
			(goal g-current-strategy FI-FARMERTRON)
			(or
				(goal g-current-strategy FI-AGEOFSTONEWALLS)
				(or
					(goal g-current-strategy EARLYI-EL-DORADO)
					(or
						(goal g-current-strategy EARLYI-CHAMPFLOOD)
						(or
							(goal g-current-strategy MIDI-EAGLES)
							(or
								(goal g-current-strategy MIDI-CHAMPIONS)
								(goal g-current-strategy LATEI-CHAMPIONS)))))))
		=>
		(up-modify-goal g-desired-num-barracks c:max 4)
		)

		#load-if-defined GOTHIC-CIV

			(defrule
			(up-compare-goal g-age-status >= TO-IMPERIAL)
			(goal g-current-strategy MIDI-UNIQUE)
			(up-research-status c: my-unique-research >= research-pending)	;Anarchy
			=>
			(up-modify-goal g-desired-num-barracks c:max 4)
			)

		#end-if

		(defrule
		(current-age >= castle-age)
		=>
		(up-modify-goal g-temp g:= g-desired-num-militia)
		(up-modify-goal g-temp g:+ g-desired-num-spearman)
		(up-modify-goal g-temp g:+ g-desired-num-eagle-warrior)
		(up-modify-goal g-temp g:+ g-desired-num-condottiero)
		)

		#load-if-defined GOTHIC-CIV

			(defrule
			(current-age >= castle-age)
			(research-completed my-second-unique-research)
			=>
			(up-modify-goal g-temp g:+ g-desired-num-unique-unit)
			)
			
		#end-if

		(defrule
		(up-compare-goal g-temp > 35)
		(up-compare-goal g-desired-num-barracks < 2)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class infantry-class)
			(goal g-support-unit-class infantry-class))
		(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-barracks c:max 2)
		)

		(defrule
		(civilian-population >= 60)
		(up-compare-goal g-temp > 12)
		(up-compare-goal g-desired-num-barracks < 2)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class infantry-class)
			(and
				(up-object-type-count-total c: stable g:>= g-desired-num-stable)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-barracks c:max 2)
		)

		(defrule
		(or
			(civilian-population >= 80)
			(current-age == imperial-age))
		(up-compare-goal g-temp > 12)
		(up-compare-goal g-desired-num-barracks < 3)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class infantry-class)
			(and
				(up-object-type-count-total c: stable g:>= g-desired-num-stable)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-barracks c:max 3)
		)

		(defrule
		(civilian-population >= 100)
		(up-compare-goal g-temp > 25)
		(up-compare-goal g-desired-num-barracks < 4)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class infantry-class)
			(and
				(up-object-type-count-total c: stable g:>= g-desired-num-stable)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-barracks c:max 4)
		)

		(defrule
		(current-age == imperial-age)
		(up-compare-goal g-temp > 25)
		(up-compare-goal g-desired-num-barracks < 5)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class infantry-class)
			(and
				(up-object-type-count-total c: stable g:>= g-desired-num-stable)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-barracks c:max 5)
		)

		(defrule
		(or
			(civilian-population >= 100)
			(current-age == imperial-age))
		(up-compare-goal g-temp > 38)
		(up-compare-goal g-desired-num-barracks < 6)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class infantry-class)
			(and
				(up-object-type-count-total c: stable g:>= g-desired-num-stable)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-barracks c:max 6)
		)

		#load-if-defined GOTHIC-CIV

			(defrule
			(current-age == imperial-age)
			(or
				(goal g-primary-unit militiaman)
				(or
					(goal g-primary-unit spearman)
					(or
						(goal g-primary-unit condottiero)
						(and
							(goal g-primary-unit my-unique-unit)
							(research-completed my-second-unique-research)))))
			(up-compare-goal g-desired-num-barracks < 8)
			=>
			(up-modify-goal g-desired-num-barracks c:max 8)
			)

		#end-if

		(defrule
		(goal g-game-focus REBUILD)
		(or
			(civilian-population < 20)
			(building-type-count-total town-center == 0))
		=>
		(set-goal g-desired-num-barracks 0)
		)

		(defrule
		(goal g-game-focus DEFENSIVE)
		(civilian-population >= 50)
		(up-compare-goal g-desired-num-barracks > 0)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class infantry-class)
			(and
				(up-object-type-count-total c: stable g:>= g-desired-num-stable)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-barracks c:+ 1)
		)

		(defrule
		(goal g-game-focus BOOM)
		(up-compare-goal g-desired-num-barracks > 1)
		(up-compare-goal g-desired-num-barracks <= 3)
		=>
		(up-modify-goal g-desired-num-barracks c:- 1)
		)

		(defrule
		(goal g-game-focus BOOM)
		(up-compare-goal g-desired-num-barracks > 3)
		=>
		(set-goal g-desired-num-barracks 3)
		)

		(defrule
		(goal g-game-focus AGGRESSIVE)
		(civilian-population >= 70)
		(up-compare-goal g-desired-num-barracks > 1)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class infantry-class)
			(and
				(up-object-type-count-total c: stable g:>= g-desired-num-stable)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-barracks c:+ 1)
		)

		(defrule
		(goal g-game-focus AGGRESSIVE)
		(civilian-population >= 100)
		(up-compare-goal g-desired-num-barracks > 3)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(or
			(goal g-primary-unit-class infantry-class)
			(and
				(up-object-type-count-total c: stable g:>= g-desired-num-stable)
				(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)))
		=>
		(up-modify-goal g-desired-num-barracks c:+ 1)
		)

	;--------------------
	;	Siege Workshop
	;--------------------

		(defrule
		(or
			(goal g-game-focus BALANCED)
			(goal g-game-focus BOOM))
		(up-compare-goal g-age-status >= TO-CASTLE)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(building-type-count-total town-center >= 3)
		(or
			(up-compare-goal g-desired-num-battering-ram > 0)
			(or
				(up-compare-goal g-desired-num-mangonel > 0)
				(or
					(up-compare-goal g-desired-num-scorpion > 0)
					(up-compare-goal g-desired-num-bombard-cannon > 0))))
		=>
		(up-modify-goal g-desired-num-siege-workshop c:max 1)
		)

		(defrule
		(goal g-game-focus AGGRESSIVE)
		(up-compare-goal g-age-status >= TO-CASTLE)
		(or
			(up-compare-goal g-desired-num-battering-ram > 0)
			(or
				(up-compare-goal g-desired-num-mangonel > 0)
				(or
					(up-compare-goal g-desired-num-scorpion > 0)
					(up-compare-goal g-desired-num-bombard-cannon > 0))))
		(or
			(up-compare-goal g-target-military-parity >= 10)
			(goal g-attacking YES))
		=>
		(up-modify-goal g-desired-num-siege-workshop c:max 1)
		)

		(defrule
		(goal g-game-focus DEFENSIVE)
		(up-compare-goal g-age-status >= TO-CASTLE)
		(or
			(up-compare-goal g-desired-num-battering-ram > 0)
			(or
				(up-compare-goal g-desired-num-mangonel > 0)
				(or
					(up-compare-goal g-desired-num-scorpion > 0)
					(up-compare-goal g-desired-num-bombard-cannon > 0))))
		=>
		(up-modify-goal g-desired-num-siege-workshop c:max 1)
		)

		(defrule
		(current-age >= castle-age)
		=>
		(up-modify-goal g-temp g:= g-desired-num-battering-ram)
		(up-modify-goal g-temp g:+ g-desired-num-mangonel)
		(up-modify-goal g-temp g:+ g-desired-num-scorpion)
		(up-modify-goal g-temp g:+ g-desired-num-bombard-cannon)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(current-age >= castle-age)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(building-type-count-total town-center >= 3)
		(civilian-population >= 80)
		(up-compare-goal g-temp >= 5)
		(up-compare-goal g-desired-num-siege-workshop < 2)
		=>
		(up-modify-goal g-desired-num-siege-workshop c:max 2)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(building-type-count-total town-center >= 3)
		(civilian-population >= 100)
		(up-compare-goal g-temp >= 9)
		(up-compare-goal g-desired-num-siege-workshop < 3)
		=>
		(up-modify-goal g-desired-num-siege-workshop c:max 3)
		)

	;----------------
	;	Blacksmith
	;----------------

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(or
			(up-compare-goal g-game-focus != DEFENSIVE)
			(military-population >= 10))
		(up-compare-goal g-age-status >= TO-FEUDAL)
		=>
		(up-modify-goal g-desired-num-blacksmith c:max 1)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(goal g-age-status SAVE-FOR-CASTLE)
		(up-compare-goal g-desired-num-blacksmith == 0)
		(up-compare-goal g-desired-num-market == 0)
		(or
			(up-compare-goal g-desired-num-archery-range == 0)
			(up-compare-goal g-desired-num-stable == 0))
		(building-type-count-total blacksmith == 0)
		(building-type-count-total market == 0)
		(or	
			(building-type-count-total archery-range == 0)
			(building-type-count-total stable == 0))
		=>
		(up-modify-goal g-desired-num-blacksmith c:max 1)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(up-compare-goal g-age-status >= TO-FEUDAL)
		(current-age < castle-age)
		(up-object-type-count-total c: town-center > 0)
		(up-object-type-count-total c: lumber-camp g:>= g-desired-num-lumber-camp)
		(up-object-type-count-total c: dock g:>= g-desired-num-dock)
		(up-object-type-count-total c: mining-camp g:>= g-desired-num-mining-camp)
		(up-object-type-count-total c: market g:>= g-desired-num-market)
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		=>
		(up-modify-goal g-desired-num-blacksmith c:max 1)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(current-age >= castle-age)
		(up-object-type-count-total c: town-center >= 2)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: lumber-camp g:>= g-desired-num-lumber-camp)
		(up-object-type-count-total c: dock g:>= g-desired-num-dock)
		(up-object-type-count-total c: mining-camp g:>= g-desired-num-mining-camp)
		(up-object-type-count-total c: market g:>= g-desired-num-market)
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		(up-compare-goal g-age-status >= TO-FEUDAL)
		=>
		(up-modify-goal g-desired-num-blacksmith c:max 1)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(goal g-desired-num-blacksmith 0)
		(up-compare-goal g-desired-num-siege-workshop > 0)
		(up-compare-goal g-desired-num-blacksmith < 1)
		=>
		(up-modify-goal g-desired-num-blacksmith c:max 1)
		)

	;------------
	;	Market
	;------------

		(defrule
		(goal g-current-strategy FC-EAGLES-REVENGE)
		(up-compare-goal g-age-status >= TO-FEUDAL)
		=>
		(up-modify-goal g-desired-num-market c:max 1)
		)

		#load-if-defined BRITON-CIV

			(defrule
			(up-compare-goal g-age-status >= MID-CASTLE)
			(or
				(building-type-count-total town-center >= 3)
				(or
					(and
						(wood-amount >= 213)
						(building-type-count-total town-center >= 2))
					(or
						(up-compare-goal g-desired-num-trade-cart > 0)
						(goal g-town-under-attack YES))))
			=>
			(up-modify-goal g-desired-num-market c:max 1)
			)

		#else
			#load-if-defined SARACEN-CIV

				(defrule
				(up-compare-goal g-age-status >= MID-CASTLE)
				(or
					(building-type-count-total town-center >= 3)
					(or
						(and
							(wood-amount >= 350)
							(building-type-count-total town-center >= 2))
						(or
							(up-compare-goal g-desired-num-trade-cart > 0)
							(goal g-town-under-attack YES))))
				=>
				(up-modify-goal g-desired-num-market c:max 1)
				)

			#else
				#load-if-defined MALIAN-CIV

					(defrule
					(up-compare-goal g-age-status >= MID-CASTLE)
					(or
						(building-type-count-total town-center >= 3)
						(or
							(and
								(wood-amount >= 383)
								(building-type-count-total town-center >= 2))
							(or
								(up-compare-goal g-desired-num-trade-cart > 0)
								(goal g-town-under-attack YES))))
					=>
					(up-modify-goal g-desired-num-market c:max 1)
					)

				#else

					(defrule
					(up-compare-goal g-age-status >= MID-CASTLE)
					(or
						(building-type-count-total town-center >= 3)
						(or
							(and
								(wood-amount >= 450)
								(building-type-count-total town-center >= 2))
							(or
								(up-compare-goal g-desired-num-trade-cart > 0)
								(goal g-town-under-attack YES))))
					=>
					(up-modify-goal g-desired-num-market c:max 1)
					)

				#end-if
			#end-if
		#end-if

		(defrule
		(goal g-age-status SAVE-FOR-CASTLE)
		(up-compare-goal g-desired-num-market == 0)
		(up-compare-goal g-desired-num-archery-range == 0)
		(up-compare-goal g-desired-num-stable == 0)
		(building-type-count-total market == 0)
		(building-type-count-total archery-range == 0)
		(building-type-count-total stable == 0)
		=>
		(up-modify-goal g-desired-num-market c:max 1)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		=>
		(up-modify-goal g-desired-num-market c:max 1)
		)

		(defrule
		(or
			(up-compare-goal g-age-status >= LATE-IMPERIAL)
			(up-compare-goal g-desired-num-trade-cart > 0))
		=>
		(up-modify-goal g-desired-num-market c:max 3)
		)

		(defrule
		(or
			(up-compare-goal g-current-strategy == LATEI-TRASH)
			(up-compare-goal g-desired-num-trade-cart > 20))
		=>
		(up-modify-goal g-desired-num-market c:max 4)
		)

	;-----------------------------------
	;	GOAL 126: g-desired-num-monks
	;-----------------------------------

		;Get number of monks and missionaries wanted
		;Also, figure out if we have enough wood to build a monastery and a TC (if a TC is needed)
		(defrule
		(true)
		=>
		(up-modify-goal g-desired-num-monks g:= g-desired-num-monk)
		(up-modify-goal g-desired-num-monks g:+ g-desired-num-missionary)
		(up-get-fact building-type-count-total town-center g-temp)
		(up-modify-goal g-temp-2 g:= g-desired-num-town-center)
		(up-modify-goal g-temp-2 c:max 3)
		(up-modify-goal g-temp g:- g-temp-2)
		(up-modify-goal g-temp c:* -1)
		(up-setup-cost-data 1 g-food-cost)
		(up-add-object-cost c: town-center-foundation g: g-temp)
		(up-get-cost-delta g-food-delta)
		(up-reset-cost-data g-food-cost)
		(up-add-object-cost c: monastery c: 1)
		(up-modify-goal g-wood-delta g:- g-wood-cost)
		)

	;---------------
	;	Monastery
	;---------------

		(defrule
		(up-compare-goal g-age-status >= TO-CASTLE)
		(up-compare-goal g-desired-num-monks > 0)
		(goal g-town-under-attack NO)
		(building-type-count-total town-center >= 3)
		(or
			(up-compare-goal g-wood-delta >= 0)
			(up-object-type-count-total c: town-center g:>= g-desired-num-town-center))
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: blacksmith g:>= g-desired-num-blacksmith)
		(up-object-type-count-total c: market g:>= g-desired-num-market)
		=>
		(up-modify-goal g-desired-num-monastery c:max 1)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-CASTLE)
		(up-compare-goal g-desired-num-monks > 0)
		(goal g-town-under-attack NO)
		(building-type-count-total town-center >= 2)
		(up-compare-goal g-target-pop-parity > 0)
		=>
		(up-modify-goal g-desired-num-monastery c:max 1)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-CASTLE)
		(goal g-primary-unit-class monastery-class)
		=>
		(up-modify-goal g-desired-num-monastery c:max 3)
		)

		(defrule
		(goal g-age-status SAVE-FOR-IMPERIAL)
		(up-compare-goal g-desired-num-monastery == 0)
		(up-compare-goal g-desired-num-castle == 0)
		(building-type-count-total monastery == 0)
		(building-type-count-total castle == 0)
		=>
		(up-modify-goal g-desired-num-monastery c:max 1)
		)

	;----------------
	;	University
	;----------------

		(defrule
		(up-compare-goal g-game-focus > DEFENSIVE)	;Not REBUILD or DEFENSIVE
		(up-compare-goal g-age-status >= TO-CASTLE)
		(goal g-town-under-attack NO)
		(building-type-count-total town-center >= 3)
		(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
		(up-object-type-count-total c: barracks g:>= g-desired-num-barracks)
		(up-object-type-count-total c: archery-range g:>= g-desired-num-archery-range)
		(up-object-type-count-total c: stable g:>= g-desired-num-stable)
		(up-object-type-count-total c: siege-workshop g:>= g-desired-num-siege-workshop)
		(up-object-type-count-total c: blacksmith g:>= g-desired-num-blacksmith)
		(up-object-type-count-total c: market g:>= g-desired-num-market)
		(up-object-type-count-total c: monastery g:>= g-desired-num-monastery)
		(military-population > 25)
		=>
		(up-modify-goal g-desired-num-university c:max 1)
		)

		(defrule
		(up-compare-goal g-game-focus > DEFENSIVE)	;Not REBUILD or DEFENSIVE
		(goal g-age-status SAVE-FOR-IMPERIAL)
		(up-compare-goal g-desired-num-university == 0)
		(up-compare-goal g-desired-num-castle == 0)
		(building-type-count-total university == 0)
		(building-type-count-total castle == 0)
		=>
		(up-modify-goal g-desired-num-university c:max 1)
		)

		;Ballistics
		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(or
			(goal g-primary-unit archer)
			(and
				(goal g-support-unit archer)
				(up-compare-goal g-primary-unit-tech-progress >= SECONDARY-CASTLE-COMPLETE)))
		(up-compare-goal g-archer-tech-progress >= SECONDARY-CASTLE-COMPLETE)
		(up-research-status c: ri-ballistics == research-available)
		(building-type-count-total university == 0)
		(or
			(goal g-town-under-attack NO)
			(wood-amount >= 350))
		=>
		(up-modify-goal g-desired-num-university c:max 1)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(or
			(goal g-primary-unit skirmisher)
			(and
				(goal g-support-unit skirmisher)
				(up-compare-goal g-primary-unit-tech-progress >= SECONDARY-CASTLE-COMPLETE)))
		(up-compare-goal g-skirmisher-tech-progress >= SECONDARY-CASTLE-COMPLETE)
		(up-research-status c: ri-ballistics == research-available)
		(building-type-count-total university == 0)
		(or
			(goal g-town-under-attack NO)
			(wood-amount >= 350))
		=>
		(up-modify-goal g-desired-num-university c:max 1)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(or
			(goal g-primary-unit cavalry-archer)
			(and
				(goal g-support-unit cavalry-archer)
				(up-compare-goal g-primary-unit-tech-progress >= SECONDARY-CASTLE-COMPLETE)))
		(up-compare-goal g-cavalry-archer-tech-progress >= SECONDARY-CASTLE-COMPLETE)
		(up-research-status c: ri-ballistics == research-available)
		(building-type-count-total university == 0)
		(or
			(goal g-town-under-attack NO)
			(wood-amount >= 350))
		=>
		(up-modify-goal g-desired-num-university c:max 1)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(or
			(goal g-primary-unit slinger)
			(and
				(goal g-support-unit slinger)
				(up-compare-goal g-primary-unit-tech-progress >= SECONDARY-CASTLE-COMPLETE)))
		(up-compare-goal g-slinger-tech-progress >= SECONDARY-CASTLE-COMPLETE)
		(up-research-status c: ri-ballistics == research-available)
		(building-type-count-total university == 0)
		(or
			(goal g-town-under-attack NO)
			(wood-amount >= 350))
		=>
		(up-modify-goal g-desired-num-university c:max 1)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(or
			(goal g-primary-unit genitour)
			(and
				(goal g-support-unit genitour)
				(up-compare-goal g-primary-unit-tech-progress >= SECONDARY-CASTLE-COMPLETE)))
		(up-compare-goal g-genitour-tech-progress >= SECONDARY-CASTLE-COMPLETE)
		(up-research-status c: ri-ballistics == research-available)
		(building-type-count-total university == 0)
		(or
			(goal g-town-under-attack NO)
			(wood-amount >= 350))
		=>
		(up-modify-goal g-desired-num-university c:max 1)
		)

		(defrule
		(up-compare-goal g-game-focus != REBUILD)
		(or
			(up-compare-const UNIQUE-UNIT-CLASS == archery-class)
			(up-compare-const UNIQUE-UNIT-CLASS == cavalry-archer-class))
		(or
			(goal g-primary-unit my-unique-unit)
			(and
				(goal g-support-unit my-unique-unit)
				(up-compare-goal g-primary-unit-tech-progress >= SECONDARY-CASTLE-COMPLETE)))
		(up-compare-goal g-unique-unit-tech-progress >= SECONDARY-CASTLE-COMPLETE)
		(up-research-status c: ri-ballistics == research-available)
		(building-type-count-total university == 0)
		(or
			(goal g-town-under-attack NO)
			(wood-amount >= 350))
		=>
		(up-modify-goal g-desired-num-university c:max 1)
		)

		#load-if-defined BURMESE-CIV

			(defrule
			(up-compare-goal g-game-focus != REBUILD)
			(up-compare-const UNIQUE-UNIT-CLASS == cavalry-cannon-class)
			(or
				(goal g-primary-unit my-unique-unit)
				(and
					(goal g-support-unit my-unique-unit)
					(up-compare-goal g-primary-unit-tech-progress >= SECONDARY-CASTLE-COMPLETE)))
			(up-compare-goal g-unique-unit-tech-progress >= SECONDARY-CASTLE-COMPLETE)
			(up-research-status c: ri-ballistics == research-available)
			(building-type-count-total university == 0)
			(or
				(goal g-town-under-attack NO)
				(wood-amount >= 350))
			=>
			(up-modify-goal g-desired-num-university c:max 1)
			)

		#end-if

		;Chemistry
        (defrule
		(up-compare-goal g-game-focus > DEFENSIVE)	;Not REBUILD or DEFENSIVE
		(up-research-status c: ri-chemistry == research-available)
		(or
			(up-compare-goal g-desired-num-hand-cannoneer > 0)
			(or
				(up-compare-goal g-desired-num-bombard-cannon > 0)
				(or
					(up-compare-goal g-desired-num-cannon-galleon > 0)
					(up-compare-goal g-desired-num-bombard-cannon > 0))))
		(building-type-count-total university == 0)
        =>
		(up-modify-goal g-desired-num-university c:max 1)
        )

		;Siege Engineers
		(defrule
		(up-compare-goal g-game-focus > DEFENSIVE)	;Not REBUILD or DEFENSIVE
		(up-compare-goal g-primary-unit-tech-progress >= SECONDARY-IMPERIAL-COMPLETE)
		(up-compare-goal g-desired-num-siege > 0)
		(up-research-status c: ri-siege-engineers == research-available)
		(building-type-count-total university == 0)
		=>
		(up-modify-goal g-desired-num-university c:max 1)
		)

		;Masonry
		(defrule
		(up-compare-goal g-game-focus > DEFENSIVE)	;Not REBUILD or DEFENSIVE
		(current-age == castle-age)
		(up-compare-goal g-primary-unit-tech-progress >= ALL-CASTLE-COMPLETE)
		(up-compare-goal g-support-unit-tech-progress >= ALL-CASTLE-COMPLETE)
		(up-compare-goal g-eco-tech-progress >= ALL-CASTLE-COMPLETE)
		(up-research-status c: ri-masonry == research-available)
		(up-compare-goal g-desired-num-university < 1)
		=>
		(set-goal g-desired-num-university 1)
		)

		;Architecture
		(defrule
		(up-compare-goal g-game-focus > DEFENSIVE)	;Not REBUILD or DEFENSIVE
		(current-age == imperial-age)
		(up-compare-goal g-primary-unit-tech-progress >= SECONDARY-IMPERIAL-COMPLETE)
		(up-compare-goal g-support-unit-tech-progress >= SECONDARY-IMPERIAL-COMPLETE)
		(up-compare-goal g-eco-tech-progress >= ALL-CASTLE-COMPLETE)
		(or
			(up-research-status c: ri-masonry == research-available)
			(up-research-status c: ri-architecture == research-available))
		(up-compare-goal g-desired-num-university < 1)
		=>
		(set-goal g-desired-num-university 1)
		)

	;------------
	;	Wonder
	;------------

		(defrule
		(taunt-detected any-ally 37)
		(can-build wonder)
		=>
		(up-modify-goal g-desired-num-wonder c:max 1)
		(acknowledge-taunt this-any-ally 37)
		(chat-to-player this-any-ally "A wonder? Dunno why, but okay.")
		)

		(defrule
		(taunt-detected any-ally 37)
		(not
			(can-build wonder))
		=>
		(up-modify-goal g-desired-num-wonder c:max 1)
		(acknowledge-taunt this-any-ally 37)
		(chat-to-player this-any-ally "Can't build a wonder yet. Will build one soon.")
		)

	;-----------------
	;	Watch Tower
	;-----------------

		(defrule
		(goal g-town-under-attack NO)
		(goal g-position FLANK)
		(up-compare-goal g-desired-num-watch-tower < 1)
		(up-compare-goal g-enemy-strategy-type < FAST-CASTLE)
		(up-compare-goal g-age-status >= TO-FEUDAL)
		=>
		(up-modify-goal g-desired-num-watch-tower c:max 1)
		)

		(defrule
		(goal g-town-under-attack NO)
		(up-compare-goal g-enemy-units-in-town == 0)
		(goal g-position FLANK)
		(up-compare-goal g-desired-num-watch-tower < 1)
		(or
			(goal g-game-focus DEFENSIVE)
			(and
				(up-compare-goal g-target-military-parity <= -8)
				(military-population < 15)))
		(up-compare-goal g-age-status >= TO-FEUDAL)
		=>
		(up-modify-goal g-desired-num-watch-tower c:max 1)
		)

		#load-if-defined UP-3-PLAYER-TEAM

			(defrule
			(goal g-town-under-attack NO)
			(goal g-position FLANK)
			(up-compare-goal g-desired-num-watch-tower < 1)
			(up-compare-goal g-age-status >= TO-FEUDAL)
			=>
			(up-modify-goal g-desired-num-watch-tower c:max 1)
			)

		#end-if

		#load-if-defined UP-4-PLAYER-TEAM

			(defrule
			(goal g-town-under-attack NO)
			(goal g-position FLANK)
			(up-compare-goal g-desired-num-watch-tower < 1)
			(up-compare-goal g-age-status >= TO-FEUDAL)
			=>
			(up-modify-goal g-desired-num-watch-tower c:max 1)
			)

		#end-if

		(defrule
		(goal g-town-under-attack YES)
		(up-compare-goal g-desired-num-watch-tower >= 1)
		(up-compare-goal g-age-status >= TO-FEUDAL)
		=>
		(up-modify-goal g-desired-num-watch-tower c:= 0)
		; (chat-local-to-self "disable tower construction")
		)

		(defrule
		(goal g-game-focus REBUILD)
		(goal g-town-under-attack NO)
		(civilian-population >= 30)
		(building-type-count-total town-center >= 2)
		=>
		(up-modify-goal g-desired-num-watch-tower c:max 4)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(goal g-town-under-attack NO)
		(current-age >= feudal-age)
		(civilian-population >= 25)
		=>
		(up-modify-goal g-desired-num-watch-tower c:max 3)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(goal g-town-under-attack NO)
		(current-age >= feudal-age)
		(civilian-population >= 20)
		=>
		(up-modify-goal g-desired-num-watch-tower c:max 2)
		)

		(defrule
		(goal g-game-focus REBUILD)
		(goal g-town-under-attack NO)
		(current-age >= feudal-age)
		(civilian-population >= 10)
		=>
		(up-modify-goal g-desired-num-watch-tower c:max 1)
		)

		(defrule
		(or
			(unit-type-count 225 > 0)	;dead male builder
			(or
				(unit-type-count 213 > 0)	;dead female builder
				(population >= 70)))
		(up-compare-goal g-desired-num-watch-tower > 0)
		=>
		(set-goal g-desired-num-watch-tower 0)
		)

	;------------
	;	Castle
	;------------

		(defrule
		(up-compare-goal g-age-status >= TO-CASTLE)
		(or
			(up-compare-goal g-desired-num-unique-unit > 0)
			(or
				(up-compare-goal g-desired-num-trebuchet > 0)
				(goal g-current-strategy FC-CASTLE-DROP)))
		=>
		(up-modify-goal g-desired-num-castle c:max 1)
		)

		(load "The General 3/Functions/Reset")

		(defrule
		(up-compare-goal g-age-status >= MID-CASTLE)
		=>
		(up-setup-cost-data 1 g-food-cost)
		(up-add-object-cost c: castle c: 1)
		(up-add-object-cost c: town-center-foundation c: 1)
		)
			
		(defrule
		(up-compare-goal g-age-status >= MID-CASTLE)
		(building-type-count-total castle == 0)
		(or
			(and
				(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
				(building-type-count-total town-center >= 3))
			(stone-amount g:>= g-stone-cost))
		=>
		(up-get-fact building-type-count-total castle g-temp)
		(up-modify-goal g-desired-num-castle g:= g-temp)
		(up-modify-goal g-desired-num-castle c:+ 1)
		)

		(defrule
		(up-compare-goal g-age-status >= MID-CASTLE)
		(building-type-count-total castle > 0)
		(or
			(military-population >= 25)
			(or
				(civilian-population >= 100)
				(current-age >= imperial-age)))
		(or
			(and
				(up-object-type-count-total c: town-center g:>= g-desired-num-town-center)
				(building-type-count-total town-center >= 3))
			(stone-amount g:>= g-stone-cost))
		=>
		(up-modify-goal g-desired-num-castle c:max 3)
		)

		(defrule
		(up-compare-goal g-age-status >= MID-CASTLE)
		(goal g-current-strategy FC-CASTLE-DROP)
		(building-type-count castle > 0)
		(military-population >= 6)
		=>
		(up-modify-goal g-desired-num-castle c:max 2)
		)

		(defrule
		(up-compare-goal g-age-status >= MID-CASTLE)
		(goal g-current-strategy MIDC-UNIQUE)
		=>
		(up-modify-goal g-desired-num-castle c:max 2)
		)

		(defrule
		(up-compare-goal g-age-status >= TO-IMPERIAL)
		(or
			(goal g-current-strategy EARLYI-UNIQUE)
			(or
				(goal g-current-strategy MIDI-UNIQUE)
				(goal g-current-strategy LATEI-UNIQUE)))
		=>
		(up-modify-goal g-desired-num-castle c:max 4)
		)

		(defrule
		(goal g-game-focus DEFENSIVE)
		(up-compare-goal g-age-status >= TO-CASTLE)
		(goal g-desired-num-castle 0)
		=>
		(set-goal g-desired-num-castle 1)
		)

		(defrule
		(or
			(unit-type-count 225 > 0)	;dead male builder
			(unit-type-count 213 > 0))	;dead female builder
		(goal g-town-under-attack YES)
		=>
		(set-goal g-desired-num-castle 0)
		)
